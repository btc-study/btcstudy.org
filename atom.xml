<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BTC Study</title>
  
  <subtitle>学习比特币</subtitle>
  <link href="https://www.btcstudy.org/atom.xml" rel="self"/>
  
  <link href="https://www.btcstudy.org/"/>
  <updated>2025-10-31T04:07:54.099Z</updated>
  <id>https://www.btcstudy.org/</id>
  
  <author>
    <name>btcstudy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>比特币是威尼斯</title>
    <link href="https://www.btcstudy.org/2025/10/31/bitcoin-is-venice-by-allen-farrington/"/>
    <id>https://www.btcstudy.org/2025/10/31/bitcoin-is-venice-by-allen-farrington/</id>
    <published>2025-10-31T04:05:37.000Z</published>
    <updated>2025-10-31T04:07:54.099Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Allen Farrington</em></p><p><em>来源：<a href="https://allenfarrington.medium.com/bitcoin-is-venice-8414dda42070">https://allenfarrington.medium.com/bitcoin-is-venice-8414dda42070</a></em></p><p><em>作者注：本文已被选入作为同名图书《比特币就是威尼斯》的一个独立章节。该书由 Allen Farrington 和 Sacha Meyers 合作撰写，亚马逊购书链接在<a href="https://www.amazon.com/Bitcoin-Venice-Essays-Future-Capitalism/dp/B09TTTGT11/">此处</a>。</em></p><p><em>原文出版于 2021 年。</em></p></blockquote><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/Venice.webp" alt="Venice"></p><p>斯金纳（Quentin Skinner）对现代政治哲学萌芽的不朽概述《<a href="https://www.amazon.com/Foundations-Modern-Political-Thought-Vol/dp/0521293375/">现代政治思想的基础</a>》开篇是这样几句话：</p><blockquote><p><em>“早在 12 世纪中期，德语历史学家弗莱辛的奥托（Otto of Freising）便注意到，意大利北部出现了一种新的、引人注目的社会形式和政治组织。他指出的一个特点是，意大利社会显然已不再具有封建（feudal）特征。”</em></p></blockquote><p>虽然斯金纳关注的是政治哲学，不是经济史，他还是能轻松分辨出，这种社会变革是因为资本主义的萌芽而成为可能的。正如伟大的中世纪专家皮雷纳（Henri Pirenne）在其著作《<a href="https://www.amazon.com/Medieval-Cities-Origins-Princeton-Classics/dp/0691162395/">中世纪城市</a>》中对这个时期的这个地区的评论：</p><blockquote><p><em>“伦巴底（Lombardy）大区，东至威尼斯（Venice）、西至比萨（Pisa）和热那亚（Genoa），地中海（Mediterranean）的所有商业活动畅通无阻并融为一体，欣欣向荣、极为繁华。在美丽的平原上，城市蓬勃发展，如同丰收。肥沃的土壤让无限的扩张成为可能，与此同时，能够轻松获得市场，让原材料的进口和制成品的出口都一起繁荣起来。在那里，商业催生了工业，并且，随着工业的发展，贝加莫（Bergamo）、克雷莫纳（Cremona）、洛迪（Lodi）、维罗纳（Verona），所有的古老城镇、古罗马城市，全都焕发新生，还远比古典时代有活力得多。”</em></p></blockquote><p>皮雷纳还补充说，建立在商业和工业扩张的基础上，这些城市的兴起：</p><blockquote><p><em>“有力地促进了社会进步。而且，它还促进了一种新的‘劳动’概念的传播。以往，劳动意味着你是农奴；现在，劳动意味着你是自由人；这个事实的后果，是无可估量的（我们后面还会谈到）。最后，我还要多说一句，在 12 世纪展现出繁荣景象的经济复苏，反映出了资本的力量；而且，可能已经足以表明，它对人类的影响超过其它任何一个时期。”</em></p></blockquote><p>你可能不会知道，但是，封建主义似乎正在卷土重来。Joel Kotkin 在自己的精辟的论文《<a href="https://www.amazon.com/Coming-Neo-Feudalism-Warning-Global-Middle/dp/1641770945/">新封建主义的到来</a>》中预见了这种复活：</p><blockquote><p><em>“当然，这一次（的封建主义）看起来会有所不同：不会出现穿着闪亮盔甲的骑士、臣民们向领主致敬、一个有权的天主教廷强迫认同正统思想。我们即将看到的是一种新的贵族制 —— 在这个后工业经济时代，随着财富越加集中在少数人手中 —— 出现在美国以及其他地区。社会分层越来越固化，对于绝大部分人来说，向上流动的机会越来越少。一个思想领袖和意见制造者阶层，我称为 ‘clerisy’，为这种即将出现的层级制提供智识支持。随着向上流动的途径逐渐消失，自由资本主义模式也在全球范围内逐渐失去吸引力，取而代之的是新的学说，包括那些支持一种新封建主义的学说。”</em></p></blockquote><p>这些苦难，不能说全部、但一定有 <em>一些</em> ，可以可靠地归因于我在本系列文章的第二篇《<a href="https://allenfarrington.medium.com/the-capital-strip-mine-ec627e9fe40a">资本的露天矿山</a>》里介绍的情况：为了追求更高杠杆率的 “增长”，将资本的露天开采常态化。不拥有硬资产（hard assets）的人会在债务里越陷越深、实际上永远无法摆脱；如果不靠投机，就无法形成积蓄；无法负担生活刚需成本的不断膨胀 —— 而官方甚至不会承认有通胀哩。“官方” 消息的内容是 Christine Lagarde（时任国际货币基金组织（IMF）主席，现在是欧洲中央银行（ECB）主席）之流的自言自语：“ <em>比起储蓄得到了保护，还能有一份工作会更让人开心</em> ”；而世界经济论坛（WEF）预测，到了 2030 年，“ <em>你将什么都不拥有，但也无所谓，还是开心的</em> ”。提醒你，你将 <em>使用</em> 一些 <em>某人拥有</em> 的东西，但这个某人不会是你自己。</p><p>如果我们相信这些人是心口如一的，那么资本露天开采就不会停止 —— 实际上，是 <em>不能停止</em> —— 我们可能要像 弗莱辛的奥托 那样，寻找一切文明的萌芽，以期超越这个又重新生根的封建制。我们最终找到的可能是一些团体避免这种状态（封建制）的不同理由。我认为，对一些人来说，这个理由就是比特币。</p><p>什么意思呢？我敢肯定，对大部分人来说，如果这个理由即使不算可笑，也起码是夸张的，但实际上，这再平常不过了。它仅仅意味着，一些社会单元，会自愿清算掉循环错误定价的有毒贷款（self-referentially mispriced toxic loans），走向一种全球化、电子化、健全的、开源的、可编程的货币；并且，这些人将比不这样做的人以快得多的速度积累长期导向的资本。他们会获得一种更优越的基础，从而建立健康的社会和政治机构，与停滞不前的社会形成鲜明对比 —— 就像中世纪的威尼斯对比西罗马帝国的残余一样。从个人、家庭、朋友、邻居，到公司、城市、行业、国家，乃至整个世界，不论在什么层面，这种速度差都成立。我们只需拭目以待。</p><p>当然，可能没人会这么做，比特币可能会完全失败 …… 我这样说，主要是为了避免有人指责我迷信、投机狂热、一点也不严肃。但我 <em>不是</em> 为了用事后无法证伪的墙头草表述来假装博学。如果这还不够清楚的话，我很高兴能够公开声明：比特币极有可能会成功。而且，虽然一些重要理由可能会让它失败，“ <em>它太笨了</em> ”、“ <em>我不喜欢它</em> ”可不在其中。想要清楚地说明它可能失败的理由，你先要理解它。但大部分人并没有理解它。如我在本系列第一篇文章《<a href="https://allenfarrington.medium.com/wittgensteins-money-7cac8d0635cf">维特根斯坦的货币</a>》中说的那样，大部分人甚至不知道自己在看什么东西。他们也不太可能很快看清楚，因为他们不想看到它。科学哲学家汉森（Norwood Russell Hanson）<a href="https://www.amazon.com/Patterns-Discovery-Inquiry-Conceptual-Foundations/dp/0521092612/">可能会说</a>，他们的看法 <em>戴着理论滤镜</em>。此外，他们的理论还是错的。哈。</p><p>所以，有感于这种丰富多彩的气愤，比如 “ <a href="https://unchained-capital.com/blog/bitcoin-is-not-a-pyramid-scheme/"><em>它是一个庞氏骗局！</em></a>”、“ <a href="https://unchained-capital.com/blog/bitcoin-does-not-waste-energy/"><em>它浪费能源！</em></a> ”，以及“ <a href="https://unchained-capital.com/blog/bitcoin-is-not-backed-by-nothing/"><em>它背后什么都没有！</em></a>”，我会用我自己的色彩鲜明的离谱隐喻来完成这三部曲、尝试帮助人们理解 <em>正在发生的是什么事情</em> ，以及，为什么这些东西正好就像它们应该是的样子。</p><p>太离谱了，离谱到只有可能是真的 ……</p><h2 id="比特币是阿里阿德涅"><a href="#比特币是阿里阿德涅" class="headerlink" title="比特币是阿里阿德涅"></a>比特币是阿里阿德涅</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/Ariadne.webp" alt="Ariadne"></p><blockquote><p><em>任何积累了大量的财富、又独立于 军事-政治 控制机构的人都会遭遇一个问题：如何保护他已经获得的财产。一个商人，如果他的货物触手可得，除了指望得到某些实权人物的保护之外，没有任何办法能阻止本地的权贵随时夺取他的财产。要获得实质性的保护，曾经是非常昂贵的 —— 贵到足以扼杀私人资本的大规模积累。</em></p><p><em>—— 麦克尼尔（William McNeill）</em></p></blockquote><p>比特币常常被说成是在跟法币 “竞争”。在一定程度上，可以说确实如此；但我担心，这里有一种修辞上的危险 —— 它会误导你对这种 “竞争” 的理解。比如说，比特币与法币的竞争不是 <em>打架</em>，也不是冲突。比特币并不尝试摧毁它的对手，因为它并不 <em>尝试</em> 做任何事情，也不知道自己有什么对手。它对于谁会反对它、为什么要反对它，根本无知无觉。它只是一种替代选择、一个通气阀门、一个可选的退出路径。之所以构成竞争，只是因为它正显现出是一种远为优越的替代方案。它不是忒修斯（Theseus）用来对抗米诺陶洛斯（Minotaur，牛头怪）的宝剑，仅仅是一条可以走出迷宫的线索。比特币是阿里阿德涅（Ariadne）（译者注：在古希腊神话中，阿里阿德涅在给了忒修斯一个线团，使其能在进入米诺陶洛斯的迷宫之后原路退出）。</p><p>在日益增加的反对声音歇斯底里地诋毁比特币是天生邪恶（甚至是阴谋）的环境中，仅仅将上述修辞正常化，就有不可顾虑的价值。反对者们将不得不解释，（按照他们的想法）人们自由地互动有什么不对、为什么真正的善良只能来自强制。那些找出了一种办法来逃脱资本露天开采这窒息迷宫的人，难道不该采用它吗？他们欠那牛头怪什么了？</p><p>如果真的理解他们所面临的选择，谁会真的认为，人们应该用循环错误定价的有毒贷款来储蓄、而不是采用一种可以证明健全的电子不记名资产呢？或者，更简单地说，他们会觉得，持有一种纯粹是资产的货币，比持有一种明明白白 <em>定义是</em> 一种债权的货币，更没有意义吗？为什么不选择一种建立在免信任的可验证性上的金融系统，而要选择一个建立在不可验证的信任之上的系统呢？</p><p>是因为暴力威胁吗？毕竟，“罚没” 妥善保管的比特币的唯一办法，就是<a href="https://xkcd.com/538/">严刑拷打</a>。在《<a href="https://www.amazon.com/Pursuit-Power-Technology-Society-D/dp/0226561585/">追逐权力</a>》一书中，历史学家麦克尼尔解释说，在现代欧洲的早期，工业化、标准化武器和军事训练的努力产生了这样一种效果，“ <em>每一块钱税收所能产生的有组织暴力的规模和可控性都急剧上升</em> ”。不过，似乎可以合理认为，这样的回报率在近期可能出现了类似的急剧 <em>下降</em> ，就如德国的检察官们和路透社（Reuters）最发现的那样：</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/Reuters.png" alt="Reuters.png"></p><p style="text-align:center">- “德国检察官们查封了价值超过 6 亿美元的比特币。唯一的问题在于：他们并不能解锁这些钱，因为他不给他们口令。johnodonnell21 报道。<a href="https://x.com/Reuters/status/1357690223187161088">路透社</a>” -</p><p style="text-align:center">- 也可能他们没有意识到，只是发了这么一条推特。谁知道呢…… -</p><p>任何一种以真正敌意态度对待比特币的政策都值得仔细研究，因为它一定会出现。麦克尼尔提醒我们，哪怕是在 700 多年以前，“ <em>打破既有的行为模式，对于见证这一切的大多数人来说，都是令人遗憾的事</em> ”。我对这个问题并不抱有乌托邦式的看法 —— 相反，同意反乌托邦式的偏执并非一无是处，可以说是智力上的成人礼。比特币会被禁止的，会被禁止许多次、会在许多地方。但一个禁令就是对比特币的实用性和其自身道德错误的一次公开承认，可以说是最好的广告。禁令就是柏林墙（Berlin Walle）；禁令的任何碎片，总有一天会成为愚蠢和残酷镇压的见证物。比特币不会强迫任何人跟它站在一起。人们是自己来的，自己愿意站在那里的，因为他们就是想要这样 —— 因为比特币不管在实用上，还是道德上，都更加优越。</p><p>就像东柏林与西柏林的例子所表明的，重视和鼓励自愿互动与否的根本差异，会在社会层面显示出它的涟漪，也是值得探究的话题。使得，比特币也有不同的机制 —— 我后面会详细说 —— 但从这些机制中，会产生不同的行为；从这些行为，可以产生不同的文化；这些文化，又 …… 谁知道呢？</p><p>我不敢说我都知道，但我可以提供一些想法。首先，我们完全没有准备好面对让绝大部分财富和许多资本 <em>完全</em> 流动的社会影响。自从专业投资人 Marc Andreessen 提出 “ <a href="https://a16z.com/2011/08/20/why-software-is-eating-the-world/"><em>软件已经吞噬了整个世界</em></a> ” 的著名说法以来，我们已经往这个方向走了数十年。正如我在<a href="https://allenfarrington.medium.com/its-time-to-reflect-21673608f5a1">这篇文章</a>中说的，Andressen 的文章可能仍是本世纪最重要的金融专著，而许多金融行业的人还没有读过它，还有许多人以为他说的不是金融而是技术。如果 “技术” 意味着 “软件”、“软件” 意味着 “一切”、而 “一切” 等同于 “金融”，那你就可以说，这文章只跟 “技术” 有关。所以，你也是对的，但至少有三个地方犯了错（也许还不止哦）。</p><p>我所偏爱的对 Andreessen 的论证的哲学抽象是这样的：软件是生产性资本，而它的原材料是连贯的人类思想。它将独立的 熟练劳工-企业家 重新确立为一个经济参与者阶层，他们创建资本的能力来自人力，而非金融。自从工业革命将威尼斯式的资本主义蓝图切换成更加复杂的后继阶段、依赖于围绕不可移动的资本来组织和指挥劳工以来，这个阶层在经济景观中可以说已经小得不能再小了。这些参与者对金融资本家有巨大的议价能力，当前，他们常常通过要求公司股权来议价。但是注意，在现有的金融系统中，股权是在为资本创造铺路。这种议价能力永远只是前瞻性的 —— 这些工作者可以不断讨价还价、赚得他们还未创造出来的流动财富。</p><p>但比特币切断了这最后的联系。从理论上来说，许多资本现在都是流动的：它们不再需要停泊在某一个金融系统中。说 “一切” 不一定指 “金融”，但确实可以意味着 “一切”，尤其是紧闭（lockdown，可能指伴随新冠病毒 COVID-19 流行而来的旅行管制）的噩梦带来了一线曙光，让知识工作的工作者可以待在任何地方，而不是少数几个不适宜居住的大城市。让 Kotkin 感到遗憾的是：</p><blockquote><p><em>“大城市已经很大程度上成了吸引已经富裕的人的磁体，而不是向上流动性的基础。更少的工薪阶层和中产阶层家庭可以负担得起迁徙到巴黎、伦敦、东京、纽约、旧金山这样的地方。许多以前的居民，比如芝加哥的黑人中产阶层，已经离开、到别的地方生活。许多依然在这些城市工作的人，被迫忍受很长的通勤时间。随着中产阶层的减少，留下的是城市边缘人口，他们的生活依赖于城市，但常常只能勉强度日。”</em></p></blockquote><p>但可能不会再这样下去了。当然，无论这些高技能的、新得流动能力得 资本-劳工 在哪里重新汇聚，所有其它形式得工作也会变得可行 —— 这不需要肤浅地理解成一种精英主义的猜测，而应该看成是<a href="https://bitcoinurbanism.substack.com/">终于迈向可行的地方主义的蹒跚步伐</a>。</p><p>当然，实体资本依然重要。文化资本也是。专门指出反而显得奇怪。但那些处在能够从实体资本中收取保护性税收的人（可能还带着文化资本的诱惑），将需要适应这种新的现实。大棒不管用了，要有胡萝卜才行。你想怎么做？建一堵墙？那祝你好运。</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/race-amongst-jurisdictions.png" alt="race-amongst-jurisdictions.png"></p><p style="text-align:center">- “司法辖区将比特币吸引到本地的竞赛就在我们面前。大部分胜选的官员都还没有意识到他们处在一个如此大规模的竞赛中，但已经意识到的人 …… 优势多多 ……” -</p><p>在这篇令人赞叹的随笔《<a href="https://www.jstor.org/stable/2114533?seq=1">有组织暴力的经济后果</a>》中，历史学家洛纳（Frederic Lane）强调，在一个资本流动性比我们今日更强的时代，在使用和控制暴力上的主权间竞争的重要性：</p><blockquote><p><em>“如果所有贡品都被用于 ‘炫耀性消费’—— 这个词似乎特别适合旧制度（ancièn regime）下一个王子的排场 —— 增长就会因为缺乏投资而放慢。从国际贸易和殖民地中获得保护费的商人，虽然不是完全不浪费，但消费倾向可能较低。若是如此，则政府的较低利润与贸易企业的较高利润意味着更多的资本积累和更多增长。”</em></p></blockquote><p>类似地，麦克尼尔也观察到，威尼斯人和热那亚人在地中海的私人商业活动在 11 世纪的涨潮中，</p><blockquote><p><em>“老式命令社会的规则根本无法再像以往时代那样彻底地约束行为。街头小贩和商人，让自己对统治者和臣民都有用；并且，通过在商队道路和海路沿途的一个又一个港口寻求庇护，他们得以可以保护自己免遭税收和抢劫 —— 这些地方的统治者已经学会了不要对自己的收入和权力赖以存在的商业过度征税。”</em></p></blockquote><p>我们很有可能会回到这样一种动态中，而互联网的荒野会成为公海的精神继承者。</p><p>但在这样的社会中，金融会是什么样子？显然，从上文的描述看，金融 <em>不会消失</em> 。它只是会改变 —— 那么会变成什么样？我认为，有两条有用的答案。第一条是 <em>可以编程</em> ，它的本性就是不可预测，我们只知道它拥有潜力。类比成早期的互联网是陈词滥调，但确实有充分的理由。有了开放的准入和一个可以编程的界面，谁知道会发明出什么懂？谁知道创新迭代和组合的速度会有多么快？第二条是 <em>伊斯兰教</em>。</p><h2 id="比特币是清真的"><a href="#比特币是清真的" class="headerlink" title="比特币是清真的"></a>比特币是清真的</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/halal.webp" alt="halal"></p><p style="text-align:center">- 图片来自 <a href="https://unsplash.com/@bmefaraz">Abdullah Faraz</a> ，Unsplash 平台 -</p><blockquote><p><em>“个人可以因为在自己家里 ‘制造’ 货币而被逮捕；商业银行系统在做完全一样的事情时却拥有完全的法律保护。这里面没有公正 …… 有人说我们必须发展出一种伊斯兰金融来替代现代商业银行。但是我们必须这样做？烟草行业的伊斯兰替代就是没有烟草行业，而且，如果我们坚持原则，可能就会意识到，商业银行的伊斯兰替代就是没有商业银行。”</em></p><p><em>——Tarek El Diwany</em></p></blockquote><p>比特币可以说与伊斯兰金融的教训一致，这是我在跟 Saifedean Ammous 聊天时得出的洞见。简单来说，我们的意思是这样的：比特币是一种电子化的不记名资产，不是一种债务工具，它在安全保管时的自然状态就是处在金融机构之外。而且，因为无法在政治上方便的时候就铸造新的比特币，存款保险是无法实现的，所以贷款机构需要预先投入流动资本。因此，未来的中介机构将无法保证投资人免受因为债务人的活动而引起的损失。</p><p>而且，相对来说，资本的提供者将更不愿意接受有限的收益和无限的风险，尤其是考虑到那时候通货紧缩几乎是确定的，不像现在一样，不得不通过低波动的资本升值来追平通货膨胀。未来的储户（大部分时候）将要么单方面储蓄，要么要求分享股权的升值空间。供给将收缩，对金融杠杆的大规模需求将付出更高的价格才能留在剩余的市场中。</p><p>人际间的、非程序化的金融以外的部分，可能会跟伊斯兰金融禁令非常相似，债务的角色大大变弱，更多关注 <em>风险分摊</em> 而非 <em>风险转移</em>。比特币是清真的。</p><p>说清楚一些，得出这一结果的推理是非常特别的。在伊斯兰教中，货币债务的利息（riba， الربا）是违反道德的（haram，حرام）；而我认为，在比特币本位中，即使纯粹出于经济原因，债务利息也不太可能大规模存在，因为风险（最终！）会被妥当地定价，因此更多是合法地分享，而不是被不诚实地转嫁。虽然如此，（伊斯兰金融）最终的行为跟比特币社区中的文化规范有显然的道德相似性，首要的是 “低时间偏好”。伊斯兰学者 Abul Alā Mawdūdī（ابو الاعلی مودودی）<a href="https://www.amazon.com/Principles-Islamic-Economics-Sayyid-Mawdudi/dp/0860374920/">劝告</a>称：</p><blockquote><p><em>“穆斯林社区中的每个人都有责任量入为出。他不得让自己的支出超过自己的收入、然后迫使自己向他人伸手来维持自己的奢侈、使用不公平的工具来攫取其他人的财富、或是对他人负债以资助自己无止境的欲望，然后，为了清偿债务而消耗自己的资源、最终加入贫困者的行列。”</em></p></blockquote><p>即使我们不管底层的道德反对，更高层面上的态度的相似性也会迅速浮现。比如说，我们可能会认为，即使在比特币本位中，也依然会 <em>有人</em> 愿意供给和需求有息的风险资本；那么，为什么要阻止这种自愿的交换呢？伊斯兰教的反应基于 <em>haram</em> 特征（被认为是 “投机”）；给定创业内在的不确定性，为货币债务金融支付利息的承诺不可避免就是欺诈，因为债务人不知道也 <em>无法</em> 知道自己能不能完成义务。只有 <em>同等权利（pari passu）</em> 的股权是公平和诚实的；不仅如此，在资本供应者之间也不能引入不和谐的激励和愿景。又一次，我们会在对这些合约的道德性质的理解上出现分歧，但 Mawdūdī 对这种 “投机” 的泛滥的后果的预测，有明显的吸引力：</p><blockquote><p><em>“因为资本家（放贷者）与企业家（贷款人）之间的参与式合作缺乏合理和健康的关系，全球经济会承受极大的痛苦，并且高点和低点不断交替，它们会对世界经济的健康产生不利的影响。资本家的扼喉鼓动了投机和通过利息铸造货币的精神。这自然会毒害资本与企业的双边关系，现在利息的高涨和低落让整个世界的经济健康始终处在风险之中。”</em></p></blockquote><p>只要将 “所有债务” 替换为 “作为债务的货币” 并相应地追踪后果，比特币人可能会完全同意上面的段落。经济学家和著名的伊斯兰金融学者 Mohammad Siddiqi 在《<a href="http://siddiqi.com/mns/AVisionForTheFutureOfIslamicEconomics.htm">对未来伊斯兰经济的愿景</a>》中将两者直接联系起来，他指出，<em>“几乎所有流通中的货币都是负担利息的债务，让财富从资金的使用者转移给资本的拥有者。这在技术上，也就是对社会的支付工具的正常运转来说，并不是必要的。”</em> 在《利息的问题》中，Tarek El Diwany 提出了一个跟我在《<a href="https://allenfarrington.medium.com/the-capital-strip-mine-ec627e9fe40a">资本露天开采</a>》中提出的惊人相似的观点，而且更让人惊讶的是来自完全不同的角度：<em>“被污染的河流、腐烂的垃圾堆和资源耗尽的大海，可能只是为参与这场复利竞赛而要支付的第一份代价。”</em></p><p>不管你信不信，国际货币基金组织似乎在一定程度上也同意这个观点。在 2010 年一份名为 “全球危机对伊斯兰和传统银行的影响：比较研究” 的<a href="https://www.imf.org/external/pubs/ft/wp/2010/wp10201.pdf">工作论文</a>中，Maher Hasan 和 Jemma Dridi 得出结论：伊斯兰银行的运作模式是基于资产的，而不是基于债务的，<em>“这使他们的活动跟实体经济关联更加密切，而且倾向于减少催生泡沫。”</em> 这篇论文也包含了一本正经（却引发了搞笑效果）的解释：</p><blockquote><p><em>“投资性存款的 利润&#x2F;损失 共担特性，给伊斯兰银行提供了额外的缓冲。不过，这种特性在这次危机中并没有受到考验，因为绝大部分银行仍然是盈利的。此外，在此次危机和大部分国家货币宽松的大背景下，这种特点可能会使伊斯兰银行的盈利能力处于劣势（相比于传统银行）。”</em></p></blockquote><p>（在伊斯兰金融中）最接近于我们所知的 “loans（贷款）” 的东西是 “qard al-hasan（(قرض الحسن）”（一种没有利息、仁慈的贷款）和 “sukuk（صكوك）”（一种汇成池子、定期的股权投资）；奇怪的是，后者更像威尼斯的 “ colleganza ” ，而不是现代的场景金融工具。不论哪一种，都很少使用担保品；但在有担保的情况下，最终还有一个非常有趣的区别：担保品必须在期限中转移给债权人占有，因此，在违约的情况下，不会发生收回担保品的情形。跟伊斯兰金融中的所有东西一样，最终的理由总是公平和公正；那些在房屋按揭贷款中违约的人不会被赶出自己的房子 —— 因为房子早已由债权人占有和使用了，担保品从一开始就不能是 <em>清真的</em> 。这跟比特币的关联是，在一个健康的通缩环境中，可能会有激励让人们不要拿可以长期储存价值的硬资产来当作担保品，同时，有一种不断增长的背景激励、金融交易中的各方都想要获取和保留健全货币：</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/bitcoin-collateral.png" alt="image-20251030195923532"></p><p style="text-align:center">- “在一个比特币经济体中，你使用比特币作为担保品来借住房子；在法币经济中，你使用房子作为担保品来借入法币。已经习惯于通胀金融、从来没想过通缩金融（DeFi）的许多人，还会继续困惑。” -</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/how-it-works.png" alt="image-20251030200139239"></p><p style="text-align:center">- “这是怎么做到的呢？”“1. 房东获得存货，你得到自己要借住的房屋；2. 你提供比特币担保品；3. 每个月通过闪电网络给房东支付利息；4. 如果你的房东索求房屋，而你不归还，房东就拿走你的比特币担保。” -</p><p>你不需要认同伊斯兰金融的所有教条（也不必认同专门的哪一条），也能欣赏到，在认为它与比特币联系微弱的公认观点之外，尚有更加宽宏的观点。伊斯兰经济学和金融的研究引人入胜，因为（在我看来）它是我们称为 “西方” 的金融教义 —— 尽管它现在已经近乎是全球化的、无处不在 —— 的唯一一种系统化的、当代的、<em>成功的</em> 替代品。注意，举个例子，IMF 将 “伊斯兰银行” 与 “传统银行” 相对（而我在上文中将 “成功的” 标为斜体，以正确地区分和对比伊斯兰经济学与社会主义；关于这一点，读者可能有兴趣知道，Mawdūdī 的《人类的经济问题与伊斯兰解决方案》提供了我所读过的最简洁有效的反驳，在两页的论战中调和了米塞斯（Mises）和哈维尔（Havel））。</p><p>比特币所带来的概念性挑战的一个常见困难是，“西方” 金融教义的无处不在，使得人们很难完全站在它的主流框架之外严肃地思考。西方金融是 <em>水</em> 。但远景是 <em>可以</em> 实现的，教义也是 <em>可以</em> 挑战的。Mawdūdī、Siddiqi 和 El Diwany 挑战了它们、中本聪也挑战了它们、读者自己也可以挑战它们。将道德放在可以感知到的效率之上，本身就是一个深刻的出发点。</p><h2 id="比特币是重力"><a href="#比特币是重力" class="headerlink" title="比特币是重力"></a>比特币是重力</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/gravity.webp" alt="gravity"></p><p style="text-align:center">- 图片来自 <a href="https://pixabay.com/users/wikiimages-1897/">Wikilmages</a>，Pixabay -</p><blockquote><p><em>“借给政府的一定数量的金钱，以及由此可以收取的一定数量的利息，被假设是无风险的，因为这反过来是在假设政府可以征税、借款、乃至印出更多的金钱来偿还债务。这三种手段，对一个现代政府来说都是可用的，但我们不应该忽略这样一个事实：在把借来的钱投资出去时，政府无法获得无风险的回报。上面提到的选项，不过意味着把这些账单转移给其他人，直到物理世界无法免除风险这一事实重新显现出来。”</em></p><p>—— <em>Tarek El Diwany</em></p></blockquote><p>到目前为止，很难概念化到底是什么价值平静地退出了法币世界、进入了比特币世界。定价只发生在边际上，而跟比特币相交换的边际法币只是一种银行（自己重新贴上标签的）负债。如前面所讨论的，在边际上交换的比特币可能会引起更低的时间偏好，从而减少垃圾的消费，但可以想象这只是一种假想。</p><p>当人们不仅卖出自己的法币、自己的时间，还开始卖出真实资产时，事情就会发生变化。黄金可能是第一个受害者，原因很容易理解，因为（相比黄金）比特币在各方面都有所升级。但黄金并不具有系统层面的重要性。这个转变会引人注目，但不会产生别的影响。当积累的动力触及短期贷款、房地产和被动股权时，派对才会真正开始。</p><p>这三种才是人为制造的资产大类，因为它们在法律上（de jure）是生产性的，也就是可以产生现金，因此可以用未来收益来定价，然而，事实上（de facto）它们只是投机性的储蓄工具，因为用法币来长期储蓄是不可能的。但更重要的是，它们 <em>具有</em> 系统层面的重要性。它们的价格，总的来说，会影响资本的形成。本系列第二篇《<a href="https://allenfarrington.medium.com/the-capital-strip-mine-ec627e9fe40a">资本露天开采</a>》的摘要就说，这些价格是错误的，因此资本也在形成的过程中被尽快地挖走。逆转这一切是我们的长期希望所在，但预测这种逆转的短期机制则完全是另一回事。</p><p>关键的洞见在于，如果这些资产 <em>真的</em> 是用收益来定价的，那么我估计，这种类型的流动（译者注：应指资金从这些资产撤出、流向比特币）对长期持有者毫无影响，只是会让他们微微有些失望。但正因为它们不是，所以，任何持续的流出都很容易成为一种自我实现的预言。企业们使用短期信贷作为现金代用品，以对冲通胀，只是如今收益微乎其微。但是，它不是一种 “投资”。它没有升值空间，只是拥有足够的贬值保护。如果这种贬值保护消失了，那么整个命题就蒸发了 —— 而且注意，这很容易发生，都不需要持续卖出，而只需要在疏忽之下停止买入，因为短期信贷的生命正在于要不断轮替（展期）。接下来可能会发生的是，中央银行下场，通过资产购买来 “支持” 这些市场 —— 当然是可以想象到的对比特币效用的最好背书。</p><p>在这一切的背后，似乎有一个非常直接的问题，就是比特币的 “公允价值”。在还完全不确定如何比较比特币的价格与其 “基本面” 的时候，人们就是会犹豫不决、不敢把储蓄从众所周知、自然定价的产品（比如短期信贷）转移到比特币上。人们会逐渐察觉的是，在比特币上，传统的关系被逆转了。我并不认为，说 “比特币的价格 <em>就是</em> 它的基本面” 是非常准确的，但显然，它的价格，很大程度上是它的基本面的反身函数（reflexive function）：随着价格上涨，基本面也上行（而我们也必须记得，随着价格下跌，其基本面也下行。推动价格长时间下跌的持续攻击是目前的最大风险）。比特币<a href="https://satoshi.nakamotoinstitute.org/posts/bitcointalk/523/">在最小的时候是最弱的</a>，但随着时间推移就会越来越强。比特币是一个黑洞，持续吸收着其事件视界（event horizon）之外的不可持续的人造价值。它越长大，引力也就越大。比特币就是重力。</p><p>关于它的引力，“价值储存物” 论点是目前最明显的，也是最没有创意的，因为它只触及了比特币持续演化可能性的表面。想想看流动性加深的影响。注意，流动性与 “价格” 本身有微妙的不同。它是不断增加的大规模购买的前提。“MicroStrategy” 公司在一年以前是无法操作的。“苹果（Apple）” 公司和 “伯克希尔（Berkshire）”（我连这都敢预测？）也无法启动购买（虽然他们可能有一天会买）。</p><p>但市场深化还有更有趣的影响。比如说，它让 “Strike” 得以出现 —— 快速被复制、快速打败外汇市场：</p><p><a href="https://youtu.be/iSvMVWS9yoA">视频链接：比特币正在打败支付清算所</a></p><p>Strike 结合了法币流动性池的不断收紧的价差，与闪电网络的即时结算功能和相对可编程性，提供了无法比拟的外汇转账。这里有几项令人惊讶的特性，绝对值得我们去理解。</p><p>首先，法币结算基础设施是无法赶上这种服务的。我不是说这很难做到，我是说这根本不可能。同一司法辖区内、同一种通货之间的跨银行支付，或多或少可以做到免费和即时，而且在很多地区也确实做到了，因为所有这些转账金额都会被重新标记为一笔银行债务，或者，在最糟糕的情况下，互为交易对手的银行之间的净资金流动，都可以打包成大规模并妥善结算，从而给终端用户提供较低的成本（甚至零成本）。但是，货币不同、司法辖区不同，甚至两者兼有时，这就不可能了 —— 根本上，<em>因为</em> 法币是一种债务工具。在这一语境下，我们认为是简单的 “支付” 的东西，更像是信贷的转发。转发链条上每一个参与者都需要相信下一个参与者，并且，在转发之前，还要确定价格（不仅包括运营开销，还包括这种可以感知到的风险），因为实际的请求权（claim）要在很久、很久之后才能得到结算。那如果是支付 <em>流</em> 呢？天方夜谭。最狂野的梦里都没有这种东西。而在 Strike 中，这些都不相关。闪电网络没有支付数额下限，而且立即结算，事情就结束了。</p><p>而且，这种服务 <em>完全</em> 不会让用户暴露在比特币价格的风险中。虽然，它存在并且深化了市场的事实，直接为比特币的基本面作了贡献，因此比特币的价格会上涨。如果这个系统的重度用户们有一天发现，他们更想要让收到的转账保持健全、开源、可编程货币的形式，那么，整个过程就更加简单了 ……</p><p>还没结束呢。闪电网络基础设施还很年轻、很小，而且需要投入价值才能成长。想要让以比特币计价的资本运转起来，除了在竞争性的流动性和路由中寻找回报，还有更好的办法吗？随着比特币的法币价格上涨，参与扩大闪电网络的激励也会增加，而这又会提高 Strike 以及其它服务商在闪电网络中路由法币支付的效率，然后又会加深比特币的法币市场的深度。闪电网络的规模越大、流式支付的前景所带来的机会就越多、就能更好地为去中心化的基础设施提供资金 —— 比如说，激励运行 Tor 退出节点、“Sci-Hub” 这样的公司所寻找的存储和路由技术、游戏行业的可访问和可移植经济、非平台的内容变现以及无广告的内容驱动 app，还有字面意义上还没有人能想到的东西。所有这些都会增加闪电网络的功用，也就是增加比特币的功用。进入这个轨道的东西越多，这个轨道就越大。这是元宇宙的 “<a href="https://en.wikipedia.org/wiki/Jevons_paradox">杰文斯悖论</a>”！</p><p>更深的市场也会间接让 “<a href="https://www.forbes.com/sites/billybambrough/2020/06/16/exclusive-borrowing-dollars-against-bitcoin-and-crypto-is-about-to-get-easier/">基于比特币储备发放法币贷款</a>” 合法化。虽然名义上是为了允许合成机构杠杆，但这种服务的正常化也会降低人们卖出比特币的激励，与比特币在给定时间点被广泛接受为日常支付工具的程度成反比。将会有 Pierre Rochard 说的 “<a href="https://nakamotoinstitute.org/mempool/speculative-attack/">投机攻击</a>”，甚至不需要人们有意识或者主动，只是明智的事情。只要矿工能够使用这项服务（发放贷款）来支付电费，哪怕只是一部分，边际供应也会消失。它也会让信用卡返点计划、工资分配以及（再说一遍）还没有人想象到的事更加可行。可能从名义上看，这微不足道，但更多是获得思想支持（而不是法币支持）。小规模的购买会带来大规模的购买。</p><p><a href="https://www.citadel21.com/why-the-yuppie-elite-dismiss-bitcoin">富有智慧的</a>、成熟的、读过常春藤盟校工商管理硕士、拿过 CFA（注册金融分析师）证书的读者，可能会把我这整段的推理和我对它的热情，比拟为 “GameStop 事件”，金融界的专属笑话 —— 傲慢自大的散户以为自己是在惩罚巨头，没想到只是将自己的积蓄挥霍在一个笑话上，而 “Citadel” 公司是最终的赢家（先说明，这不是我的解读，但却是常见解读。我的理解是，这些散户完全知道自己在干什么，而且他们可以证明这一点，只要你愿意 <a href="https://www.reddit.com/r/wallstreetbets/comments/ip6jnv/the_real_greatest_short_burn_of_the_century/"><em>看一看</em></a> ）。我鼓励这些读者们更加严肃地思考跟所有这些情形相关的博弈理论，尤其是如果先是黄金然后是短期 <em>国债</em> 落入比特币的轨道。</p><p>你可能会认为，这完全是不着边际，但是，委内瑞拉（Venezuela）、伊朗（Iran）、北朝鲜（North Korea）、新加坡（Singapore）的中央银行，都不会同意你，这仅仅是现在我们数得上来的名字。中央银行囤积将会成为接下来十年的决定性的宏观经济现象，而来自<a href="https://balajis.com/why-india-should-buy-bitcoin/">技术专家的的囤积倡议</a>将成为决定性的政治现象之一。完全流动、无法发膜的资本，将被吸引到最欢迎它的地方，并与之产生化学反应，随它而来的人力资本也是如此。那些拥有地缘政治对手的国家，如果选择禁止比特币，就是自讨苦吃。如果有一天，中国开始给俄罗斯用比特币区块链上的美元稳定币支付天然气，然后 <em>用上比特币</em>，别说我没提醒你要多想一想。</p><p>仔细想象，甚至 GameStop 事件也正儿八经跟这个讨论有关。它表明，相当一部分的冒牌的民粹主义怨恨，是找错了对象；打击这些小人物的真正罪魁祸首不是 Citadel、“Sequoia”、美国证券交易委员会（SEC）、美联储（Fed）的幕后交易，而是<a href="https://www.bloomberg.com/news/articles/2021-01-29/clearing-firms-prevent-cascading-failures-q-a-with-larry-tabb">在对手方风险机制下股权清算的局限性</a>。想象一下，哪怕只想一瞬间，跟一种安全的电子化不记名资产锚定的 token 化股权证书，没有对手方，<em>立即</em> 结算，你能够想象吗？Citadel 可能是短期的赢家，但长期的赢家，是侧链上的 token 化股权。</p><h2 id="比特币即理性"><a href="#比特币即理性" class="headerlink" title="比特币即理性"></a>比特币即理性</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/1_PxzfSo5raLUlhpehzDbgdA.webp" alt="1_PxzfSo5raLUlhpehzDbgdA"></p><p style="text-align:center">- 照片来自 <a href="https://unsplash.com/@aaronburden">Aaron Burden</a>，Unsplash 平台 -</p><blockquote><p><em>“想象一种语言就是想象一种生活形态。”</em></p><p><em>—— 维特根斯坦（Ludwig Wittgenstein）</em></p></blockquote><p>“领英（LinkedIn）” 创始人 Reid Hoffman 竟然在 <a href="https://tim.blog/2015/08/31/the-oracle-of-silicon-valley-reid-hoffman-plus-michael-mccullough/">Tim Ferris 的播客</a>上潦草地说比特币就像一种维特根斯坦语言游戏，不加任何说明！在我拿起指挥棒之前，我想引用维特根斯坦的《<a href="https://www.amazon.com/Philosophical-Investigations-Ludwig-Wittgenstein/dp/1405159286/">哲学研究</a>》和那句格言，<em>“一个词语（word）的含义就是它在那种语言中的用法”</em>。换个词（word）来说（我这不是在玩梗哈），Hoffman 认为，只有将参与者们的行动解释为本质上由 TA 与其他人的交流组成，因此用一种成形的语法来表达他们的 <em>意思</em> 并依赖于这种语法来理解其他人的 <em>意思</em>，比特币才是可以理解的。</p><p>我认为，有必要再一次引用汉森，来理解一个实际的文盲局外人 —— 一个（诚然是讽刺的）货币语义理论的拥护者 —— 在面对这种语言游戏时候的处境。如果感知总是戴着理论滤镜，而如果我们的理论否认了一种新货币从零开始生长的可能性，并且这种货币的形式是一种我们并不懂得的语言，并且我们又不学习它因为我们认为它不可能存在 —— 那么我们 <em>必定</em> 不能够理解它。</p><p>比特币可以理解为一种语言游戏，这就解释了为什么它天生是和平的。货币是一种信息系统，记录和更新谁做了别人认为有价值的工作，这样，信用就可以普遍化、可以扩展到整个社会。 Frederic Lane 和 Reinhold Mueller 在《<a href="https://www.amazon.com/Money-Banking-Medieval-Renaissance-Venice/dp/1421436086/">中世纪及文艺复兴时代威尼斯的货币和银行</a>》中指出，<em>“‘交易媒介’ 和 价值标准’ 两者都是模糊不清的，所以 ‘货币性’ 就只是一个程度问题”</em>，以及，<em>“在概念上和经验上，这两者都是可以相互分离的。”</em></p><p>记录和更新是一个技术问题，而且候选的技术解决方案应该这样评估：不仅要看它们是否以及多大程度上适合 <em>充分模糊</em> 的定义，而且要看 <em>它们如何工作、效果好不好</em>。是石币（Rai stones）、金币、美元计价的银行账务；实体的或电子的、抽象的还是具象的、是债务还是纯粹的资产。比特币所提供的解决方案可以说是最纯粹的，因为它将这种信息捕获为 <em>言辞（speech）</em> —— 我们只需要使用软件来检查语法。</p><p>又如 <a href="https://www.youtube.com/watch?v=B2I0FB2Wn50">Ross Stevens 在 SaylorCon 大会</a>上澄清的那样，Ammous 造出来词语 “跨越空间的适销性” 和 “跨越时间的适销性”，已经在辞典中牢牢站住。在把比特币理解为一种语言、把货币理解为一种信息系统的背景下，值得进一步品读。时间适销性的本质是健全性（soundness）；空间适销性的本质是便携性。在比特币出现以前，这两者无法兼得；经济的发展使得对货币的市场需求日渐变得纯粹是信息性的，因为商业变得非常复杂，钱币的空间移动已无法高效支持。但信息，从本质上来说，是不稀缺的，所以，为了保持信息论货币的稀缺性，也就是它的时间适销性，需要人们信任一个中心化的真相来源。</p><p>注意，这并不意味着 “法币”，更多是 “信托”，这个词来自拉丁文中的 “信任”：<em>fiducia</em> 。<em>相对</em> 谨慎的银行家持有 <em>相对</em> 稳健的钱币作为储备，也就是 “银行货币” —— 支付则完全由一家银行的账户的贷记和借记 来完成 —— 在 13 世纪的威尼斯，这是 <em>相对</em> 值得信赖的，而且事实上，也确实成为主导、蓬勃发展。<a href="https://www.jstor.org/stable/2112936?origin=JSTOR-pdf">更不用说</a>，在热那亚、佛罗伦萨、巴塞罗那和布鲁日，还可以通过汇票的交易来互操作；所有这些在时间适销性上都稍微差一些，但也许地理适销性变得更强。不过，当然，比特币完全解决了两者的紧张关系。它是电子化的（也就是 <em>信息化的</em>），又是稀缺的。我们获得了电子邮件那样的便携性，同时，又无需信任，只需验证。</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/look-at-me.webp" alt="look-at-me"></p><p style="text-align:center">- 用梗图来表达这个历史和技术论点 -</p><p>一笔比特币交易就是一次全球演讲（global speech），表达的是这样一种意思：<em>“我，可被证明是货币供给量的这一部分 x 的主人，现在要把它转让给别人”</em>，并且，这种语言是每个人永远不会忘记，而且无法用来说话的。这就是为什么总有人尝试禁止比特币，但却几乎毫无疑问会失败。比特币是终极的地下出版物。比特币即理性（logos）。</p><p>这也是乐观主义的一个理由，因为社会普遍承诺要保护政治上不受欢迎的言论（speech）。我知道有人会说我天真，但我确信，未来 20 年里最重要的美国最高法院判决，将是裁定广播比特币交易的权利受到宪法第一修正案的保护。在此之前，虽然比特币的合法性依然悬而不决，我完全期待一位国会议员会援引国会特权、在参议院或者众议院中通过口述十六进制数字来“广播” 一笔交易。</p><p>接下来，可能是用推特发布这笔交易、把它写进公开的证词、印到旗帜上 —— 最后印到 T 恤和徽章上、以实物形式出现在抗议活动上。<em>不要为难我的比特币节点！</em> 要么让不计其数的数字、文字、颜色都成为非法的 —— 不管它们到底是什么意思 —— 要么，就得接受比特币正在生长。</p><h2 id="比特币是工艺"><a href="#比特币是工艺" class="headerlink" title="比特币是工艺"></a>比特币是工艺</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/1_jO2bCGjCfkZ4qR9lUPtd4w.webp" alt="1_jO2bCGjCfkZ4qR9lUPtd4w"></p><p style="text-align:center">- 图片来自 <a href="https://unsplash.com/@garett3">Garett Mizunaka</a>，Unsplash 平台 -</p><blockquote><p><em>“威尼斯人不是思想家，他们是行动者。作为顶尖的经验主义者，他们不信任抽象的理论。”</em></p><p><em>—— John Julius Norwich</em></p></blockquote><p>记录和更新转移价值的演讲活动，是一个技术问题，因此比特币是一种技术解决方案。它不是一种关于事物 <em>应该如何运作</em> 的观念；它是 <em>能够工作</em> 的真实事物。虽然这个观察可能显得草率，但其中的区别是非常重要的。</p><p><a href="https://www.youtube.com/watch?v=hy8JhNgU8eI#t=18m13s">Nic Carter 最近在 Frances Coppola 上也讲到了这一点</a>：为了从头做一个苹果派，你需要先创造出一个宇宙；他的意思是，如果你想要创建一种强大、快速结算且带有终局性的互联网支付系统，你需要先发明比特币。没有别的替代方案 <em>能够工作</em> 。非常清楚，比特币所解决的问题 <em>不仅是个学术问题</em> ，更是人类文明化的核心问题，<em>能够运行</em> 是更加重要的。比特币是工艺。</p><p>我认为，这就抓住了绝大部分新人在尝试理解比特币的细节时可能面临的最大障碍，因为，从表面上看，作为一种工程结构，比特币是完全不合理的。<em>矿工干的是<strong>什么</strong>？！？钱币<strong>怎么</strong>存储的？！？</em> 等等 —— 我们都有过这样的内心对话。即使是具有数学天赋、能够跟密码学原语玩耍的人，可能也会非常合理地认为，<em>比特币是完全荒谬的，这世界根本没问题</em> —— 如果他们不能理解更广大的背景的话。但对背景有了恰当的理解，我们就可以确定地说，<em>它荒谬得正好符合它的目标，因为这一切就是<strong>有问题</strong></em>。</p><p>然而，还有一类怀疑人士，自称欣赏比特币的一部分乃至大部分设计，但无法完全认同，因为有一些比特币似乎无法完全解决的（无甚所谓的）问题、或是在解决问题的方法上，有一些（微不足道的）问题。</p><p>（译者注：作为一个俗语，作者在这里的用词 “pet problem” 应该是熟悉英语的读者易于理解的，至少在这上下文中是如此，用中文来说，就是 “没什么大不了、不足挂齿的小毛病”。然而，如果你在搜索引擎里搜索，绝大部分置顶的 AI 搜索功能会将它理解为它的字面意思：“宠物的问题”，比如猫猫精神紧张；令人不禁莞尔又感叹，或许这个词很快将会因为 AI 占领人们的头脑而不复存在。）</p><p>Coppola 很可能就是其中一员。我会说 Peter Schiff 和 Mike Green 也是。他们都是有趣又严肃的人，看起来对比特币所触及的许多问题也有正确的态度，唯独不愿正视 <em>比特币本身</em>，令人难以理解。关于比特币，这些人都采取了这种那种迂腐的诡辩，看起来非常高深，实际上是最浮夸、最不严肃的立场，因为他们根本没有提供任何实用的东西。对待现实，他们并不客观，只把它当成他们希望它是的样子。他们的 “解决方案” 也是干净、圆滑、根本没有希望的。比特币客观地对待现实；比特币看起来丑，但它真的有用。</p><p>这种观点可能永远不会消失，哪怕早在 2011 年 5 月，Gwern 就在《<a href="https://www.gwern.net/Bitcoin-is-Worse-is-Better">比特币大巧不工</a>》中全面驳斥了这中观点：</p><blockquote><p><em>“为了实现去中心化，比特币作出的牺牲是极为丑陋的 —— 但却是非常实用的。对比特币的第一反应，哪怕来自友好的密码学家、电子货币爱好者，也几乎都是极为消极的、并且强调这种（可以感知到的）低效率和（相对于绝大部分密码学）较弱的安全保证。这些批评让 ‘完美成了进步的死敌’，并没有意识到比特币的潜力。然而，作为 ‘大巧不工’ 的一个案例，比特币的丑陋的低效率原型成功地创造了一种安全的去中心化的电子货币，它有无限长的时间可以等待成功，这已足以让它最终被采用、改进并成长为一种安全的全球电子货币。”</em></p></blockquote><p>秉持这种工程哲学，求知者就能免受种种<a href="https://alexdanco.com/2021/01/22/the-michael-scott-theory-of-social-class/">空洞的后见之明</a>的干扰，比如 Nassim Taleb（塔勒布）关于 “<a href="https://medium.com/opacity/bitcoin-1537e616a074">复杂系统</a>”、“<a href="https://twitter.com/nntaleb/status/1360276917992230919">波动性</a>”、“<a href="https://twitter.com/nntaleb/status/1274692670502383617?ref_src=twsrc%5Etfw">量纲转变</a>” 的胡言乱语，以及 Eric Weinstein <a href="https://www.youtube.com/watch?v=QCKCQNFsJUw">说的</a>，<em>“我们需要抛弃区块链，使之成为一种局部强制执行的守恒定律，用计算节点系统来取代时间和空间”</em>。Eric，如果你想 <em>把比特币嵌入物理学的规范场论（gauge theory）</em>，那么请加油。我等着读你写的 BIP（比特币升级提议）。请 <em>身体力行</em> 。不要一边用分析语言（metalanguage）重复着<a href="https://en.wikipedia.org/wiki/Colorless_green_ideas_sleep_furiously">乔姆斯基式的句子</a>，一边又指望别人会严肃对待它。一种去中心化的货币不是由没有颜色的绿色观念构造的。</p><h2 id="比特币是威尼斯"><a href="#比特币是威尼斯" class="headerlink" title="比特币是威尼斯"></a>比特币是威尼斯</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/1_UvMTaJHEydTXko-aeFFgQg.webp" alt="1_UvMTaJHEydTXko-aeFFgQg"></p><blockquote><p><em>“在整个文艺复兴时代晚期，共和主义的观念在许多话题中被讨论和赞美，其中，对独立和自治的传统价值观念的最持久的效忠，来自威尼斯。当意大利的其他地区屈服于贵族的统治的时候，威尼斯人从未放弃他们传统的自由。”</em></p><p>—— 斯金纳</p></blockquote><p>我常常发现，对比特币的类比，如果不够透明，就不可避免有种种缺陷，最终带来困惑大于帮助。然而，威尼斯有一种神秘的吸引力，使我无法将它归为纯粹的幻想。作为一种通过拥抱贸易和资本形成而脱离封建制的社会和政治秩序，它当然具有启发性。但还不止于此。显然，比特币不是一个 <em>城市</em> ，但它是一个系统，一个符号；（作为这样的符号）它超越了自己的代码实例，就像威尼斯超越了自己的岛屿和泻湖。</p><p>有些比较既可爱，又容易。威尼斯非常、非常易守难攻，以至于进攻根本没有用。它的治理模式不透明到令人头昏，而且根源上（constitutianally）抵制癫狂（seizure）。如果癫狂还是成为一种现实的威胁，就会触发一种免疫反应，围绕危险形成创新。传说中，Bajamonte Tiepolo 的暴动被击退，并不是由于公社（Commune）的武装力量，而是一位老妇人从窗口丢出一块石头；这不就是原始的 <em>“用户激活的软分叉”</em> 吗？当然了，怎么就不是呢。当然，如何才能走出与货币贬值为首要特征的黑暗时代？看看皮雷纳的观察：</p><blockquote><p><em>“如果我们承认（也不得不承认），13 世纪佛罗伦萨（Florence）的弗罗林（florins）和威尼斯的杜卡特（ducats）等金币的重新出现，是欧洲经济复兴的特征，那么反过来说也是正确的：8 世纪放弃金币，也是经济严重衰退的表现。”</em></p></blockquote><p>威尼斯的相对平均主义（relative egalitarianism）。John Julius Norwich 在《<a href="https://www.amazon.com/History-Venice-John-Julius-Norwich/dp/0679721975/">威尼斯史</a>》中写道，威尼斯之所以声名远扬，<em>“是因为它的司法系统为富人和穷人、贵族和工匠、威尼斯人和外国人提供无偏私的保护；因为，在理论上完全如此，在现实中大部分情况下也确实如此：在法律面前，生活在圣马可（St Mark）旗帜下的每个人都是平等的。”</em> 皮雷纳指出，这种态度根植于商业的必要性，因此延伸到城市自己的管辖范围和内部事务之外：<em>“威尼斯人没有任何忌讳。他们的宗教是商人的宗教。只要生意有利可图，他们就不在乎穆斯林是基督徒的敌人。”</em> 类似地，比特币也与政治无关，或者，恰如其分是 “敌人也可用的货币”，但 Terry Crewes 的铭心刻骨的轶事尤为让我触动：</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/clubhouse-1.png" alt="clubhouse-1.png"></p><p style="text-align:center">- “我认为密码货币就是未来。”“我是这样被说服的。当时我在米兰参加会议，需要支付许多费用，超出了可以从 ATM 机提取的数额。所以我让一家银行给我汇钱，也出示了所有的文书，但银行经理还是拒绝了我，因为我是一个黑人。” -</p><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/clubhouse-2.png" alt="clubhouse-2.png"></p><p style="text-align:center">- “那一刻我知道了现在的金融系统不是为我准备的。”“而比特币可不会管我是不是黑人。” -</p><p>威尼斯常年蔑视教廷（Church）的宣言。而教廷正对应着 Kotkin 所说的现代 <em>clerisy</em>，他们是精英阶层的品味塑造者、正统思想的思想家；他们已经选择，并且毫无疑问会继续选择 —— 正如皮雷纳所总结的 —— <em>“轻蔑和敌视商业复兴，（认定）它从一开始就是一项耻辱和焦虑的源头”</em>。</p><p>但我认为，（比特币和威尼斯）最为显著的共性是，它们都将迥异的理念融合为金融的坚固基石。很少商业技术是在中世纪和文艺复兴时代的威尼斯发明的 —— 复式记账法可能是从热那亚借用而来的，最初由黎凡特（Levant）传入意大利；其中最有用的数字系统，众所周知，来自印度，由阿拉伯人通过波斯、黎凡特和马格里布（Maghreb）传入；其它大部分有助于商业管理的技术，可能都是由阿拉伯人和君士坦丁堡传入的；而当时材料工业的颈部主要来自中国。但威尼斯将所有这些熔冶于一炉；可以说，最晚在 15 世纪初，现代金融业的绝大部分元素，在威尼斯就已经出现了；自那以来，很少有什么是真正的 <em>发明</em> ，更多是进一步的组合、标准化、扩容以及现代化。在我看来，只有中央银行及其操作，既成为了现实，又是完全的创新。</p><p>当然，自那以来，科技、工业和社会都取得了巨大的进步，但我们仍然遵循着威尼斯的金融传统，却完全不明白其中的缘由。就连 “银行” 这个词（的金融学含义）也起源于威尼斯，源自里亚托桥（Rialto Bridge）旁边货币兑换人的 <em>banca</em>（“长凳”）。Lane 和 Mueller 指出：<em>“如今人们已经普遍同意，真正的银行业，并非由货币借贷或典当业务发展而来，而是从铸币的双向兑换发展而来。”</em> 现代银行业是技术早已解决的一个问题的遗留产物。</p><p>以下是 Lane 的《<a href="https://www.amazon.com/Venice-Maritime-Republic-Frederic-Chapin/dp/080181460X/">威尼斯：海上共和国</a>》对 14 世纪威尼斯金融基础设施的解释；我认为，要理解 <em>今天</em> 信用卡网络和银行结算机制所扮演的角色，它（这段解释）是完美的坚实基础：</p><blockquote><p><em>“威尼斯银行家的主要职责并非发放贷款，而是代表客户进行支付操作。即便一位商人的宝箱中藏有大量铸币，如果每次买东西都要取出这些铸币、确保每枚铸币都是真币并且状态良好，那既麻烦又危险。而且，他也不想每次卖东西时又重复一遍。他更愿意通过一位知名银行家的账簿上贷记（credit）一笔来收款。他可以用这笔贷记资金来支付下一次的购买。这些贷记资金不会（像今天一样）通过开具支票来转移，而是，付款人要亲自出现在里亚托桥旁教堂的门廊，去找那位坐在长凳上的银行家，而这位银行家则会将账簿摊开给他。付款人会口头指示银行家将款项转至收款人账户。银行家会按照指示在自己的账簿上进行记录，这是一份正式的公证记录，因此无需收据。通常会有四五位这样的银行家，在里亚托桥旁营地的摊位上营业。任何有头有脸的商人都会拥有一个银行账户，以便能够通过银行进行转账和收款。这些账户被称为 “banche di scritta” 或 “del giro”，因为它们的主要功能是记录转账，然后根据商人的指令将贷记资金从一个账户转到（girare）另一个账户。”</em></p></blockquote><p>如果我们加入汇票交易、信贷创造和浮动的国债，则这些都是 <em>账本</em> 所具有的功能的自然延伸 —— 当然，我们要减去一种在一开始就存入、随时可以提取的硬储备资产—— 除此之外，没有什么需要解释的了。请注意，这也预示了用于结算的比特币和用于支付的闪电网络 —— 它们的信任最小化、原生数字化、可编程和去中心化特性 —— 会极大地改进这种体系。比特币可能是一种魔法互联网货币，但更重要的是，它是 <em>为互联网而设计的</em> 货币。在 2009 年之前，你可以即时向世界任何地方的任何人发送任何信息 …… 除了最重要的信息：价值。现在，我们赶上来了。</p><p>常常有人评论说，比特币更多是应用密码学过去发明的一种巧妙的组合，自身算不上一项 <em>发明</em> 。我非常同意这种浪漫的想法：比特币是被发现的，而不是被发明出来的。比特币是让经济发展进入下一个伟大阶段的基础。比特币是威尼斯。</p><h2 id="比特币是……"><a href="#比特币是……" class="headerlink" title="比特币是……"></a>比特币是……</h2><p><img src="/../images/bitcoin-is-venice-by-allen-farrington/1_gM13LjfM76uKUW6lVLJoFA.webp" alt="1_gM13LjfM76uKUW6lVLJoFA"></p><p style="text-align:center">- 照片来自 <a href="https://unsplash.com/@vegesblue">Christian Puta</a>，Unsplash 平台 -</p><blockquote><p><em>“太阳底下没有新鲜事：一种正统思想总会变得狭隘、顽固、唯利是图、道德败坏、仇视异议。这一遍又一遍上演。也许，这该视为正统思想的成熟；一旦一种思想同意成为正统，那这就是它的终局。但如果这种事情发生在现代科学身上的话，如果不让人感到惊讶，也起码会觉得有点好笑 —— 因为它不厌其烦地宣称，建立它是为了追求真理，而不是为了保护成见 …… 如果要出现变化，那么，变化需要来自外部。必须来自边缘。”</em></p><p><em>—— Wendell Berry</em></p></blockquote><p>五彩斑斓的离谱隐喻最终消失，只剩下最令人印象深刻的事实：比特币已然存在。比特币 <em>存在</em> 。这是无法否认的，哪怕你可以忽略它存在的理由 —— <a href="https://allenfarrington.medium.com/the-capital-strip-mine-ec627e9fe40a">我们的货币系统是竭尽所能露天开采资本的</a> —— 可以误解它的崛起 —— <a href="https://allenfarrington.medium.com/wittgensteins-money-7cac8d0635cf">主流的货币观念否决它靠的是定义而不是观察</a>。</p><p>维特根斯坦曾经问一位朋友，<em>“告诉我，为什么人们说，太阳围绕地球转的想法，比地球围绕太阳转的想法更加自然？”</em> 这个朋友说，<em>“嗯，显然，这只是因为<strong>看起来</strong>大地不动而太阳在动。</em>” 维特根斯坦回应说，<em>“那么，什么<strong>景象</strong>，能够<strong>显得</strong>是地球在旋转呢？”</em></p><p>如果景象已是一种全球化、电子化、健全的、开源的可编程货币正在从零开始，那就更让人相信啦。</p><p><em>感谢 <a href="https://twitter.com/giacomozucco">Giacomo Zucco</a>、<a href="https://saifedean.com/">Saifedean Ammous</a>、<a href="https://twitter.com/obaidkav">Obaid Khan</a> 和 Robert Natzler 对本文的边际和贡献。</em></p>]]></content>
    
    
    <summary type="html">中本聪主题狂想曲</summary>
    
    
    
    
    <category term="货币" scheme="https://www.btcstudy.org/tags/%E8%B4%A7%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>Spark 和 Ark：看看我们最新的比特币 Layer 2 解决方案</title>
    <link href="https://www.btcstudy.org/2025/10/28/spark-and-ark-a-look-at-our-newest-bitcoin-layer-twos/"/>
    <id>https://www.btcstudy.org/2025/10/28/spark-and-ark-a-look-at-our-newest-bitcoin-layer-twos/</id>
    <published>2025-10-28T10:34:53.000Z</published>
    <updated>2025-10-31T04:07:54.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Seth For Privacy</em></p><p><em>来源：<a href="https://bitcoinmagazine.com/technical/spark-and-ark-a-look-at-our-newest-bitcoin-layer-twos">https://bitcoinmagazine.com/technical/spark-and-ark-a-look-at-our-newest-bitcoin-layer-twos</a></em></p></blockquote><p>在我为 <del><a href="https://cakewallet.com/">Cake Wallet</a></del> 寻找最佳的解决方案、给用户提供友好、非托管的闪电网络使用体验时，我 <em>深深</em> 陷入了 Spark 和 Ark 的兔子洞。两者都是比特币 Layer 2 网络的非常新颖的方法，并且内核中都设计了通过闪电网络的支付、跟广大的比特币网络互操作。虽然两者都可以“仅仅”用于闪电支付，但两者都有可能在未来的几个月、几年中迅猛地生长，用在不限于支付的众多场景中。</p><p>先要说明的是，虽然 Spark 和 Ark 从表面上来看非常相似，它们的实际用法和实现方式是相去甚远的。</p><h2 id="为什么我们需要新的-Layer-2-？"><a href="#为什么我们需要新的-Layer-2-？" class="headerlink" title="为什么我们需要新的 Layer 2 ？"></a>为什么我们需要新的 Layer 2 ？</h2><p>究其核心，比特币是自由的终极工具，但因为区块空间约束，我们知道，不可能容纳地球上的绝大部分人口都在区块链上收发交易。因此我们有了闪电网络，它让一笔得到区块链确认的交易可以支撑几乎无数笔不在区块链内确认（即所谓“链外”）的交易，这就扩大了比特币基础层的有用性，也使得更多人能够使用比特币来收发交易。</p><p>虽然闪电网络在扩大比特币支付吞吐量上提供了一种很有前景的方法，最终人们意识到，最适合它的角色是称为一个互操作层，而不是作为终端用户工具。链上操作要求、流动性管理、在线要求，等等障碍，都让用户友好、自主保管的闪电网络使用体验近乎无法实现。这已经很明显了，因为绝大部分的闪电钱包和用户场景都使用了托管模式或者联盟托管模式，就是为了简化用户体验和实现难度。</p><p>Spark 和 Ark 给比特币世界带来的最大好处在于，它们在一开始就给了普通的开发者更加简单和轻松的方式来给用户提供闪电网络使用体验，同时，它们还可以大大拓展闪电支付以外的功能。</p><h2 id="简单说-Ark"><a href="#简单说-Ark" class="headerlink" title="简单说 Ark"></a>简单说 Ark</h2><h3 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h3><p>“Ark”的概念诞生于 <a href="https://x.com/brqgoo/status/1661396915274088448">2023 年 5 月</a>，由 Burak 提出（他是闪电网络的提倡者和开发者）。这一创造背后的推动力是，他意识到闪电网络的构造方式使之并不能高效地吸引普通个人使用，因为包括流动性管理在内的诸多要求，而且隐私性也常常缺失。虽然 Burak 发明了这套协议，两家公司（“<a href="https://arklabs.xyz/">Ark Labs</a>” 和 “<a href="https://second.tech/">Second</a>”）已经参与进来，将 Ark 协议打造成了终端到终端的  Layer 2 方案。</p><p>虽然两家公司的开发都围绕着同一个开源的 Ark 协议，他们的实现和目标也很不同。因此，我只能尽力提炼出下面的讲解。</p><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><p><strong>Ark</strong>：Ark 是一种在区块链外转移比特币的协议，它利用了用户与一位 Ark 运营者所组成的多签名装置和基于这种多签名的预签名的交易。你能用比特币交易做到的事，在 Ark 环境中都能做到，但速度会更快、手续费也会更低。</p><p><strong>Ark 运营商</strong>：在一个 Ark 实例中运营着中心化的 Ark 服务端基础设施的实体，负责提前为用户 VTXO 提供流动性（在这些 VTXO 过期后收回）。</p><p><strong>闪电网络网关</strong>：给一个实例中的 Ark 用户提供发送和收取闪电支付能力的实体，使用 Ark VTXO 的免信任原子化互换。这一功能可以由 Ark 运营商来一并提供，但往往由另一实体来提供，以分散对手方风险。</p><p><strong>虚拟交易输出</strong>：也称为“VTXO”，在特性上与区块链网络内的 UTXO 非常相似，但却是 “虚拟的”，因为它们并不表现为链内的独特 UTXO，而是完全生活在链外。用户在 Ark 协议中发送和收取 VTXO 。</p><p><strong>回合</strong>：在需要获得真正的终局性 以及&#x2F;或者 刷新 VTXO 时，Ark 协议的用户需要参加回合，也就是跟所在实例中的其他 Ark 用户和 Ark 运营商合作，从而获得新的 VTXO（需要支付服务费）。</p><h3 id="发起交易"><a href="#发起交易" class="headerlink" title="发起交易"></a>发起交易</h3><p>Ark 的工作模式跟区块链内的比特币交易非常相似，也继承了许多相同的习惯，但同时又允许交易在 Ark 参与者之间近乎实时地确认，同时是信任最小化的。发送者跟 Ark 运营商一起签名，从而将自己的 VTXO 交给收款方（或者，在 Ark Labs 的版本中，是为收款方创建一个新的、串联的 VTXO）。这就提供了一种在许多方面都跟链内支付相似的用户体验，只是交易手续费更低、速度更快。当用户想要发送或收取闪电支付时，他们可以跟一家闪电网关合作，从而按需将 VTXO 原子化地换成闪电支付。当前，在 Ark 中还做不到离线收取闪电支付，但很有可能会使用跟 Spark 相似的信任最小化的方式来解决。</p><p>如果用户需要终局性（比如，在他们收到大额支付时），他们可以选择加入一个回合，从而终局化支付、获得跟链内比特币一样的终局性假设。回合发生的频率将因 Ark 运营商而异 —— 估计在每 10 分钟一次到每小时一次之间 —— 并且，回合需要在尝试参与的用户和 Ark 运营者之间完成一次比较耗时的协调签名流程。回合的频率可以根据需求而变化，并不是一个需要像比特币出块间隔一样定死的东西。</p><p>因为 Ark 直接从链内比特币处继承了比特币的脚本编程功能和 UTXO 模式，Ark 在未来有可能会拓展为支持 token 协议（比如 “Taproot Assets”）。</p><h3 id="信任因素取舍"><a href="#信任因素取舍" class="headerlink" title="信任因素取舍"></a>信任因素取舍</h3><p>Ark 的目标是以一种信任最小化的方法了拓展比特币，在可用性和取舍上，站在了闪电通道和 Spark 的中间。还要提一句，作为一种协议，Ark 还在迅猛开发中，所以一部分牺牲也许能够通过使用新颖的链外方法（或者在<a href="https://bitcoinmagazine.com/featured/bitcoin-covenants-what-are-they-and-what-do-they-do">限制条款</a>在比特币上实现之后应用它）来解决。</p><p><strong>“回合外” 交易缺乏终局性</strong></p><p>Spark 缺乏可证明的终局性，Ark 则采用了一种中间立场。对于小额支付，用户可以依赖于“Ark 运营商不会与 VTXO 的前任发送者（所有者）勾结”的安全假设，从而获得即时支付，而不需要参与协调签名回合。注意，默认条件下，Ark 内的支付都将是这种缺失真正终局性的“回合外”支付；这一牺牲让 Ark 能在用户刚上手时就交付良好的用户体验。</p><p>话虽如此，需要&#x2F;想要 真正终局性的用户，可以通过加入一个回合、从 Ark 运营商处收到一个新的 VTXO来获得它。实质上，收款方可以按自己偏爱的收款模式来选择。</p><p><strong>VTXO 过期</strong></p><p>Ark 运营商需要提供流动性来运营 Ark 实例，因此，TA 需要一种办法来定期回收流动性。为了允许这种回收，Ark VTXO 都带有过期时间（比如说，30 天，这个数值是由各 Ark 运营商自己设置的），从而，VTXO 的主人（在 VTXO 临近过期的时候）要么加入一个回合来刷新 VTXO，要么就有完全失去资金控制权、让 Ark 运营商获得它的风险。虽然 Ark 运营商有强大的激励不拿走它，而是在遭遇超时的用户回到线上之后向 TA 发放新的 VTXO，但在发放新的 VTXO 给用户之前，Ark 运营商和该用户都能花费这笔资金。</p><p>为了避免资金过期，用户需要在过期之前刷新自己的 VTXO，要么是直接参与回合，要么是<a href="http://blog.arklabs.xyz/adios-expiry-rethinking-liveness-and-liquidity-in-arkade/">外包给一个代理</a>（<a href="https://www.btcstudy.org/2025/09/10/adios-expiry-rethinking-liveness-and-liquidity-in-arkade/">中文译本</a>）。此外，<a href="https://boltz.exchange/"> Boltz</a> 这样的实体可以提供原子化互换服务，将一个即将过期的 VTXO 换成一个延长了生命周期的 VTXO ，但当前尚未实现。</p><p><strong>复杂的回合用户体验</strong></p><p>如果你曾经在比特币上尝试过使用 CoinJoin，你就知道，跟其他比特币用户协调签名一笔交易是多么麻烦而又不可靠。在 Ark 中，为自己的 VTXO 谋求真正终局性的人需要保持在线，直到一个回合签名流程完成，而这顺利与否将严重依赖于其他参与者的行为（保持在线并妥善签名）。虽然这对于一个运行在永续在线服务器上的钱包软件来说只是小菜一碟，但移动平台上的钱包软件想要可靠地执行，是非常困难的，尤其是，iOS（iPhone 手机的操作系统）并不保证任何 app 的后台执行（因此并不能保证在需要签名的正确时间能够在线）。</p><p>因为这一复杂的用户体验，“Ark Labs” 提出了<a href="http://blog.arklabs.xyz/adios-expiry-rethinking-liveness-and-liquidity-in-arkade/">一套系统</a>（<a href="https://www.btcstudy.org/2025/09/10/adios-expiry-rethinking-liveness-and-liquidity-in-arkade/">中文译本</a>），让用户可以用信任最小化的方式我托第三方来执行刷新，也就是将在线要求外包给第三方。虽然这样的第三方无法盗窃资金，如果他们离线或者拒绝刷新某个 VTXO（不管出于什么原因），这个用户都将被迫（在过期之前）自己参与一个回合。为了缓解这种风险，用户可以委托多个代理人，从而将信任假设转变成 1-of-N 假设 —— 只要这 N 各代理人中有一个是诚实的，那么这个 VTXO 就可以妥当地刷新。</p><p>“Second”也有一种相似设计的系统，支持免信任、非交行的回合，允许任意数量的参与者在一个回合中为一位用户签名（即，包括钱包供应商和第三方的代理人），只要任意一方妥当地签名，用户的 VTXO 就可以妥当地刷新。</p><p>注意，虽然这两种方案都 <em>可以</em> 刷新即将过期的 VTXO ，但光凭委托这个操作 <em>无法</em> 给予用户真正的终局性 —— 必须经过回合才行。</p><p>最后，有必要指出，只要一种限制条款可以部署到比特币熵，回合过程的绝大部分复杂性就可以在整体上缓解，从而为 Ark 带来用户体验的极大提升。</p><h3 id="隐私性取舍"><a href="#隐私性取舍" class="headerlink" title="隐私性取舍"></a>隐私性取舍</h3><p>Ark 继承了比特币的糟糕的隐私性，而且，作为一种协议，并不能提供任何显著的隐私性提升。但是，它将交易的执行转移到链下、拓展了比特币的功能，所以，现有的、创新的隐私性协议都可以建立在它之上，而限制条款可以完全解锁这种潜能（比如，在 Ark 内实现隐私回合）。</p><p>短期内，Ark Labs 计划使用类似于 WabiSabi 的盲化证书（blinded credentials）来提升用户在参与回合时应对运营商的隐私性。</p><p><strong>交易可见性</strong></p><p>虽然 Ark 内部的所有交易不需要发布到区块链，提供了一些松散的临时屏障，但是，所有交易的细节对 Ark 运营商都是可见的，不应看成是真正隐私的。相反，将 Ark 所提供的临时的隐私性看成跟私人虚拟网络（VPN）类似（将交易的可见性从对比特币区块链公开，转移为对一个受信任的第三方公开），会是有用的视角。</p><p>此时，尚不清楚“Ark Labs”和“Second”会让交易数据保持隐私，还是公开发布，但作为私人虚拟网络的用户，不应该完全指望靠服务商不公开的承诺就能获得隐私性。</p><h3 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h3><ul><li>正式文档（“Ark Labs”）：<a href="https://docs.arkadeos.com/">https://docs.arkadeos.com/</a></li><li>正式文档（“Second”）：<a href="https://docs.second.tech/">https://docs.second.tech/</a></li><li>来自“Second”的漂亮 Ark 讲解视频：<a href="https://www.youtube.com/watch?v=WvwmLv0SgAc">https://www.youtube.com/watch?v=WvwmLv0SgAc</a></li><li>“Ark 与火车”：<a href="https://pakovm.substack.com/p/ark-and-the-train-analogy-a-guide">https://pakovm.substack.com/p/ark-and-the-train-analogy-a-guide</a></li></ul><h2 id="简单说-Saprk"><a href="#简单说-Saprk" class="headerlink" title="简单说 Saprk"></a>简单说 Saprk</h2><h3 id="历史-1"><a href="#历史-1" class="headerlink" title="历史"></a>历史</h3><p>Spark 网络在今年早些时候由“Lightspark”（一家有着有趣经历的比特币相关公司）启动。从 “UMA”（为他们的银行业伙伴提供原生集成的合规特性的用户名系统）到跟<a href="https://unlimitedhangout.com/2024/10/investigative-series/the-chain-of-command-how-facebooks-libra-bank-regulators-and-paypal-built-a-new-world-currency/">失败的“Libra”货币</a>的关联，他们在开发工具上有一些奇怪的激励，跟比特币自身更多是密码朋克的起源不太沾边。不过，当我把他们的奇怪记录摆在一边、专心看 Spark 协议的实际内容时，我发现，它是一个相当有用、务实而且强大的工具。</p><p>Spark 的内核采用了来自“<a href="https://bitcoinmagazine.com/technical/bitcoin-layer-2-statechains"> statechains</a>”（<a href="https://www.btcstudy.org/2025/06/21/bitcoin-layer-2-statechains-by-shinobi/">中文译本</a>）的许多有用特性；后者是比特币的一种新颖的 layer 2 构造，由 Ruben Somsen 在 2018 年提出。Spark 专门用“叶子”的想法拓展了 statechain；“叶子”让用户可以在一笔交易中发送任意数额，而不是只能转移整个 UTXO —— 这是 statechain 迄今为止的最大问题。</p><h3 id="术语-1"><a href="#术语-1" class="headerlink" title="术语"></a>术语</h3><p><strong>Spark 实体</strong>：运行一个 Spark 实例的实体，比如 “Lightspark”，由一群 Spark 运营者组成。因为 Spark 是一种开源的协议，任何人都可以开创自己的 Spark 实体，但每一个 Spark 实体都控制着自己的运营者的准入。</p><p><strong>Spark 运营者</strong>：每一个 Spark 实体都由一个乃至多个 Spark 运营者组成，每一个都负责所在 Spark 实例内的用户的验证和签名操作，包括转移资金和 token 、发行新 token ，等等。运营商可以是跟 Spark 实体重合的实体，或者（希望）在社会关系和司法辖区上与 Spark 实体有别。当前有两家 Spark 运营者，分别是“Lightspark”自己和“Flashnet”，但预计会有更多运营者加入近来。</p><p><strong>Spark 服务供应商</strong>：一家实体，向 Spark 用户提供多种服务，包括使用原子化互换功能来代表用户发送和收取闪电支付（这是免信任的）。</p><p><strong>Spark 叶子</strong>：Spark 引入了“叶子”的概念，解决了在 statechain 中必须转移整个 UTXO 的问题。叶子也可以理解成类似于比特币中的 UTXO ，因为它可以自由分割成任意数额。</p><h3 id="发起交易-1"><a href="#发起交易-1" class="headerlink" title="发起交易"></a>发起交易</h3><p>简单来说，Spark 的工作原理是，它让用户可以在 Spark 内近乎即时地转移比特币，办法就是跟 Spark 运营者合作，以信任最小化的方式转移单个叶子的所有权给另一个人。这种转移不需要区块链、区块确认以及发送者和接收者同时在线，从而支付变得简单又快捷。当用户希望发起闪电支付时，就发起原子化的互换：把一个（或者多个）叶子支付给某个 Spark 服务商，该服务商会代表用户发送支付（只是收取一些手续费）。</p><p>在转让一个 Spark 叶子时，发送者通过联合（运营者）签名，将这个叶子的所有权从“他们自己 + Spark 运营者”切换为“新的所有权人 + Spark 运营者”。结果是，只要这个 Spark 运营者和发送者中的任何一方诚实地删除了自己用在联合签名操作中的密钥碎片，那么这个叶子就完全由接收方拥有、不可能被重复花费。由于这个操作只需要 Spark 运营者和发送者的协调，不涉及其他 Spark 用户，这些签名操作是非常快的，而且能够抵抗 DoS 攻击。</p><p>Spark 也为离线收取闪电网络支付引入了一种 1-of-N 信任模式。离线收取闪电支付是对标准的闪电钱包的一个关键的用户体验提升，在移动端钱包上尤其重要，因为移动平台无法保证后台执行，也无法保证全天候的完美互联网连接。</p><p>除了常规的支付，Spark 还拓展成了包含<a href="https://docs.spark.money/lrc20/hello-btkn">原生的 token 支持</a>，其核心关注点是让 USDT 和 USDC 这样的稳定币可以在 Spark 网络中发行并无缝地转移。Token 转让跟标准交易使用相似的信任模式，也都保持单方面退出到区块链网络的能力。</p><p>最后，Spark 中的用户可以随时退出到区块链网络内，具体做法就是发布一笔预签名的退出交易。虽然退出的代价并不是恒定的，会因为叶子深度和链内手续费率这样的因素而变化，但它是一个关键的工具，可以保证在 Spark 实体萌发恶意或无法响应时取回资金。</p><h3 id="信任因素取舍-1"><a href="#信任因素取舍-1" class="headerlink" title="信任因素取舍"></a>信任因素取舍</h3><p>为了解决当前击败闪电网络和比特币使用体验的问题，Spark 作出了许多非常务实的取舍。话虽如此，相比于区块链内的比特币和闪电网络，Spark 的使用体验有一些重大区别。我倾向于使用“信任最小化的”这个术语来描述 Spark（以及其它大部分 layer 2 网络），因为只有自我保管的链内比特币可以完全视为“免信任的”。</p><p><strong>缺乏真正的终局性</strong></p><p>在 Spark 中，完全自治的核心风险在于，Spark 叶子缺乏真正的终局性，用户永远无法 <em>确证</em> 他们的资金无法被重复花费（涉及该叶子的以往发送者和 Spark 运营者中没有任何一对会勾结）。在 Spark 内，终局性（知道你的资金只能被你自己的密钥转移）的存在取决于任何一个 Spark 运营者都会在签名一笔 Spark 交易之后删除自己用来签名的密钥碎片 —— 也就是说，可能存在，但却是无法证明的。相反地，如果所有 Spark 运营者都是恶意的，而且拒绝删掉自己的密钥碎片，<em>并且跟你现在持有的叶子的以往发送者相勾结</em>，那他们就能重复花费这个叶子（实质上就是盗窃你的资金）。</p><p>虽然在实际场景中，我认为这个 1-of-N 信任假设是合理的，但它确实远远低于常规的、链内比特币的信任假设（默认具有真正的终局性）。还值得指出的是，由于 Spark 交易的假名属性，前任发送者可能就是 Spark 自己。</p><p><strong>可能中心化的 token 控制</strong></p><p>虽然 token 的转让跟常规的 Spark 支付一样使用 1-of-N 信任假设，token 自身却是可以随时冻结的，只要发行者决定启用这个功能。虽然这类似于许多中心化控制的稳定币（比如 USDT，经常出于法律原因而遭冻结和罚没），还是有必要指出。这项特性可能会在许多合规的稳定币（比如 USDC 和 USDT）中启用。</p><p><strong>离线收取闪电支付的安全性：1-of-N 模型</strong></p><p>离线收取闪电支付并不像标准的闪电支付那样是信任最小化的，但是偷盗资金需要所有 Spark 运营者勾结来偷取一笔闪电支付，这是很不划算的，因为闪电支付的数额较小、而运营商将面临巨大的声誉风险，并且，即使盗窃成功，用户也是很容易发现的，因为闪电网络本身就提供了支付证据。</p><h3 id="隐私性取舍-1"><a href="#隐私性取舍-1" class="headerlink" title="隐私性取舍"></a>隐私性取舍</h3><p>Spark 自身不应被看成是一种隐私性工具，因为它继承了比特币基础层的核心隐私性问题，并且一开始在隐私性上作出了一些糟糕的设计选择。话虽如此，Spark 的核心技术可以拓展成拥有令人赞叹的隐私性 —— 只要<a href="https://x.com/spark/status/1968742316669100445">为所有交易使用盲化签名、为 token 转移隐藏数额并引入其他隐私技术</a>，这些在比特币生态系统中也是难能做到的。</p><p><strong>交易可见性</strong></p><p>虽然 Spark 内的交易不会像链内交易那样全部公开到区块链，所有的 Spark 运营者都能看到自己所在 Spark 实例内的所有交易。理论上，这种模式可以提供临时的屏障，只要 Spark 运营者使用了不公开日志的使用条款，但在实际场景中，当前，“Flashnet”（其中一个 Spark 运营者）将处理过的所有交易数据都发布到了<a href="https://www.sparkscan.io/?network=mainnet">一个网站</a>。这意味着外部的观察者也能轻松查找 Spark 地址并看到所有交易的细节、token 余额，甚至使用时机和数额分析、将闪电支付关联到 Spark 地址。</p><p>注意，Spark 正在为钱包开发者添加这种数据发布的可选关闭功能（通过将交易标记为私密的），这（在关闭时）就退回了跟 Ark 同样的类似于 VPN 的信任模式（前面已经讲过）。如果一个钱包开发者使用了这个功能（我希望他们全部都使用），那么 Spark 运营者将承诺不会公开发布相关的交易数据，但是他们依然能够在本地存储这些数据。</p><p><strong>缺乏地址轮换</strong></p><p>在当前的版本中，Spark 并不支持在一笔交易中花费来自多个 Spark 地址的资金。虽然<a href="https://x.com/spark/status/1968742316669100445">预计这个问题会得到修复</a>，并且众所周知它是 Spark 的一个关键短板，但是当前，这意味着绝大部分的 Spark 实现，都将让用户为所有交易使用一个静态的地址，这使得当前的 Spark 的隐私性甚至比普通的链内比特币还要差。地址重复使用、所有数额都公开，这两者意味着攻击者可以对支付轻松执行 时机 + 数额 启发式分析，从而弄清楚哪一笔闪电支付发送到哪个 Spark 地址。</p><p><strong>Spark 地址泄露</strong></p><p>仿佛是为了创造出隐私性问题的三连击，“Spark”所提供的核心 SDK（软件开发工具）（以及来自“Wallet of Satoshi”钱包的最常用的 Spark 实现）都默认在 BOLT11 闪电发票中包含用户的 Spark 地址（这本来是没有必要的）。这意味着，任何能够解码 BOLT11 发票的人都能在有关的发票中了解相关用户的 Spark 地址、进而了解该地址的所有交易 —— 这都仰赖于前面提到的设计：使用静态地址，以及，将所有交易细节都公开。</p><p>注意，这个特性并不是绝对必要的，钱包开发者可以简单禁用它，并且，在使用 Spark 协议的“ <a href="https://breez.technology/">Breez Nodeless SDK</a> ”中已经移除了（这个 SDK 正迅速获得采用）。但无论如何，有必要专门指出。</p><h3 id="了解更多-1"><a href="#了解更多-1" class="headerlink" title="了解更多"></a>了解更多</h3><ul><li>正式文档：<a href="https://docs.spark.money/home/welcome">https://docs.spark.money/home/welcome</a></li><li>比特币 Layer 2 之 Statechains ：<a href="https://bitcoinmagazine.com/technical/bitcoin-layer-2-statechains">https://bitcoinmagazine.com/technical/bitcoin-layer-2-statechains</a>（<a href="https://www.btcstudy.org/2025/06/21/bitcoin-layer-2-statechains-by-shinobi/">中文译本</a>）</li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>虽然 Spark 和 Ark 都代表着比特币可用性和可扩展性的一个令人激动的新时代，它们也有属于自己的牺牲。虽然两者都不是完美的解决方案，令人激动的是，钱包开发者们终于有了两个相互竞争而且有趣的选项，可以在他们的软件中实现闪电支付、原生 token 和其他功能，并且无需面对一向跟闪电通道相关的复杂性。Spark 和 Ark 都是扩容比特币的务实结果，代表着一种艰辛但务实的路径，在信任最小化要求、用户体验和扩容效果之间取得平衡。</p><p>因为两者都是迅捷演化中的协议，我希望这两种解决方案的取舍，都可以在接下来几个月、几年中迅速优化和缓解，让更多人能够持有非托管的比特币，同时拓展我们可以在比特币上建构的东西。</p><p><em>衷心感谢来自 Spark、Ark Labs、Second、Breez、Spiral 和 Bitcoin QnA 的朋友为本文提出的意见！了解这些创新系统的所有的信任假设和取舍要花费大量的时间，我非常感激贡献出自己宝贵时间的每一位朋友。</em></p><p>（完）</p>]]></content>
    
    
    <summary type="html">虽然 Spark 和 Ark 都代表着比特币可用性和可扩展性的一个令人激动的新时代，它们也有属于自己的牺牲。</summary>
    
    
    
    
    <category term="Ark" scheme="https://www.btcstudy.org/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>对 CoinJoin 匿名性的交集攻击</title>
    <link href="https://www.btcstudy.org/2025/10/24/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/"/>
    <id>https://www.btcstudy.org/2025/10/24/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/</id>
    <published>2025-10-24T09:40:49.000Z</published>
    <updated>2025-10-31T04:07:54.146Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：nothingmuch</em></p><p><em>来源：<a href="https://spiralbtc.substack.com/p/the-scroll-4-intersection-attacks">https://spiralbtc.substack.com/p/the-scroll-4-intersection-attacks</a></em></p><p><em>原文使用 Creative Commons 许可 4.0 版本发布，共享和演绎该文须保留原作者署名并以相同的条件发布，因此本译本也使用相同的许可。</em></p><p><a href="https://www.btcstudy.org/2025/10/23/the-scroll-3-a-brief-history-of-wallet-clustering/"><em>前篇见此处</em></a></p></blockquote><h2 id="对抗性思考-20-个问题"><a href="#对抗性思考-20-个问题" class="headerlink" title="对抗性思考 20 个问题"></a>对抗性思考 20 个问题</h2><p>在研究隐私性时，将去匿名化想象成一个游戏是很有用的。先想象一个敌手，TA 可以获得一些信息，然后 TA 会尝试猜测，系统中的一组候选人中的谁做了什么事情。为了阻止这个敌手胜出，我们需要让 TA 的猜测得不到结果，这又意味着，要么我们限制 TA 获得信息的渠道，要么，使用随机性来增加 TA 需要获得的信息量。</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/20-questions.webp" alt="20-questions"></p><p style="text-align:center">- 图片来源：<a href="https://www.youtube.com/watch?v=5ifCeqYdTG4">猜猜我是谁？1979 版本……开箱评测</a> -</p><p>许多读者可能熟悉“<a href="https://en.wikipedia.org/wiki/Guess_Who%3F">猜猜我是谁</a>”的游戏。这种游戏可以说是更加底层的“<a href="https://en.wikipedia.org/wiki/Twenty_questions">20 个问题</a>”的回合制对战版本。在“20 个问题”中，你会从一个集合中选出一个元素，而你的对手要猜出你选择的是什么东西，手段就是问你 20 个只能回答“是”或“否”的问题。在“猜猜我是谁”中，双方会轮流盘问对方，先猜出对方身份的人就赢。“猜猜我是谁”中的元素组合是固定的，有 24 个卡通人物，每个人物都有多方面的特征，比如头发的颜色和发型。每个人物都有一个专属的名字，不会重合。</p><p>“是”或“否”的回答可以用比特来表示：要么是 1，要么是 0 。20 个比特（用二进制）可以表示从 0 到 104 8575（2<sup>20</sup>-1）之间的任何整数。如果一个集合是完全排序的，这个集合中的每一个元素都可以用其在序列中的位置来索引，这样的索引就能唯一地标识它们。所以，20 个比特可以在 100 万个元素中定位出某一个元素。</p><p>虽然 2<sup>20</sup> 是使用 20 个是否问题确定有解所能允许的最大元素数量，但在真实世界的情形中，20 个问题能够问出的信息会少得多。对于绝大多数集合以及问题的组合，几乎肯定不会完美匹配，而且并不是每一个问题都能独立于其它问题、直接将候选元素分成两部分。有些问题的答案可能有偏倚；还有一些问题，它的答案可能会跟其它问题有关联。</p><p>假设你不是问“你的人物戴眼镜吗？”这样的问题，而总是问“你的人物的名字，按字母表的话，排在【剩余人物名字排序最中间的】那个名字前面吗？”，这就是一种“<a href="https://en.wikipedia.org/wiki/Binary_search">二分搜索法</a>”，将最大化能够从一个答案中获得的信息量：每一个问题都使用一个名字将剩余的人物集合分成两半，而回答就会帮你排除其中一半。重复这样的提问可以按是否问题所能获得的最高效率来缩减搜索的范围（候选人物集合），从而只需要对数次提问，就能得出答案，比起线性扫描 —— 就是“是 Alice 吗？是 Bob 吗？”这样一个接一个地问 —— 要快得多。</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/binary-search.webp" alt="binary-search"></p><p style="text-align:center">- 来源：<a href="https://en.wikipedia.org/wiki/Binary_search#/media/File:Binary_Search_Depiction.svg">二分搜索 - 维基百科</a> -</p><p>不过，这个游戏的要点并不是尽可能快地获得你的对手的信息，如果你要赢，你要比对方更快猜出来；而且，已经证实的是，最大化每次提问可获得的信息量实际上<a href="https://arxiv.org/pdf/1509.03327">并不是最优策略</a>，至少在玩家都诚实应答的时候是如此。类似地，在使用游戏来学习隐私性的时候，你必须假设，敌手是理性的（追求 TA 自身的偏好）；否则，你很容易在无意间为一个差之毫厘的结果而优化。敌手想赢。</p><p>最后，假设玩家并不总是诚实的，那么应该不难看出，一个人可以作弊而不被察觉 <sup><a href='#note1' id='jump-1-0'>1</a></sup>：你不必在一开始就选中其中一个元素，然后每个问题都诚实作答；你可以总是给出在剩余候选元素中排除尽可能少元素的答案。由此，见机选择的答案可以尽可能延缓你的对手获得有用信息、赢得游戏的速度。在这种所谓的“拜占庭”设定中，最优策略就跟玩家总是诚实的时候不一样。这时候，对手的最佳应对就是坚持二分搜索，这样可以限制见机选择的优势。</p><p>见机选择的“猜猜我是谁”是非常无聊的，类似于只要你有意为之，井字棋（三子棋）游戏就总是以平局告终。说得具体一些，如我们在下一节将看到的，你需要从对抗性最强的对手那里抽取 4.58 比特的信息，而游戏的规则可以用来迫使对方承诺这些比特。这就意味着，先提问的玩家总是能在问出 5 个问题之后就赢下比赛。在这样的游戏中，答案的文本应该总是由均匀随机的比特组成 <sup><a href='#note2' id='jump-2-0'>2</a></sup>；任何别的东西都会给你的对手优势。不幸的是，使用这样的见机选择和额外随机性的隐私保护措施是难以开发和理解的，所以实际的隐私软件通常比这些游戏案例要难以分析得多。</p><h2 id="度量匿名性"><a href="#度量匿名性" class="headerlink" title="度量匿名性"></a>度量匿名性</h2><h3 id="香农熵"><a href="#香农熵" class="headerlink" title="香农熵"></a>香农熵</h3><p>“猜猜我是谁” 游戏中的一个回答的<a href="https://en.wikipedia.org/wiki/Information_content">信息内容</a>，也叫做它的 “香农熵（Shannon entropy）”，量化的是它学到了多少 “惊喜”。比如说，如果你已经发现了你的对手的人物是个光头，那么发现他没有黑头发就不会让你觉得惊喜，所以说，这个答案就没有包含额外的信息。它不让你惊喜，是因为，早在你得到这个答案之前，你就已经可以推断出他拥有黑头发的概率是零。</p><p>假设候选集合中只剩下两个选项，这差不多就是一种掷硬币游戏，这两个选项是最终答案的概率是一样的，所以答案带来的惊喜也是一样的。如果答案是 A ，那就表明它不是 B ，反之亦然，知道它不是 B 就表明它必然是 A 。所以只需要再提问一次（是否问题）就够了，得到 1 比特的信息，就可以消除所有的不确定性。</p><p>这个数值（香农熵）可以从概率分布中计算出来，在上面这个只剩两个选项的例子中是 p &#x3D; 1&#x2F;2 的<a href="https://en.wikipedia.org/wiki/Bernoulli_distribution">伯努利方程</a>。</p><p>首先，计算任何一种情形的概率的对数（以 2 为底）的负数，等价于计算概率的倒数的对数（这样就可以消除负号）：</p><p>$$-log_2(p) &#x3D; log_2(1&#x2F;p)$$</p><p>不管是哪一种情形，</p><p>$$log_2(2) &#x3D; 1$$</p><p>然后，通过将这些值乘以相应的概率来缩放它们，就像加权平均数一样：这里有两种情况，每一种的贡献都是 1&#x2F;2 比特。两者的和是 1 ，这就是这种分布的香农熵。</p><p>超过两种选项的情形也不例外。如果你刚开始玩游戏，这样问：“你的人物是某某人【随便某个人物的名字】吗？”，最大概率是你只能学到</p><p>$$\frac{1}{24} \log_2(24) \approx 0.191$$</p><p>比特的信息（假设答案是“否”）。</p><p>得到答案之后，$log_2(23) \approx 4.52$ 比特，它就量化了剩余 23 个等概率选项的不确定性。换句话说，如果你足够幸运而且猜测正确的话，你将学到全部信息 $log_2(24) \approx 4.58$ 比特的信息，因为没有剩下任何不确定性了。</p><p>在 24 个人物中，将可能性收敛到 1 个人物，只需要不到 5 个比特。10 个比特就足以在 1024 种选项中找出最终的 1 个。20 个比特，足以在 100 万种可能中定位某 1 种。</p><p>香农熵非常通用，也能够量化不均匀的概率分布。名字在人群中就不是均匀分布的，有些名字更常见，有些名字更罕见，所以，一个有趣的问题是：<a href="https://altmode.org/2015/01/14/how-much-entropy-is-in-a-name/">一个名字中有多少熵</a>？我链接的文章估计，美国人的姓氏大概有 15 比特。根据<a href="https://escholarship.org/content/qt46v58824/qt46v58824.pdf">另一篇论文</a>，美国人的名字中包含大约 10 ~ 11 比特的熵。这些估计表明，一个全名最多只包含 26 比特的熵，但也请记住，常见的名字（比如 “John Smith”）比不常见的名字包含更少的熵。完全索引整个美国的人口需要 29 比特。</p><p>截至本文撰写之时，世界人口正在缓慢但确实地接近 2<sup>33</sup> 。33 并不是一个非常大的数字。那么一个生日中含有多少比特？只算年龄呢？<a href="https://gwern.net/death-note-anonymity">居住城市</a>呢？一个 IP 地址呢？<a href="https://arxiv.org/pdf/cs.CR/0610105">最爱的一部电影</a>呢？浏览器的<a href="https://coveryourtracks.eff.org/">画布实现</a>呢？一个邮政编码呢？字典中的词语呢？语法中的标点符号呢？这些都是棘手的问题。在前面说的游戏和现代密码学中，秘密值是随机的，而且优先使用一次性的值；但我们不能随机化、过期作废和轮换我们的真实人生的身份属性。</p><p>此外，这些个人身份信息常常会泄露，有时是出于必要，有时是不必要但无意中泄露了，这贯穿了我们的生活。我们常常不得不信任跟我们交互的人不会揭露这些信息 —— 不论是有意分享给第三方还是意外地泄露。也许，这跟我们必须把生命托付给他人，比如医生、职业司机和飞行员，并没有什么不同。当然，托付个人数据和托付其它东西的必要性是无法相比的。</p><h3 id="匿名性的熵主义者视角"><a href="#匿名性的熵主义者视角" class="headerlink" title="匿名性的熵主义者视角"></a>匿名性的熵主义者视角</h3><p>隐私强化系统让用户可以隐藏在人群中。比如说，如果你观察到一个来自 Tor 退出节点到你的服务器的连接，那么你能知道的不过是，可能是几千个 Tor 用户中的某一个建立了这个连接。从信息论来看，给定一个目标为去匿名化的敌手已经观察到了一些事件（比如说拦截到了在一个网络中的两个节点之间传输的一条消息 ），那么特定一个用户的 “匿名集” 就是这些事件所归属的可能用户的集合。如果一条匿名消息的接受方就是敌手，那么敌手对一组候选发送者作出的最正确猜测就是真正发送者的匿名集。在一个理论上完全匿名的系统中，（除了接收者）任何一位用户发送这条信息的概率都是一样的。</p><p>最近，两篇很有影响力的论文都提出了要用匿名集的熵来度量匿名性：《<a href="https://lirias.kuleuven.be/retrieve/333407">迈向匿名性的度量</a>》，来自 Claudia Díaz、Stefaan Seys、Joris Claessens 和 Bart Preneel；《<a href="https://bib.mixnetworks.org/pdf/serjantov2002towards.pdf">迈向匿名性的一种信息论度量</a>》，来自 Andrei Serjantov 和 George Danezis 。这些工作从这样一种假设开始：敌手可以从匿名集中猜测出正确用户的概率是有上限的；然后推广为一种模型：考虑匿名集内部的不均匀的概率分布。两篇论文都提议用熵的比特数量来量化匿名集的规模。</p><p>如果匿名集是完全对称的（perfectly symmetric），那就只有均匀分布是有意义的，从而，将匿名集的规模换算成熵的比特数量，就仅仅是计算  $log_2(n)$ ，其中 n 就是匿名集的规模。比如说，一个包含 1024 个等概率元素的集合，在其分布中就有 10 比特的熵。</p><p>当概率分布并不均匀的时候，熵就会下降。比如说，如果一块硬币可能出现正面，也可能出现反面，但正面出现的概率是 1&#x2F;4 ，反面出现的概率是 3&#x2F;4 ， 这种概率分布的总熵就只有</p><p>$$\frac{1}{4} \log_2(4) \ + \frac{3}{4} \log_2(\frac{4}{3}) &#x3D; \frac{1}{4} 2 + \frac{3}{4} 0.415…&#x3D;0.811…$$</p><p>比特，而不是 1 比特。这就量化了一种概率分布所代表的不确定性：与一块均质的硬币相比，抛掷这块扭曲的硬币所得到的结果是更加确定的。</p><p>香农熵是整个<a href="https://en.wikipedia.org/wiki/R%C3%A9nyi_entropy">“熵”定义家族</a>中的一个特例。它刻画的是一条消息中的平均信息内容，这样的消息既可以是“是”或“否”的答案、也可以是更加广义的答案，并且，这种刻画是从消息可能性的概率分布中得出的。更加保守的估计可能会使用“<a href="https://en.wikipedia.org/wiki/Min-entropy">最小熵</a>”，也就是只考虑出现概率最高的元素，而不是计算算术平均值、量化最坏的情形。在本文中，我们会坚持使用香农熵的概念。想要了解更加深入的讨论以及对熵主义者视角的更加精妙的解读，Paul Syverson 的《<a href="https://www.freehaven.net/anonbib/cache/entropist.pdf">何以我不是一个熵主义者</a>》值得一读。</p><h2 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h2><p>在《<a href="https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=2ab47454f59d9d8e55d4d8a69530562a3690794a">k-匿名性：一种保护隐私的模型</a>》中，Latanya Sweeney 从回顾她以往的调查结果开始；这些结果展示了“已经匿名化的”数据的身份再次识别。独立地看，跟一个数据集中的条目相关的每一种属性，比如生日日期，似乎都只揭晓了这个条目的主体的十分有限的信息。但是，就像游戏中的“是”或“否”答案，只需要对数数量的信息 —— 换句话说，结合极为少量的几个属性 —— 就足以再次识别出属性主体的身份：</p><blockquote><p>比如说，这项研究中的一个发现是，美国人口中的 87%（2.48 亿中的 2.16 亿）都有已经报告的特征、并且这些特征使得，可能只需基于 {5 位数字的邮政编码、性别、生日日期} 三种属性，就足以将他们唯一地识别出来。显然，包含了这些信息的数据，在公开的时候就不应被视为匿名化的数据。</p></blockquote><p>作一个粗略的估计，由 5 个数字组成的字符串最多拥有 $log_2(10^5) \approx 16.6$ 比特的熵，但邮政编码的数量并没有那么多，只有 $log_2(4.4 * 10^4) \approx 15.4$ 比特，而且别忘了，人口在不同邮政编码所覆盖的区域并不是均匀分布的，所以 13.8 就是<a href="https://www.johndcook.com/blog/2018/03/02/bits-of-information-in-a-us-zip-code/">最佳估计</a>了。性别这一项，在绝大部分情况下会包含稍微多于 1 比特的信息，因为即使表示了非二元的性别，主要数值依然是“男性”或者“女性”。也就是说，在性别一项中使用了非二元数值的主体，在这个数值暴露时，对其造成的信息泄露会远远超过 1 比特。如果不了解年龄的分布，生日日期所包含的熵也很难估计。</p><p>不考虑“2 月 29 日”，假设人们的生日是均匀分布的，出生年份则用 2 位数字表示，那么出生日期的熵就是 $log_2(365 * 10^2) \approx 15.1$ 比特。同理，可以查到一个<a href="https://www.johndcook.com/blog/2018/03/02/bits-of-information-in-age-birthday-and-birthdate/">更加现实的估计</a>是 14.9 比特。加总起来，更加保守的估计是，总共只有大约 29.7 比特。相比之下，如果此时的美国人口均匀分布，熵会是 $log_2(248 * 10^6) \approx 27.9$ 比特（或者，根据最新的图标，应该是 $log_2(342 * 10^6) \approx 28.4$ 比特）。（译者注：作者在这里的意思是，假设不考虑这些属性，而将当前的美国人口当成一个集合，这些个体出现的概率都完全相等，那么这种概率分布的熵是多少。因此，这里使用的数字是人口数字：2.48 亿，或者 3.42 亿。）</p><p>下面这幅取自该论文的图表，可能所有学过 SQL 的“inner join（直译为“内连接”）”关键字的人都觉得眼熟。它展示了另一个例子：Sweeney 使用相同的字段，将医疗数据与选民登记列表关联在一起，在一个“匿名化”的医疗记录中识别出马萨诸塞州州长 Willian Wild 的具体记录：</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/inner-join.webp" alt="inner-join"></p><p style="text-align:center">- 来源：《k-匿名性：一种保护隐私的模型》 -</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/sql-join.webp" alt="sql-join"></p><p style="text-align:center">- 来源：<a href="https://commons.wikimedia.org/wiki/File:SQL_Join_-_07_A_Inner_Join_B.svg">文件：SQL Join - 07 A Inner Join B.svg - 维基共享资源</a> -</p><p>这种类型的韦恩图（Venn digaram） —— 两个有重叠的圆形分别代表两个集合，而重叠的部分被突出显示 —— 通常用来表示两个集合的一个交集。集合是无排序的元素群，元素可以是一个数据库中的行、数字，也可以是其它任何可以有数学定义的东西。两个集合的交集就是同时出现在两个集合中的元素所构成的集合。比如，在选民登记列表中，我们可以让所有邮政编码为 12345 的选民构成一个子集合，也可以让所有生日为 1970 年 1 月 1 日的选民构成一个子集合；这两个集合的交集，就是所有既使用 12345 邮政编码、生日 <em>又是</em> 1970 年 1 月 1 日的选民所构成的集合。在州长这个例子中，在选民登记列表中、属性与他本人的属性相匹配的选民集合中，只有一个条目。</p><p>对于带有不同结构的数据集合，就稍微复杂一些：如果我们将它们看作是行的集合，那它们的交集一定是空集，因为这些行本身就有不同的形状。在计算两个数据库表格的 inner join 时，只有同时出现在两个表格中的列的数值会（可以说）取交集，具体办法是指定 <code>JOIN ON a.zip = b.zip AND a.dob = b.dob</code>，或者使用不那么可移植的 <code>USING(zip, dob)</code> 语法，但这些相交的值与它们所来自的行有关，所以关联两个数据集合的整体结构会更复杂一些。请注意：Sweeney 的图描绘的是两个数据集合的列的交集，强调的是更为主要的问题：包含在“匿名化”数据中的属性无意中跟其它公开可得的数据集合中的属性出现了非空的交集。</p><p>至于 k-匿名性模式的应用，该论文所描述的匿名化数据集已经失去关注了，因为后来 Aloni Cohen 的《<a href="https://www.usenix.org/conference/usenixsecurity22/presentation/cohen">对去除标识防御措施的攻击</a>》发现了它的一些熔点。k-匿名性的核心观念是保证对于每一种可能的属性组合，在数据中都至少有 k 行包含这种具体的组合，从而需要额外的 $log_2(k)$ 比特信息从同类项中识别出一个条目。为确保这一点而建议的去除标识流程是以依赖于数据的方式进行编辑或概括，比如说，去除生日中的“日”信息、只保留“年”和“月”，甚至只保留“年”（如果效果还不够强力的话）。Cohen 的工作证明了，人们很容易低估隐私性的脆弱，因为即使是抛弃消息、直到每一种组合都有至少 k 个条目，这个编辑的过程自身也会泄露关于未编辑数据集合的统计学信息。这样的泄露，即便非常微妙，也会不仅在时间推移中逐渐累积，还会形成复合效应。使用比特（也就是对数指标）来度量隐私性损失，也许有助于为隐私性衰减速率（常常是指数）提供更加直观的理解。</p><h2 id="交集攻击"><a href="#交集攻击" class="headerlink" title="交集攻击"></a>交集攻击</h2><p>在一个 <a href="https://en.wikipedia.org/wiki/Mixmaster_anonymous_remailer">Mixmaster</a> 这样的混淆网络中（更近的 <a href="https://katzenpost.network/">Katzenpost</a> 和 <a href="https://nym.com/">Nym</a> <sup><a href='#note3' id='jump-3-0'>3</a></sup> 也是如此），参与者通过一系列的中继节点来发送消息，而每一个中继节点都会在转发到下一跳之前混洗消息（译者注：“shuffles messages”，指的是改变消息的先后顺序）。一个全局的被动敌手可以观察到所有节点收到的所有消息。“洋葱加密”用来保证混淆（mix）前和混淆后的消息是无法关联起来的，所以，只要至少一个中继节点是诚实的，敌手就无法从一个混洗后的包裹中分辨出任何一条消息。</p><p>但是，随着时间推移，依然能够观察到用户的活动模式，而且事实上是无法避免的。George Danezis 和 Andrei Serjantov 的《<a href="https://sci-hub.se/https://link.springer.com/chapter/10.1007/978-3-540-30114-1_21">对混淆网络的统计披露攻击</a>》所依赖的以往的工作，在尝试关联起一个混淆网络中的发送者和接收者时，就已经在考虑可能接收者的交集。这篇论文所描述的攻击允许一位敌手通过对一个目标用户在传输消息的整个时段中收取消息的用户取交集，来推断这位目标用户最有可能沟通的接收者集合。请注意，我表述这个问题的方式隐藏着一个“组合爆炸（combinatorial explosion）”：这个输出要覆盖所有可能的接收者子集合，那么，如果有 n 个接收者，这些子集合的数量就是 $2^n$ 。哪怕接收者数量只是几十个，这个组合的数量也是处理不过来的。这份工作的一个主要成功是一种高效的近似技术，让这种交集攻击变得实用许多。</p><h2 id="对-CoinJoin-匿名性的交集攻击"><a href="#对-CoinJoin-匿名性的交集攻击" class="headerlink" title="对 CoinJoin 匿名性的交集攻击"></a>对 CoinJoin 匿名性的交集攻击</h2><p>在论文《<a href="https://arxiv.org/pdf/1708.04748">当 cookie 遇上区块链：基于密码货币的互联网支付的隐私性风险</a>》中，Steven Goldfeder、Harry Kalodner、Dillon Reisman 和 Arvind Narayanan 介绍了两种独立但相关的攻击。可能更重要的是，他们通过清楚地展示隐私泄露可以如何不断加速，为隐私性的脆弱性提供了一个非常令人信服的案例。</p><p>在比特币中，一个钱币的匿名集的自然定义就是这个钱币可能合并到其中的钱包集群的集合（“钱包集群”的概念见 <a href="https://spiralbtc.substack.com/p/the-scroll-2-wallet-clustering-basics">本系列</a> <a href="https://spiralbtc.substack.com/p/the-scroll-3-a-brief-history-of-wallet">上一篇文章</a>（中文译本 <a href="https://www.btcstudy.org/2025/10/21/the-scroll-2-wallet-clustering-basics/">1</a>， <a href="https://www.btcstudy.org/2025/10/23/the-scroll-3-a-brief-history-of-wallet-clustering/">2</a>））。只要不止一个候选的集群，这个匿名集就是不简单的（non-trivial），这时候，需要获得额外的信息才能决定合并到哪里。新的交易可能会带来不确定性、使聚类分析有必要为（还）无法合并到任何现有集群的输出创建新的集群。另一方面，新交易和台面下的信息也可能消除不确定性、协助集群的合并。更常见的是，如果多输入启发分析被认为在这样一笔新交易上成立，那么作为输入的钱币们所在的集群就会合并。而且，如我们在前面的文章中所见，有各种各样的启发式分析，其中有一些的准确性高得吓人。</p><p>假设 Alice 用自己控制之下的一个钱包收取了一些比特币，其中有一些是从一个交易所（可以假设带有 KYC 信息）取出的，还有从朋友那里收到的午餐分账，还有卖车得到的资金。在发起几笔交易之后，Alice 意识到，她的交易历史对所有人都是可见的，而且解读起来非常容易；但接下来，她又要发起两笔独立的交易（不是一笔哦），需要获得比目前更强的隐私性假设。</p><p>在学习了一番之后，Alice 决定使用一款支持 CoinJoin 协议的钱包软件。在多笔 CoinJoin 交易中花掉她现有的钱币之后，她获得了替换出来的钱币 —— 显然有一个不简单的匿名集。在参与 CoinJoin 之前，她的钱包可能已经被聚类了。但在 CoinJoin 之后，她现在拥有的每一个 UTXO 都无法归入某一个具体的集群，因为这许多笔 CoinJoin 交易也暗示了其他用户的钱包集群</p><p>CoinJoin 隐私性背后的直觉在于，因为多个输入属于不同的用户、输出却全都看起来一个样，那么就没有一个输出可以关联到某一个输入了。这就类似于一个混淆网络：每一笔 CoinJoin 交易都是一个中继节点，而被混淆的“消息”就是参加交易的钱币。这个类比是过度简化的，在实现 CoinJoin 时，许多复杂性可能导致它崩溃，但在本文中，我们会忽略这些细节，假设 Alice 所选的 CoinJoin 钱包软件是无可怀疑的，并假设 Alice 总是能在每一笔 CoinJoin 中花费仅仅一个输入，其结果是，她的资金将总是能够跟参与同一笔 CoinJoin 交易的其他人充分混淆。在这些假设之下，如果一笔 CoinJoin 交易有 k 个等价的输出，而输入来自 k 个不同的集群，那么这笔交易所创建的每一个输出的匿名集，都有 $log_2(k)$ 比特的熵。</p><h3 id="后-CoinJoin-聚类分析"><a href="#后-CoinJoin-聚类分析" class="headerlink" title="后 CoinJoin 聚类分析"></a>后 CoinJoin 聚类分析</h3><p>现在，这篇论文所介绍的第一种攻击，准备好登上舞台了。这种攻击是通过加入第三方资源而实现的，例如，在商家网页上的一个支付处理商的 javascript 程序。假设用在交易中的支付地址会揭示给第三方，那就会将 Alice 的互联网会话与其链上交易关联起来。这篇论文是 2017 年的，所以互联网相关的泄露情形的细节可以说已经过时了，但这种担忧背后的原理还是成立的。</p><p>Alice 使用自己的一个 CoinJoin 后的 UTXO 来制作她的第一笔需要隐私性的交易。假设没有语义泄露（比如跟某一次购物有关的账单地址）和元数据泄露（就假设她<a href="https://github.com/bitcoin/bitcoin/pull/29415">使用了 Tor 来广播</a>自己的比特币交易吧），这笔交易应该能保持从以往的 CoinJoin 交易中获得隐私性。就像下图所画的，这份隐私性价值 1 个比特。输入和输出的颜色表示它们已经被划入的集群。Alice 的钱币用红色标记，渐变色则表示其在聚类分析中的模糊性：</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/post-coinjoin-first.webp" alt="post-coinjoin-first"></p><p>虽然这第一笔交易自身并没有暴露什么信息，Alice 还要发起另一笔交易。假设这是在另一个商家那里买东西，但是，这个商家却使用跟上一个商家相同的支付处理商。乍一看，下图似乎可以表示 Alice 的支付交易的隐私性，敌手将需要 2 比特的额外信息（每笔交易 1 个比特）来将这两笔交易都归入 Alice 的钱包集群：</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/post-coinjoin-second.webp" alt="post-coinjoin-second"></p><p>虽然 Alice 希望第二笔交易跟第一笔交易是无法关联的，她可能没有意识到，她的互联网浏览活动也被跟踪了。论文证明了，这种跟踪不仅是有可能的，甚至是完全可行的，因此可以向一个第三方揭示着两笔交易是可以聚类的，即使在链上它们看起来并不相关。用图形可以这么表示（使用额外一种颜色）：</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/post-coinjoin-third.webp" alt="post-coinjoin-third"></p><p>如这篇论文所讨论的，互联网跟踪，只是泄露能够协助聚类分析的信息的许多方式中的一种。举个例子，网站的崩溃可能导致购物记录被公开，甚至是在购物行为的几年之后。在至少<a href="https://twitter.com/hdevalence/status/1578128350958059520">一个案例</a>中，人们以为会保护受害者的法律程序，通过对交易数额的不合理编辑、毫无必要地泄露了关于客户的链上交易的信息，从而使他们更受其害。本系列上一篇关于钱包聚类分析史的文章，提供了更多的案例。</p><p>在 CoinJoin 的语境下，产生这种关联性的一种常见方式是，后 CoinJoin 支付交易的找零输出，又一起参与了后续的 CoinJoin 交易，导致它们在分析输入集群时被关联起来。这也被称为“有毒找零问题”<sup><a href='#note4' id='jump-4-0'>4</a></sup> ，从下一个图中可以看出。注意，在这个案例中，白色并不表示一个集群，只是表明缺乏聚类信息。</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/toxic-change.webp" alt="toxic-change"></p><p>如果被假设是“免信任的”CoinJoin协议的协调员是恶意的，那么，甚至<a href="https://groups.google.com/g/bitcoindev/c/CbfbEGozG7c">尝试参加 CoinJoin 交易</a>也会导致交易被关联起来，即便在链上看起来并不明显。这跟这篇论文所述的攻击的后果是一样的，只是一个 CoinJoin 协调员能够假装一些参与者没有及时提交签名，从而隐蔽地破坏回合、主动收集更多聚类分析信息 —— 至少，他们是可以抵赖的。</p><h3 id="祖先集群的交集"><a href="#祖先集群的交集" class="headerlink" title="祖先集群的交集"></a>祖先集群的交集</h3><p>不幸的是，对于 Alice 来说，故事还没结束。论文继续证明，给定后 CoinJoin 交易的这些关联，无论这种聚类分析（在此之前）是如何建立的，一种对 CoinJoin 交易自身隐私性的交集攻击都会从此成为可能。</p><p>这就像敌手在玩“猜猜我是谁”，给定一笔支付交易，TA 尝试猜测资金来自哪里。考虑每一笔 CoinJoin 交易的输入的集合。每一个被花费的钱币都已经被划分到某些集群。Alice 所参与的每一笔 CoinJoin 交易，都可以关联到 <em>她的</em> 其中一个集群。这样的交易的隐私性，来源于它可以关联到大量此前没有关系的集群。结合“后 CoinJoin 交易关联起了多个 CoinJoin 交易输出”的知识，敌手可以计算（这些 CoinJoin 交易的输入的）相关集群的集合的交集。随机的某个用户，<em>每次</em> 都跟 Alice 一起参与 CoinJoin 交易的概率是多大？多个用户（每次都跟 Alice 一起）呢？很罕见吧？假设这些集合的交集就只有一个集群 —— 最后常常就是这样 —— 这时候，敌手就能将 Alice 的这两笔支付交易与她的 CoinJoin 前交易关联起来，也就是消除 CoinJoin 交易的混淆效果。</p><p>从图形上看，这结合了前面的图表的推论。对于上面两张图中紫色集群中的每一个钱币，我们都可以对此前图表中出现的渐变色取颜色的交集：</p><p>$${ \textrm{Red}, \textrm{Green} } \cap { \textrm{Red}, \textrm{Blue} }$$</p><p>只有 Alice 的红色集群在交集之中，所以紫色的集群就可以合并到红色集群中。不仅 Alice 的集群会合并，因为这个案例中，只有两个用户使用了这些 CoinJoin 交易，所以剩余的集群也可以跟它们的曲线合并（已经消除了不确定性），所以，Alice 的交易可关联，可能也会让其他交易（在这个案例中，是我们假设的 Bob 和 Carol）去匿名化：</p><p><img src="/../images/the-scroll-4-intersection-attacks-on-coinjoin-anonymity/final-deanonymization.webp" alt="final-deanonymization"></p><p>这表明，即使 CoinJoin 交易像一个完美的搅拌器那样工作 —— 它们并不是，不过这是下一篇文章的主题 —— 不完美的后 CoinJoin 交易隐私性，可能也会额外打消以往的 CoinJoin 交易的隐私性，而且速度比直觉以为的快得多。</p><p>隐私性顾虑常常被淡化，这可能是因为在防止乃至控制隐私泄露的挑战面前，人们常常有一种失败主义的态度。希望是，人们的意识会提高，事物会发展（就像密码学在过去几十年中那样），不会有人再交付弱的<a href="https://en.wikipedia.org/wiki/Export_of_cryptography_from_the_United_States#PC_era">“出口版”密码学产品</a>；<a href="https://en.wikipedia.org/wiki/Timing_attack">时间侧信道</a>在最开始也被广泛地忽视了，但现在被广泛知晓是可以实用爆破的，而且不将它考虑在内的软件实现会被认为是不安全的。也就是说，（攻击&#x2F;保护）总是会变得更难；在密码学中，我们总有机会通过使用临时密钥（而非长期密钥；或者至少是定期轮换长期密钥）来限制意外泄露所造成的伤害。令人难过的是，在隐私性中，我能想到的与轮换密钥最接近的东西就是“见证保护程序（witness protection program）”，这是一种非常极端且昂贵的办法，而且远远谈不上完美有效。</p><p>在未来的篇章中，我们会了解 CoinJoin 交易隐私性在现实世界中的一些挑战、何以我们能够解决第三方发起的交集攻击，以及如何应对包含在威胁模型中的不受信任的对手方。</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>1.<a id='note1'> </a>密码学“承诺-揭晓”方案可以用来防止使用这种见机选择策略。 <a href='#jump-1-0'>↩</a></p><p>2.<a id='note2'> </a>除了倒数第二个问题，如果这个游戏有 32 个人物（而不是 24 个）那么就会是均匀分布的。 <a href='#jump-2-0'>↩</a></p><p>3.<a id='note3'> </a>注意，Tor 并不是一个混淆网络，它处理长期保活的连接，而不是一条一条的消息，也不会像混淆网络那样转发和混洗跟单条连接相关的包裹。 <a href='#jump-3-0'>↩</a></p><p>4.<a id='note4'> </a>这个术语有许多含义，并不总是指向这个定义。 <a href='#jump-4-0'>↩</a></p>]]></content>
    
    
    <summary type="html">总是会变得更难</summary>
    
    
    
    
    <category term="隐私性" scheme="https://www.btcstudy.org/tags/%E9%9A%90%E7%A7%81%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>钱包聚类分析简史</title>
    <link href="https://www.btcstudy.org/2025/10/23/the-scroll-3-a-brief-history-of-wallet-clustering/"/>
    <id>https://www.btcstudy.org/2025/10/23/the-scroll-3-a-brief-history-of-wallet-clustering/</id>
    <published>2025-10-23T02:36:16.000Z</published>
    <updated>2025-10-31T04:07:54.146Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：nothingmuch</em></p><p><em>来源：<a href="https://spiralbtc.substack.com/p/the-scroll-3-a-brief-history-of-wallet">https://spiralbtc.substack.com/p/the-scroll-3-a-brief-history-of-wallet</a></em></p><p><em><a href="https://www.btcstudy.org/2025/10/21/the-scroll-2-wallet-clustering-basics/">前篇见此处</a></em></p></blockquote><p>我们的上一篇文章介绍了钱包（地址）聚类分析背后的基本想法、地址复用的简单例子、基于输入来源同一性（CIOH）启发式分析（也叫 “多输入线索”）的集群合并。</p><p>今天，我们会扩展到更加复杂的聚类分析方法、简要地总结几篇重要的论文。本文的内容与这场同主题的<a href="https://www.youtube.com/watch?v=ndgSQlLIfI4">直播</a>多有重叠；该视频也是本系列补充。请注意，我们所引用的工作的列表不是毫无遗漏的。</p><h2 id="早期的观察式研究：2011-2013"><a href="#早期的观察式研究：2011-2013" class="headerlink" title="早期的观察式研究：2011 ~ 2013"></a>早期的观察式研究：2011 ~ 2013</h2><p>就我所知，最早发表的关于钱包聚类分析的学术研究是 Fergal Reid 和 Martin Harrigan 的《<a href="https://link.springer.com/chapter/10.1007/978-1-4614-4139-7_10">比特币系统的匿名性分析</a>》（<a href="https://arxiv.org/pdf/1107.4524">PDF</a>）。这项工作以更加广义的视角研究了比特币的匿名属性；在讨论链上交易图谱时，它使用了 “用户网络（User Network）” 的概念来捕捉一个用户的钱币的相关性（也基于 CIOH）。使用这种模型，作者批评了 WikiLeak 的 “<a href="https://twitter.com/wikileaks/status/80774521350668288">接受匿名的比特币捐赠</a>”的说法。</p><p>另一项研究没有出版为论文，是 Kay Hamacher 和 Stefan Katzenbeisser 在 28c3 会议上的演讲 <a href="https://fahrplan.events.ccc.de/congress/2011/Fahrplan/events/4746.en.html">Bitcoin - An Analysis</a>（<a href="https://youtube.com/watch?v=hlWyTqL1hFA">YouTube 视频</a>）。他们使用交易图谱数据研究了资金的流动，并对比特币作出了一些非常有先见之明的观察。</p><p>在《<a href="https://link.springer.com/chapter/10.1007/978-3-642-39884-1_2">完整比特币交易图谱的量化分析</a>》（<a href="https://eprint.iacr.org/2012/584.pdf">PDF</a>）中，Dorit Ron 和 Adi Shamir 分析了完整交易图谱的一个快照。除此之外，他们指出了一种奇怪的模式，可能就是打破 CIOH 的一项初步尝试：</p><blockquote><p>我们发现，几乎所有这些大规模交易都是一笔大规模交易（涉及 90000 BTC）【可能是 <a href="https://mempool.space/tx/b9a0961c07ea9a28bdfa950556bd96f71d9ecf6e42d19c08cb2ee331a30d30cb">b9a0961c07ea9a28…</a>】的后代；作为起源的这笔交易发生在 2010 年 11 月 8 日，而这些交易所形成的子图包含了许多看起来奇怪的链条和 拆分-合并 构造；在这些构造中，一笔大额资金或者是在几个小时内经过了几百个临时的中转账户，或者是拆分成了许多笔小额资金、发送到了不同账户中，但很快又重新汇集在一个新账户中、数额几乎不变。</p></blockquote><p>这种模式的一个早期干扰项来自 MtGox 交易所，他们<a href="https://en.bitcoin.it/wiki/MtGox/API/HTTP/v1#redeem_a_wallet.dat">允许用户上传自己的私钥</a>。许多用户的私钥都被用在由 MtGox 构造的资金清扫交易中（作为输入），以服务这种罕见的存款模式。对这些交易粗暴地应用 CIOH，会导致 “聚类崩溃”，尤其是以前在 walletexplorer.com 网站（现在叫做 CoinJoinMess）上被称为 “<a href="https://www.walletexplorer.com/wallet/MtGoxAndOthers">MtGox 的朋友们</a>” 的集群。Ron 和 Shamir 似乎也注意到了这一点：</p><blockquote><p>不过，这些统计数据中有一个很大的方差；实际上，有一个主体跟 15 6722 个不同地址有关。通过分析其中的部分地址、跟踪他们的交易，可以容易地知道，这个主体就是 Mt.Gox 。</p></blockquote><p>虽然找零识别已被提及（Ron 和 Shamir 将这些输出称为 “内部” 转账），但正式形成概念的第一次尝试似乎是《<a href="https://link.springer.com/chapter/10.1007/978-3-642-39884-1_4">评估比特币的用户隐私性</a>》（<a href="https://eprint.iacr.org/2012/596.pdf">PDF</a>），来自 Elli Androulaki、Ghassan O. Karame、Marc Roeschlin、Tobias Scherer 和 Srdjan Capkun 。他们使用了“影子地址（Shadow Addresses）” 这个术语，但现在，人们更常管它们叫“找零输出”。这指的是给（支付者）自己支付的输出 —— 由为这笔交易提供输入的同一个主体持有，通常每笔交易都有一个。这篇论文引入了一种启发式分析，用于识别出这样的输出，从而将它们与输入划分为同一个集群。一个例子是：一笔交易带有两个输出，那么，如果其中一个输出的数额（的美元价值，根据历史汇率）接近于一个整数，那么这个输出可能是真正的支付，从而另一个输出就是找零。</p><p>在比特币隐私性研究的起步阶段，就已经能看出，钱包聚类分析的理论被确立为比特币隐私性研究的基础工具。虽然它还没有形成完整的理论，证据支持也比较有限，因此需要使用相对较强的假设来解释观察到的数据。</p><h2 id="经验结果：2013-2017"><a href="#经验结果：2013-2017" class="headerlink" title="经验结果：2013 ~ 2017"></a>经验结果：2013 ~ 2017</h2><p>虽然研究者们尝试验证这些论文的结论，比如，通过访问比特币的用户并让他们确认钱包聚类分析的准确性，或者使用模拟方法（就像 Androulaki 等人的论文一样），关于用户正在使用的对抗策略的信息很少。</p><p>Sarah Meiklejohn、Marjori Pomarole、Grant Jordan、Kirill Levchenko、Damon McCoy、Geoffrey M. Voelker 和 Stefan Savage 的论文《<a href="https://dl.acm.org/doi/abs/10.1145/2504730.2504747">一堆比特币：识别匿名人之间的支付</a>》（PDF：<a href="https://dl.acm.org/doi/pdf/10.1145/2896384">1</a>、<a href="https://web.archive.org/web/20180417225209id_/http://conferences.sigcomm.org/imc/2013/papers/imc182-meiklejohnA.pdf">2</a>）研究了比特币混币器（mixer）的用法，并通过真的使用这些服务来测试启发式分析。在理论层面，他们定义了一种比以往的论文更加通用且准确的找零分析。</p><p>在论文《<a href="https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/155286/eth-48205-01.pdf">数据驱动的比特币去匿名化</a>》中，Jonas Nick 成功地验证了 CIOH 和找零识别启发式分析，使用的是从 BIP 37 布隆过滤器的实现中的一个隐私性 bug 中获得的信息。这个实现主要用在 bitcoinj 内置的轻客户端中，背后的隐私性泄露也在  Arthur Gervais、Srdjan Capkun、Ghassan O. Karame 和 Damian Gruber 的论文《<a href="https://dl.acm.org/doi/abs/10.1145/2664243.2664267">论比特币轻量客户端中的布隆过滤器的隐私性配置</a>》（<a href="https://discovery.ucl.ac.uk/id/eprint/10182350/1/2014-763.pdf">PDF</a>）中得到了描述。这些泄露信息证实，聚类分析是非常强大的；Martin Harrigan 和 Christoph Fretter 的论文《<a href="https://ieeexplore.ieee.org/abstract/document/7816867">地址聚类分析的反常效率</a>》（<a href="https://arxiv.org/pdf/1605.06369">PDF</a>）就详细讲解了这一发现。</p><p>还有人观察到，攻击者也会发送比特币，不过不是像《一堆比特币》论文说的那样通过混币器，而是将小额的资金发送到在区块链上已经出现过的地址中。这种动作被称为 “粉尘攻击” <sup><a href='#note1' id='jump-1-0'>1</a></sup>，可以借由两种方式让受害者去匿名化。第一种是，收款的钱包可能会花费这些资金，造成地址复用；第二种是，较老版本的 Bitcoin Core 软件<a href="https://github.com/bitcoin/bitcoin/pull/18038">经常</a>重新广播收款交易，所以一个在 P2P 网络中连接了许多节点的攻击者就可以观察，是否哪个节点在重新广播这些粉尘交易，然后将这个节点的 IP 地址跟钱包集群关联起来 <sup><a href='#note2' id='jump-2-0'>2</a></sup>。</p><p>虽然 Matteo Loporchio、Anna Bernasconi、Damiano Di Francesco Maesa 和 Laura Ricci 的论文《<a href="https://link.springer.com/article/10.1007/s41109-023-00557-4">比特币在积累粉尘吗？小额比特币交易分析</a>》（<a href="https://link.springer.com/content/pdf/10.1007/s41109-023-00557-4.pdf">PDF</a>）提出了一些洞见、探究了粉尘攻击，但他们分析的数据集仅仅覆盖到 2017 年（论文的出版时间是 2023 年）。这项工作看到了这种攻击在揭晓地址集群时候的有效性：</p><blockquote><p>这意味着，尽管粉尘攻击交易仅占所有产生了粉尘输出的交易的 4.86% ，但在所有感染过粉尘且被聚类的地址中，有 66.43% 都是因为粉尘而被聚类的。考虑到整个数据集的大小，可以假设是粉尘攻击的交易只占所有交易的 0.008% ，却让所有地址的 0.14% 被聚类（如无粉尘攻击，它们会依然被认为是孤立的）。</p></blockquote><p>这一阶段的研究令人印象深刻的地方在于，出现了对钱包聚类理论的更严苛检验。越来越清楚的是，在一些情况下，用户的行为是可以很容易、很确凿地被观察出来的；比特币对隐私性的保障绝不完美，不仅在理论上如此，越来越多的科学证据也表明事实如此。</p><h2 id="钱包指纹：2021-2024"><a href="#钱包指纹：2021-2024" class="headerlink" title="钱包指纹：2021 ~ 2024"></a>钱包指纹：2021 ~ 2024</h2><p>“钱包指纹” 指的是在交易的数据外观中可以识别出来的模式，也许意味着用户在使用某一款钱包软件。近年来，研究者们已经在钱包聚类分析中应用了钱包指纹分析。通常来说，一个钱包集群，都是使用同一款钱包软件来创建的，因此，在集群内，任何可以观察到的指纹都应该是完全一致的 <sup><a href='#note3' id='jump-3-0'>3</a></sup>。</p><p>举个钱包指纹分析的简单例子：每一笔交易都有一个 nLockTime 字段，可以用来顺带标注创建交易的日期  <sup><a href='#note4' id='jump-4-0'>4</a></sup>；它的数值可以是区块高度，也可以是日期。在不需要标注日期时，这个字段可以使用任何代表已经过去的时间点的数值，一般来说是 0 ，但这样的交易在签名时候就没有日期标准。为了避免暴露用户的意图以及解决 “<a href="https://bitcoinops.org/en/topics/fee-sniping/">手续费狙击</a>” 顾虑，一些钱包会随机指定一个代表近期时间的 nLockTime 数值。然而，因为一些钱包总是使用 0 数值，当我们无法确定一个输出到底是支付还是找零时，后续的一笔交易可能就会揭晓这个信息。比如说，假设跟一个输入钱包相关的所有交易都使用 0 作为 nLockTime 数值，但某一个输出的花费交易竟然不是这样的，那就可以合理假设，这个输出是给另一位用户的支付。</p><p>还有许多其他已知的指纹。Ishaana Misra 的文章《<a href="https://ishaana.com/blog/wallet_fingerprinting/">钱包指纹：侦测与分析</a>》是一份全面的总结。</p><p>Malte Möser 和 Arvind Narayanan 的论文《<a href="https://link.springer.com/chapter/10.1007/978-3-031-18283-9_19">比特币中的复活地址聚类</a>》（<a href="https://arxiv.org/pdf/2107.05749">PDF</a>）也在聚类问题中应用了钱包指纹。他们使用它作为改进找零识别方法的基础。他们依靠钱包指纹来训练和评估使用机器学习技术（随机森林）的强化找零分析。</p><p>很快，在《<a href="https://www.usenix.org/conference/usenixsecurity22/presentation/kappos">如何拆分 100 万：验证和拓展比特币聚类分析</a>》（<a href="https://www.usenix.org/system/files/sec22-kappos.pdf">PDF</a>）中，George Kappos、Haaroon Yousaf、Rainer Stütz、Sofia Rollet、Bernhard Haslhofer 和 Sarah Meiklejohn 就使用一份由一家区块链分析公司提供的交易类聚数据样本，拓展并验证了这一方法；结果表明，钱包指纹方法比起单单使用 CIOH 和更简单的找零识别线索要准确很多很多。在聚类中考虑钱包指纹之后，去匿名化就变得简单很多很多。相应地，在钱包软件实现中考虑指纹，就能提高隐私性。</p><p>最近的一篇论文《<a href="https://dl.acm.org/doi/abs/10.1145/3589334.3645684">探究未确认的比特币交易，用于高效的比特币地址聚类</a>》（<a href="https://arxiv.org/pdf/2303.01012">PDF</a>），来自 Kai Wang、Yakun Cheng、Michael Wen Tong、Zhenghao Niu、Jun Pang 和 Weili Han，分析了交易在被区块确认以前的广播模式。比如说，可以观察到不同的手续费追加动作，有些是 “<a href="https://bitcoinops.org/en/topics/replace-by-fee/">手续费替换</a>”，有些是 “<a href="https://bitcoinops.org/en/topics/cpfp/">CPFP</a>”。这样的模式，虽然并非严格意义上从交易的数据外观中推导出来的指纹，也依然可以认为是钱包的指纹，不过是跟特定的钱包软件相关的更加昙花一现的模式，在连接到比特币 P2P 网络时可以观察到，但不会在已经得到确认的交易的历史上出现，因为区块链不记录这些。</p><p>类似于比特币点对点网络层，闪电网络的 gossip 层也会分享关于公开通道的信息。这通常并不会被视为一种钱包指纹，但可以松散地认为也是，是闪电交易在区块链上的指纹的补充。闪电通道也是钱币（UTXO，未花费的交易输出），每一条通道都连接两个闪电节点（可以用他们的公钥来识别），可以视作一条边，许多的边就形成了一个网络。因为一个节点可能跟多条通道有关，而且每条通道都是钱币，这就类似于地址复用 <sup><a href='#note5' id='jump-5-0'>5</a></sup>。Christian Decker 曾经公开存档闪电网络图谱的历史数据。一项关注这一语境下的钱包聚类分析的工作是《<a href="https://link.springer.com/chapter/10.1007/978-3-662-64322-8_9">闪电网络协议种的跨层去匿名化方法</a>》（<a href="https://arxiv.org/pdf/2007.00764">PDF</a>），来自 Matteo Romiti、Friedhelm Victor、Pedro Moreno-Sanchez、Peter Sebastian Nordholt、Bernhard Haslhofer 和 Matteo Maffei 。</p><p>在过去十五年间，钱包聚类分析技术发展迅猛。不幸的是，比特币隐私技术的采用却遥遥无期。而且就算曾经采用过，也没有跟上攻击研究的最新进展。</p><h2 id="故事还未完"><a href="#故事还未完" class="headerlink" title="故事还未完"></a>故事还未完</h2><p>如我们所见，从中本聪寥寥数笔介绍“地址复用”和“CIOH”开始，钱包聚类分析就是比特币隐私性中的基础观念，并在过去几年中逐渐完善。大量的学术文献质疑了一些对比特币隐私性的过分乐观的理解，起点是 WikiLeaks 在 2011 年将比特币捐赠称为是 “匿名的”。隐私性保护的进一步研究和开发还有许多机会。</p><p>应该放在心里的事情是，聚类分析技术只会不断进步。“要记住：攻击只会变得更加精巧，绝对不会变弱”<sup><a href='#note6' id='jump-6-0'>6</a></sup>。区块链的本性不会改变，交易图谱中的模式会永远留存，等待着某人来探究它。使用 Electrum 协议的轻钱包会向自己的 Electrum 服务端泄露自己的地址集群。提交 <a href="https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki">xpub</a>（拓展公钥）给某个服务商的用户会在一次查询中泄露所有过去和未来交易的集群信息。区块链分析行业的本性不会改变，专有的技术有显著的优势，比如有渠道访问 KYC 信息、为大量交易打标签。这些外在于区块链的聚类信息格外难以估量，因为，虽然它们会被分享给第三方，这些信息并不总是公开的，不像基于链上数据的聚类信息一样。因此，这些泄漏并不总能广泛观察到。</p><p>此外，还要记得，对隐私性的控制权并不总在当事人手上。当某个用户失去了隐私性，所有其他用户的隐私性也会降级。这个消除过程意味着隐私性的线性衰减：每一个被成功去匿名化的用户都可以先被排除在外，然后对剩余用户进行进一步的去匿名化。换句话说，即使你采取了措施来保护你的隐私性，如果其他人没有这样做，你就会显得扎眼。</p><p>但是，如我们所见，假设隐私性的衰减是线性的，还是过分乐观了一些；指数型衰减才是更加安全的假设。这是因为分治策略（divide-and-conquer）也适用于钱包聚类分析，就像“20 问题游戏”一样。CoinJoin 交易也被专门设计为打破 CIOH，我们的下一篇文章的话题就是这个：有一篇论文结合了钱包聚类分析和 “交集攻击（intersection attacks）” —— 这是一个借自混合网络隐私性文献的概念 —— 来去匿名化 CoinJoin 交易。</p><p>（完）</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>1.<a id='note1'> </a>不要跟另一种 “粉尘攻击” 相混淆，就像 LaurentMT 和 Antoine Le Calvez 在聚类分析<a href="https://medium.com/@laurentmt/good-whale-hunting-d3cc3861bd6b">这个案例</a>时那样。 <a href='#jump-1-0'>↩</a></p><p>2.<a id='note2'> </a>一个值得关注、或多或少也有关联的论文是《<a href="https://www.usenix.org/conference/usenixsecurity20/presentation/tramer">对 Zcash 和 Monero 节点的攻击（对匿名交易的远程侧信道攻击）</a>》,来自 Florian Tramer、Dan Boneh 和 Kenny Paterson，也通过研究点对点网络层的时间侧信道，成功将节点的 IP 地址与观察密钥（viewing keys）关联起来。 <a href='#jump-2-0'>↩</a></p><p>3.<a id='note3'> </a>更准确地说：指纹的分布在一个集群中应该是一致的，因为一些钱包会故意将交易的特定属性随机化。 <a href='#jump-3-0'>↩</a></p><p>4.<a id='note4'> </a>注意，为了强制执行 nLockTime，交易的至少一个输入的 nSequence 应该也是非最终的（non-final），这就让事情变得更加复杂，不管是为了附注时间，还是为了产生不同的可观察模式。 <a href='#jump-4-0'>↩</a></p><p>5.<a id='note5'> </a>通道资金是有参与通道的双方共享的，但通道的关闭交易类似于一笔来自通道注资者的支付。双向注资通道也许可以击败 CIOH ，就跟 <a href="https://payjoin.org/">PayJoin 交易</a>一样。 <a href='#jump-5-0'>↩</a></p><p>6.<a id='note6'> </a><a href="https://www.schneier.com/blog/archives/2009/07/new_attack_on_a.html">对 AES 的新型攻击 —— Schneier 论安全</a> <a href='#jump-6-0'>↩</a></p>]]></content>
    
    
    <summary type="html">更加复杂的聚类分析方法</summary>
    
    
    
    
    <category term="隐私性" scheme="https://www.btcstudy.org/tags/%E9%9A%90%E7%A7%81%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>钱包聚类分析原理</title>
    <link href="https://www.btcstudy.org/2025/10/21/the-scroll-2-wallet-clustering-basics/"/>
    <id>https://www.btcstudy.org/2025/10/21/the-scroll-2-wallet-clustering-basics/</id>
    <published>2025-10-21T07:25:29.000Z</published>
    <updated>2025-10-31T04:07:54.146Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：nothingmuch</em></p><p><em>来源：<a href="https://spiralbtc.substack.com/p/the-scroll-2-wallet-clustering-basics">https://spiralbtc.substack.com/p/the-scroll-2-wallet-clustering-basics</a></em></p></blockquote><p>比特币交易所形成的图谱（graph）有许多可以观察到的模式。这些模式中的一部分已经得到了研究，并且用来猜测关联到同一个钱包的钱币，理论和实践皆有。</p><p>每一笔交易都由一组输入（“聪（sat）” 的来源）和一组输出（聪的去处）组成。<strong>输入</strong>会指向以往交易的输出。<strong>输出</strong>则将一些比特币锁定在特定的花费条件（也即 “地址”，也可称为“公钥脚本”或“输出脚本”）中。“关联钱币”意味着识别出控制着一组交易输出（不论是否已经花费过）的密钥的主体。</p><p>比特币白皮书的第 10 个章节“隐私性”简要讨论了钱币关联：</p><blockquote><p>应该为每一笔交易使用一对新的密钥，以防止这些交易被关联起来、指向同一个主人。</p></blockquote><p>当相同的公钥控制着多个钱币时，这些钱币显然就有关联，因为可以假设只有一个主体知道这个公钥背后的私钥（从而同时控制着这几个钱币）。</p><p>然而，地址复用并不是唯一的危险。白皮书继续说：</p><blockquote><p>一些关联依然是不可避免的：携带多个输入的交易，必然会表明，这些输入有同一个主人。</p></blockquote><p>这个假设通常被称为“输入来源同一性（common input ownership heuristic）”，缩写为 “<strong>CIOH</strong>”，也叫 “多输入线索”。它只是一种线索，因为，不像这段引文说的那么绝对，反例是存在的。不过，虽然它并不必然为真，但常常为真。</p><p>过去几年中，出现了更加复杂的钱包聚类分析方法。比如说，将交易的找零输出与支付输出区分开来、使用交易图中的更大结构（而不是只分析一笔交易）。部分方法已经在学术论文中得到了描述，但也一些依然密不示人。提升后的方法可以关联更多钱包，或者可以避免所谓的 “聚类崩溃”，也就是不同用户的钱币被错误的关联起来。商业产品常常还能从额外的信息源受益，比如 KYC 数据，并不完全依赖于用户在使用比特币协议时泄露的隐私；但是，聚类分析依然是中心主题。</p><p>这催生了一种隐私性的对抗性框架， 其中去匿名化攻击尝试将钱币划分到不同集群。从这个视角出发，捍卫隐私就意味着，要让敌手更加难以正确地将钱币划分到不同集群。最著名的案例包括协作式的交易构造，不论是公开制造困难的 CoinJoin 协议，还是悄悄地制造难题的 PayJoin，又或者这种困难最显然只是软件工作原理的一部分的闪电节点交易，在所有情形中，这种最简单的假设（CIOH）都会被打破，只能进行更精细的分析。</p><p>这种对抗性框架也表明，不同的敌手拥有不同的能耐，合适的对抗模式取决于用户所面临的威胁模型：你是更加担心专制政府的监视，还是来自你的交易对手的窥探？</p><p>后续的文章将深入这些主题的细节。</p><blockquote><p><a href="https://www.btcstudy.org/2025/10/23/the-scroll-3-a-brief-history-of-wallet-clustering/"><em>续篇见此处</em></a></p></blockquote>]]></content>
    
    
    <summary type="html">捍卫隐私就意味着，要让敌手更加难以正确地将钱币划分到不同集群</summary>
    
    
    
    
    <category term="隐私性" scheme="https://www.btcstudy.org/tags/%E9%9A%90%E7%A7%81%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>在闪电网络上发行稳定币：好的，坏的，未知的</title>
    <link href="https://www.btcstudy.org/2025/10/20/usdt-on-lightning-the-good-the-bad-and-the-unknown/"/>
    <id>https://www.btcstudy.org/2025/10/20/usdt-on-lightning-the-good-the-bad-and-the-unknown/</id>
    <published>2025-10-20T06:15:16.000Z</published>
    <updated>2025-10-31T04:07:54.151Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Roy Sheinfeld</em></p><p><em>来源：<a href="https://blog.breez.technology/usdt-on-lightning-the-good-the-bad-and-the-unknown-aefc3aaf6999">https://blog.breez.technology/usdt-on-lightning-the-good-the-bad-and-the-unknown-aefc3aaf6999</a></em></p></blockquote><p>每个人都听过这句 <del>中国谚语</del> 讹传的英国成语：“<a href="https://quoteinvestigator.com/2015/12/18/live/">愿你活在有趣的时代</a>”，并且知道为什么它听起来怪怪的。它太过深沉，就像 80 岁的边缘人说的话。</p><p>（译者注：引文所链接的网页考证得，该谚语并不来自英语，而是一句中国谚语：“宁为太平犬，不作离乱人”。所以作者使用了删除线来暗示，并说这是讹传。）</p><p>但你有没有想过它的反面呢？根据 <a href="https://thijsporck.com/2020/09/15/when-medieval-chroniclers-have-nothing-to-report-the-years-190-381-in-the-anglo-saxon-chronicle/">Anglo-Saxon 编年史</a>，有一段接近两个世纪的时间，是没有什么事情发生的。<a href="https://en.wikipedia.org/wiki/Vivian_Mercier">Vivian Mercier</a> 对《等待戈多》的著名评语是“一出在连续两次的无事发生中上演的戏剧”。但如果是连续 191 次的无事发生呢？我还是更喜欢有趣时代。</p><p>这就是我们现在的情况。<a href="https://tether.to/en/">Tether</a> 以及他们发行的稳定币 <a href="https://tether.io/news/tether-brings-usdt-to-bitcoins-lightning-network-ushering-in-a-new-era-of-unstoppable-technology/">USDT</a>，<a href="https://tether.io/news/tether-brings-usdt-to-bitcoins-lightning-network-ushering-in-a-new-era-of-unstoppable-technology/">即将登陆闪电网络</a>。关于闪电支付何以是<a href="https://medium.com/breez-technology/lightning-is-the-common-language-of-the-bitcoin-economy-eb8515341c11">比特币经济体的通用语言</a>（<a href="https://medium.com/breez-technology/lightning-is-the-common-language-of-the-bitcoin-economy-eb8515341c11">中文译本</a>）、何以<a href="https://medium.com/breez-technology/bitcoins-false-dichotomy-between-sov-and-moe-18e3f968a643">比特币是一种交换媒</a>介，我们最近已经聊了许多（它真的是；请看我们的<a href="https://breez.technology/report/">报告</a>）。</p><p>这两种看法似乎正在合流。得益于闪电网络作为一种通用语言，比特币可以跟许多相邻的技术互操作，比如 USDT 。USDT 即将大大加快比特币进入新的应用场景、新的市场，以及闪电生态系统还没有经历的大规模挑战。</p><p><img src="/../images/usdt-on-lightning-the-good-the-bad-and-the-unknown/0_gkkcwh-AlNb8lsWv.webp" alt="0_gkkcwh-AlNb8lsWv"></p><p style="text-align:center">- 如果可以选择，我宁愿一头扎进未知世界，也不要在沙发上度过一个下午。所有酷的东西都来自未知（图片：<a href="https://c.pxhere.com/photos/d9/f9/skydiving_jump_falling_parachuting_military_training_high_people-747005.jpg!d">pxhere</a>） -</p><p>在闪电网络上发行 USDT 就是一个未知领域。真是有趣的时代。那么，我们来想一想，USDT 加入闪电网络（用闪电网络来转移 USDT）意味着什么 —— 机会、风险，以及还没有答案的问题。</p><h2 id="Taproot-Assets-101"><a href="#Taproot-Assets-101" class="headerlink" title="Taproot Assets 101"></a>Taproot Assets 101</h2><p>闪电网络的设计目标是提高比特币区块链的吞吐量，所以比特币是它唯一的货物。<a href="https://lightning.engineering/posts/2024-07-23-taproot-assets-LN/">Taproot Assets 则是一种新的协议</a>，允许同质化资产（例如稳定币）可以通过闪电通道来传输；因为处理比特币支付的相同基础设施，可以处理作为哈希化元数据附件（hashed metadata piggybacking）的同质化资产。</p><p>它的工作原理，对于已经理解闪电网络的人来说非常简单。接收者生成一张发票，跟边缘节点（就是将这个用户连接到广大的闪电网络的节点）请求比特币与相关资产（在我们这个案例是 USDT）的汇率。一旦这名用户接受了某个边缘节点的汇率，就生成一张用于支付的发票，并发送给支付者。支付者将资产发送给自己的边缘节点，这个边缘节点将资产转化为一笔普通的比特币支付，这笔支付（就像普通的闪电支付）穿过闪电网络，抵达接收者这边的边缘节点，这个节点再将比特币支付转化成原本类型的资产（USDT）并转发给接收者。</p><p><img src="/../images/usdt-on-lightning-the-good-the-bad-and-the-unknown/0_ExFhrn-cMtv6_MhE.webp" alt="0_ExFhrn-cMtv6_MhE"></p><p style="text-align:center">- Alice 正在给 Bob 支付。一些路由节点可以在两个边缘节点之间转发支付，但他们只能看到比特币在传输。 -</p><p>Taproot Assets 利用了闪电网络和比特币的多功能性，让用户可以在闪电网络上传输新类型的资产，同时将比特币作为通用的交换媒介。所有节点都使用闪电通用语言的必然推论是，边缘节点之间的任何路由节点都只能看到比特币在传输。闪电网络告诉他们如何移动比特币，而他们也只知道自己是在移动比特币。太棒了！</p><p>但技术之外还有别的。不管怎么说，USDT 本身是一种大规模的交换媒介。如今每天都有<a href="https://usdt.tokenview.io/en/charts">数百亿的 USDT</a>在换手，支付数量高达几百万笔。它的每日交易额跟巴西雷亚尔和印度卢比是同一级别。这可了不得。所以，闪电网络对 USDT 来说意味着什么、USDT 的加入对闪电网络来说又意味着什么呢？</p><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><h3 id="对比特币来说"><a href="#对比特币来说" class="headerlink" title="对比特币来说"></a>对比特币来说</h3><p>迄今为止，大部分比特币化商业的策略都集中在吸引尽可能多的人选择这橙色药丸（比特币），并在他们中发展<a href="https://thebitcoinmanual.com/articles/btc-circular-economies/">循环经济</a>（每次只能说服一个用户）。这种策略可能已经触及了它的<a href="https://medium.com/breez-technology/orange-pilling-has-stopped-working-4a407252c7a3">规模限制</a>。循环在过去十五年间茁壮成长，但依然很有限，我们需要一次能够说服几百万人。</p><p>现在，USDT 和 BTC 在闪电网络上可以原生地互操作，这个循环就获得了许多切线。有了 USDT，一笔交易的双方 —— 支付方和接收方 —— 就可以各自选择要使用 BTC 还是 USDT，没有任何一方会被对方的选择限制。客户可以用 BTC 支付，商家可以收到 USDT 。或者客户可以用 USDT 支付但商家收到的是 BTC 。或者他们可以使用同一种资产。<em>这都不重要。</em>一旦两种资产都原生于闪电网络，它们就可以自动、无摩擦地相互交换。每个人都能自由选择比特币的优势（作为用户自下而上选出的交换媒介），也可以选择 USDT 的优势（其价格与美元的货币政策以及 Tether 的流动性储备保持稳定）。</p><p>结果是，闪电网络和比特币将获得<a href="https://tether.io/news/how-many-usdt-users-are-there/">几百万用户</a>以及价值数十亿美元的消费能力。这是比特币的功用的质性延申。这种新的应用场景将比一船的橙色药丸带来更大的好处。许多这样的用新用户可能不知道他们在使用闪电网络（因为闪电支付作为<a href="https://medium.com/breez-technology/lightning-is-the-common-language-of-the-bitcoin-economy-eb8515341c11">比特币经济体的通用语言</a>的力量）。但我们这些老派的闪电网络人知道，这就是我们一直在开发的方向。</p><p><img src="/../images/usdt-on-lightning-the-good-the-bad-and-the-unknown/0__Tc5m-oT91MueHc_.webp" alt="0__Tc5m-oT91MueHc_"></p><p style="text-align:center">- 圆形（circle，循环）当然美丽，但拥有无数切线的圆形美得令人窒息（图片：<a href="https://unsplash.com/photos/time-lapse-photography-of-led-waters-eStCg6FRw_E?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash">Todd Quackenbush</a> -</p><p>此外，USDT 的集成可以让美国用户更容易使用闪电网络。美国的税收法律<a href="https://www.nerdwallet.com/article/investing/crypto-tax-rate">将 BTC 当成一种股权</a>，从而每一次支付都可能是复杂的税收事件的串联。但如果美国用户可以用一种不涉及资本利得的资产来使用闪电网络，那么他们就能获得闪电网络的许多好处，而无需负担它在监管上的一种缺点。</p><h3 id="对-Tether-来说"><a href="#对-Tether-来说" class="headerlink" title="对 Tether 来说"></a>对 Tether 来说</h3><p>Tether 一般会在久经考验 —— 已经获得显著市场吸引力 —— 的区块链 上发行 USDT，而且他们没有兴趣推出自己的区块链网络。USDT 当前在 Algorand、Celo、Cosmos、Ethereum、EOS、Liquid Network、Solana、Tetos、Ton 和 Tron 上<a href="https://tether.to/en/faqs/">发行</a>。注意，所有这些都是权益证明（PoS）类型的区块链（除了 Liquid，它是联盟侧链），所以它们必然都比比特币更加中心化。</p><p>这些区块链也都有不同方面的牺牲。Ethereum 是相对去中心化的（在 PoS 区块链中），但它的<a href="https://nowpayments.io/blog/ethereum-transaction-fees-are-too-high-what-should-i-do">交易手续费显著更高</a>。Tron 更便宜。可能这就是 —— <a href="https://okhlopkov.com/usdt-popularity-across-different-blockchains/">根据一份估计</a> —— Tron 上的散户 USDT 用户的月度活跃量是 Ethereum 上的 7 倍，而且发送数量是 8 倍。但 <a href="https://www.financemagnates.com/cryptocurrency/news/tron-is-a-highly-centralized-project-ex-cto-says/">Tron 是非常中心化的</a>，这就成了 USDT 的一个瓶颈。如果 Tron 失败，Tether 就会失去其总发行量的一半。通过允许 USDT 在闪电网络 —— 天然去中心化的网络 —— 上移动，Tether 就能缓解它对便宜的中心化网络的依赖。</p><p>而且，就像 USDT 可以协助美国用户访问闪电网络，闪电网络也可以让 USDT 在美国市场上用起来更加便利。美国的交易所有时候会限制使用 USDT 的区块链。例如，<a href="https://www.coinbase.com/en-de/price/tether">Coinbase 说</a> “Coinbase 只支持 Ethereum 区块链（也即 ERC-20 标准）上的 USDT。不要在其它区块链上向 Coinbase 发送 USDT”。闪电网络让 Binance、Coinbase 和 Kraken（已经支持了闪电网络）这样的大交易所在给用户提供 USDT 支付时多了一个去中心化的替代选择。</p><h2 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h2><p>新一届美国政府已经提出要吸引整个稳定币行业回到明国，并将监管它们当成自己的 “<a href="https://www.nbcchicago.com/news/business/money-report/white-house-crypto-czar-david-sacks-says-first-priority-is-stablecoin-legislation/3665689/">首要任务</a>”。换句话说，他们会密切关注这里的进展。只要 USDT 这样的稳定币是锚定美元的，那些控制美元并从中获益的人就会想要控制稳定币。</p><p>监管者甚至认为他们可以通过监管我们的自由来提高我们的自由。这不可能。但这就是他们的本性。随着 USDT 在闪电网络上获得使用、闪电网络因为可以转移 USDT 而具备效用，我们都会吸引更多来自监管者的关注。很难说他们可以干预多少、准备怎么干预，但都不会是什么有趣的事。监管永远只是摩擦。</p><p>一个可能吸引监管审查的就是边缘节点。传统的中心化交易倾向于接受许多司法辖区的 KYC&#x2F;AML 规则。如果边缘节点能够自动交换 USDT 和 BTC 并转发支付，对于（不会喜欢去中心化的）<a href="https://medium.com/breez-technology/why-bitcoin-needs-to-become-a-medium-of-exchange-80d5c9e1de65">监管者</a>来说，他们看起来就非常像传统的交易所。</p><h2 id="未知的"><a href="#未知的" class="headerlink" title="未知的"></a>未知的</h2><h3 id="代价是什么？值得吗？"><a href="#代价是什么？值得吗？" class="headerlink" title="代价是什么？值得吗？"></a>代价是什么？值得吗？</h3><p>虽然闪电网络给用户和 USDT 提供了显著的好处，但显然，并非对所有涉及 USDT 的交易来说，闪电网络都是最优的解决方案。闪电网络的用户希望低手续费。使用中心化区块链和托管交易的 USDT 用户也这么希望。但向闪电支付加入第二种资产，就会带来每个人 —— 路由节点、用户、尤其是边缘节点 —— 都不得不考虑的金融因素。</p><p>首先，边缘节点提供的是跟 LSP 一样的标准化服务—— 保证用户能够连接到闪电网络，并具有足够的通道和足够的流动性来保证支付送达 —— <em>还要</em> 转换资产。资产转换是一种有价值的服务，应该得到补偿，而且也可能是有风险的（见下文）。</p><p>其次，USDT 可能会显著提升交易量，这就意味着 LSP 和路由节点需要向网络投放更多流动性以路由这些支付。他们不能采取跟托管交易所一样的捷径 —— 仅仅更新自己的内部账本。<a href="https://medium.com/breez-technology/lightning-economics-how-i-learned-to-stop-worrying-and-love-inbound-liquidity-511d05aa8b8b">流动性配置的经济原理</a>依旧适用，只多不少。</p><p>闪电网络能够跟 Tron 这样的中心化交易所竞争 USDT 支付吗？答案可能跟大部分尝试匹配技术和用途的问题相似：每一种技术都有自身的长处和短处，使之适合于某一些用途、不适合另一些用途。通常来说，市场会分辨出来。不过，因为闪电网络并不是为这个用途量身定制的，所以价格发现将会是个反复试错的过程，这需要时间。</p><h3 id="免费看涨期权？"><a href="#免费看涨期权？" class="headerlink" title="免费看涨期权？"></a>免费看涨期权？</h3><p>边缘节点面临 “<a href="https://diyhpl.us/~bryan/irc/bitcoin/bitcoin-dev/linuxfoundation-pipermail/lightning-dev/2018-December/001752.txt">免费看涨期权问题</a>” 的风险，非常有趣，值得在这里单独讨论。这是一种新的风险，存在于任何在一笔闪电支付中涉及两种资产的情形。</p><p>闪电支付要在一段时间内完成，才能正常结算，否则，发票会自动失效。这个时间就是 “<a href="https://www.voltage.cloud/blog/how-do-htlc-work-lightning-network">HTLC</a>（哈希时间锁合约）”中的 “T”。</p><p>当边缘节点给出他们对 USDT↔BTC 支付的汇率时，他们是根据一些参数（比如他们当前的流动性条件 <em>以及现货汇率</em>）给出的价格。但在用户接受一个边缘节点的出价到相关的 HTLC 过期之间，有一个时间窗口。价格在这个窗口内可能发生变动。即使我在一个汇率时发起了一笔 USDT 支付，我也可以等到汇率对我更优时才释放原像、结算 HTLC 。如果汇率变动不利于我，那我可以不释放原像。在这种情况下，这个边缘节点可以发起通道关闭来赎回资金，但那会很慢（而且也比较昂贵）。如果汇率变动有利于我，那么这个边缘节点就会受到损失。正面，我没有损失；反面，我占到了这个边缘节点的便宜。</p><p>任何涉及资产组合的闪电支付都会给用户一份<a href="https://www.investopedia.com/terms/c/calloption.asp">看涨期权</a>。传统的金融机构，在卖出看涨期权时，会通过在价格中加入风险溢价，来管理风险。这些期权，都没有准备的边缘节点来说可能非常昂贵。<a href="https://medium.com/boltzhq/the-problem-with-free-options-69f9f59a2d48">只需要问问在 Boltz 工作的 Kilian 和 Michael 就知道了</a>（据我所知他们是最早完整提出这个问题的人，并开设了课堂告诉我们这个生态中的所有人）。替代选择是边缘节点在自己的报价中计入看涨期权的价格，就跟传统金融机构一样。跨期套利是个伟大的事情，如果你能做到的话。</p><p><img src="/../images/usdt-on-lightning-the-good-the-bad-and-the-unknown/0_un_UZ3oV2jyR105Z.webp" alt="0_un_UZ3oV2jyR105Z"></p><p style="text-align:center">- 有多少早期的闪电网络开发者和崭露头角的 LSP 预料到了，到 2025 年他们需要对冲闪电支付内在的看涨期权？ -</p><p>用户并不是边缘节点的唯一顾虑来源。如果一个路由节点失败于转发原像 —— 无论是这个路由节点故意的，还是功能故障 —— 这个边缘节点也会遭遇损失。不过，至少在路由节点上，也许可以实现某种剩余系统来帮助选择转发路线。但是，面对终端用户，剩余系统可能派不上用场，因为新用户会持续不断地加入网络。</p><p>到目前为止，免费看涨期权都从来没有成为闪电网络的问题，因为它只处理一种资产：比特币。如果免费期权问题变得非常严重，可以想象会出现多个并行的、只是用一种通货的闪电网络。一个只使用比特币、另一个只使用 USDT，等等。如果比特币被排除在循环经济之外，我们就会失去比特币互操作性的好处。我们甚至会后悔当初将 USDT 带到闪电网络上。</p><h2 id="我们为有趣时代而来"><a href="#我们为有趣时代而来" class="headerlink" title="我们为有趣时代而来"></a>我们为有趣时代而来</h2><p>比特币一直被认为是革命性的。颠覆已经朽坏的法币就是它的目标，一直如此。我们在这里，就是为了这场革命。我们知道这场变革和颠覆不会一帆风顺。</p><p>但变化是个好事情。进步就是一种人们欢迎的变化。我们欢迎 USDT 到闪电网络上来，因为我们看到了机会。对 USDT 用户、对闪电网络和对比特币来说，它代表着进步。</p><p>但是，跟其它变化一样，它也需要缜密的思考、准备、敏锐的直觉和快速的回应。如果没有合适的装备和技能，你就无法进入未知领域。闪电网络流动性商业中的人，都将面对一些新的挑战，但也都有可能获得巨大的收益。</p><p>Tether 将获得一个经济性的、去中心化的分布式网络，并且能更好地服务至关重要的美国市场。闪电网络将获得大规模的流动性和用户。比特币将原生地与 USDT 互操作。这就是我们兴奋的原因。</p><p>但监管者也在看着你。而且边缘节点只会提供必要的转换服务（如果这样做有利可图）。所以，面对挑战吧，我们会在闪电网络中尝试一些：更努力地思考、更细致地设计、加强我们的代码、培育我们的市场，并且，永远不忘我们的终极目标 —— 实现无止境的比特币经济。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">闪电生态系统还没有经历的大规模挑战</summary>
    
    
    
    
    <category term="Taro" scheme="https://www.btcstudy.org/tags/Taro/"/>
    
  </entry>
  
  <entry>
    <title>比特币的功用：让价值像信息一样传递</title>
    <link href="https://www.btcstudy.org/2025/10/16/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/"/>
    <id>https://www.btcstudy.org/2025/10/16/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/</id>
    <published>2025-10-16T10:19:22.000Z</published>
    <updated>2025-10-31T04:07:54.147Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Roy Sheinfeld</em></p><p><em>来源：<a href="https://blog.breez.technology/the-utility-of-bitcoin-moving-value-like-information-2513eae84676">https://blog.breez.technology/the-utility-of-bitcoin-moving-value-like-information-2513eae84676</a></em></p></blockquote><p>如果你认为技术发展的轨迹就像宿命，那也不能怪你。在过去数十年中，我们看到了个人计算机、互联网、移动设备依次兴起，而现在，出现了比特币。</p><p>人们已经充分认识到，比特币是最好的资产。这只关乎你的金融知识素养，如果你可以阅读图表，那证据就是很清楚的。</p><p><img src="/../images/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/bitcoin-vs-major-assets.webp" alt="bitcoin-vs-major-assets"></p><p style="text-align:center">- 投资回报率比较（2015 ~ 2025）：比特币 vs. 主要资产；Horizon 计算<p>资料来源：CaseBitcoin & Market Data (2025)【制图：<a href="https://chatgpt.com/">ChatGPT</a>】 -</p><p>不那么明显的是比特币的功用，以及在未来的数十年中，它会如何塑造我们的经济生活。</p><p>除了是一种资产（这正在获得最多的关注和理解），比特币还是一种转移价值的方法。这是它的核心功用。因为它是一种被设计成在互联网上生存、服务于互联网的货币，零售行业的采用可能要在它成为互联网行业的主流 <em>之后</em> 才会到来。那么它如何在互联网上成为主流呢？通过将价值传输商品化 —— 让任何人都能随时随地、为任何目的转移价值，无需中介。</p><p>转移价值是我们生活的一个无比重大的部分，扩大这个领域的可能性就意味着改变我们的行为、塑造我们的社会。当比特币用于转移价值，边界将消失、传统机构（比如银行）会萎缩，而新的联系会萌芽，就像春天一样。这种转变的规模将堪比互联网自身。</p><p>实体书籍很难获得，也很容易查禁（有时候会被焚毁）。而互联网解放了信息，让多得多的人能够获取比以往时候的人多得多的思想。传统的货币被锁在围墙花园和受到市场参与者偏爱的路径里。比特币则代表着这种系统的终结、另一种系统的起点。</p><p><strong>互联网杰解放了信息；比特币解放了价值。</strong></p><h2 id="支付-不等于-价值传输"><a href="#支付-不等于-价值传输" class="headerlink" title="支付 不等于 价值传输"></a>支付 不等于 价值传输</h2><p>要了解当前这场转型的潜力、把它跟鼓吹比特币的陈词滥调区分开来，请把它理解成一场范式转移：从基于法币的支付范式，转变为基于比特币的价值传输范式。这听起来抽象，但实际很简单。</p><p>首先，回顾一下我们都熟悉的东西：支付。传统的<strong>支付是 “结算债务的指令”</strong>，这是职业经济学家们不断<a href="https://doi.org/10.1016/j.jfi.2008.09.001">重复</a>的定义。如果某人要卖给你一杯咖啡，或者帮你理发，那么你就欠他们一些东西，然后通过支付金钱，你就偿还了这笔债务。请注意，在现实中，给他们支付需要指示中介 —— 银行、手机 app、信用卡、中间人 —— 来实际转移价值。</p><p>这跟价值传输完全相反。两者有两个关键区别。首先，如我们提出的概念，价值传输是直接的。价值传输不是一个让中间人来执行某个动作的指令，它就是这个动作本身。其二，价值传输不需要结算债务。支付是一种交换条件（quid pro quo），价值传输则是东西本身。你可以随心所欲地发送价值，尽管这可能是一场买卖，但并不必然如此。</p><p>现金（cash）让支付和价值传输之间的区别更加明显。如果你使用现金给某人支付，你并不是在申请许可。你就是把价值从一个人手上交到另一个人手上。而现金也能做到比结算债务更多的事，也即，它不仅仅能用于支付。在街头艺人的帽子里放一些零钱，或者给你的小孩零花钱，都是简单的价值转移，无需先有一笔债务。你可以用现金来 “推送” 价值，而不是只能用它来交易。</p><p><img src="/../images/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/pushing-value.webp" alt="pushing-value"></p><p style="text-align:center">- 一个人向另一个人推送价值 —— 一种老派的方法。【制图：<a href="https://chatgpt.com/">ChatGPT</a>】 -</p><p>只不过，现金正在被金融当局<a href="https://www.ecb.europa.eu/stats/ecb_surveys/space/html/ecb.space2024~19d46f0f17.ga.html">边缘化</a>，而且很不适合我们的电子世界，所以我们正在失去传输价值的能力。我们信任这些第三方中介，比如银行、信用卡公司、金融服务提供商，会尊重我们的支付指令并满足我们的请求，但支付指令也常常被拒绝或推迟。</p><p>更重要的是，这些支付指令被限定在预先定义好的模式上、受到这些中间人的数据库结构的支配（例如，顾客给商家支付、雇主给雇员支付、一个银行账户给另一个账户支付（<em>假设</em> 这些银行使用同一种电汇协议）。这可能听起来有点夸张，但你想想看 Uber、OnlyFans、AirBnB 和 Spotify 这样的平台。从表面上看，他们看起来全是去中心化的：平台知识连接服务供应商和顾客；但是两者之间的支付却都要走平台预先决定的路线、路上遍布贪婪的中间人 —— 银行、金融科技 app、信用卡公司，等等。每多一个中间人，就多一部分费用、多一些故障概率，以及权限摩擦、监管，等等。</p><p>这跟价值传输形成鲜明对比。简单来说，价值传输浓缩了现金支付的免许可性、即时性和灵活性，而且没有需要持有和转移实体物件的约束。</p><p>但是，在电子世界中，如何重新设想出一种现金？如何从支付的局限性中走出、获得价值传输的力量？如果我们有一种办法可以点对点地发送和收取电子现金 ……</p><p>比起电子支付，比特币更好编程、更灵活、更易于采用。比特币让用户可以存储和转移价值，就像用手机来存储和分享一张截图一样流畅和简单。通过将价值处理为另一种形式的信息，比特币为特定用法的整个生态系统开启了经济活动的新范式。</p><p>没错，只能是比特币。</p><h2 id="只有比特币可以协助价值传输"><a href="#只有比特币可以协助价值传输" class="headerlink" title="只有比特币可以协助价值传输"></a>只有比特币可以协助价值传输</h2><p>价值传输 —— 发送者直接向接收者移动价值 —— 代表着对传统支付范式的颠覆。那么，为什么金融科技产业无法做到呢？这不正是 “稳定币（stablecoins，尝试与法币保持汇率稳定、靠区块链网络来转移的 token）” 的目的吗？为什么比特币是基于价值传输的经济体的必要基础？</p><p>简短的答案是：支付已经深度嵌入的法币系统的架构中，也包括金融科技产业。</p><p>一笔金融科技支付设计无数的中间人。每一个中间人都要从这笔交易中赚取回报，他们需要一种计费模式。而他们选择了基于离散的支付，因为这是受到监管的汇款公司可以合法采用的做法。感谢 “KYC（了解你的客户）”、“AML（反洗钱）”和风险评估，汇款公司成了一门昂贵的生意，所以他们的手续费也相对比较高。</p><p>除了开销，中间人也必然会带来摩擦。每一个中间人都受制于监管约束，而且这些约束在不同的国家和司法辖区还有许多不同，这就限制了他们的市场和触达能力。他们还有额外的商业考虑，比如某个领域的大客户因为另一个领域的无关交易而取消业务的风险。而且，这些支付的可编程性也不会超出这些中间人可以合法采用的范围，并且它们既不是不可逆转的，也做不到即时交付。这些中间机构可以等到闲暇时再处理这些支付，而支付者也通常可以在时候撤销支付。</p><p>稳定币经常被吹捧为一种解决方案，但仅仅是将一种基于法币的承诺替换成另一种。如 MiCA 和 GENIUS 法案所示，稳定币在通货管制之下是非常脆弱的。一种稳定币可能在今天能用于跨国交易，但下个季度就不行了。因为新的监管法律，USDT 和其它 9 种稳定币在 2025 年开头就从欧洲的交易所下架了。稳定币的发行者跟金融科技供应商面临相同的外部顾虑，而且他们也都只在权威机构允许的时候才能编程。稳定币只是通过区块链有色眼镜看到的法币。实际上，稳定币和金融科技产业都只是这只传统支付猪唇上的电子口红。</p><p><img src="/../images/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/fiat-payment-pig.webp" alt="fiat-payment-pig"></p><p style="text-align:center">- 没错，稳定币和金融科技都只是这只传统支付猪的电子口号【制图：<a href="https://chatgpt.com/">ChatGPT</a> 和 <a href="https://www.flickr.com/photos/empics/2846078511">Mick Coulas</a>】 -</p><p>比特币会在金融科技和稳定币失败的地方成功。那些昂贵的中间商要求支付，比特币却支持价值传输。他们的操作性约束会限制访问和用法，<strong>比特币则是一种开放的、去中心化、中立的货币网络，为任何时区、任何地方的任何人服务</strong>。他们会受到监管机构的审查、成为地缘政治的棋子，比特币却提供尽可能少的监管踪迹，而且天生不隶属于哪个司法辖区。当他们限制可编程性来保护已经建立的范式和特权时，比特币哺育了创新以及这些创新所需要的可编程性。</p><p>如果我们能够回到互联网诞生的时刻，设计一种专门为电子时代而优化的货币，那么设计出来的东西将与比特币相似。它 <em>就是</em> 比特币。</p><h2 id="比特币无处不在"><a href="#比特币无处不在" class="headerlink" title="比特币无处不在"></a>比特币无处不在</h2><p>App（应用程序）是变革的载体。它们是我们的稳定数据流的节点，也是重要的工具，改变了我们工作、迁徙、恋爱和思考的方式。App 定义了我们人类正在适应的电子环境，我们也开发 app 来适应我们的环境。价值传输使支付相形见绌，而 app 就是价值传输的管道。</p><p>为了理解 app 如何集成及培育价值传输，请回想数码相机的演化。第一款 “没有胶片” 的相机在 1970 年代中期进入市场，但在接下来的 20 年里，它们只是单一用途的设备。甚至连早期的手机上的摄像头也 “仅仅” 只是相机。它们能够用来拍照，但也仅此而已。</p><p>数码相机可以做的事情以及我们跟它们的关系，在 2007 年，随着第一台 iPhone 的发布而产生了革命。它开始不仅仅是一台相机了，相机与 app 的结合改变了一切。开发者们很快集成相机到他们的 app 种，让用户能够拍照片、修改照片、分享照片。</p><p>数码相机与 app 的协同改变了我们的现实和我们的行为。TikTok（抖音）、Instagram 和 Pokemon Go 这样的 app，让 20 年前看起来荒诞不经的动作成为主流（比如，给汉堡包拍照、在公园里追逐看不见的妖怪、把自己呛到晕过去，等等），甚至成为人们梦寐以求的东西。通过手机 app 和照片，我们持续地记录自己的生活、欣赏其他人的生活。甚至 Meta 公司的 AI 眼镜，基本上也只是连接在一个万能应用程序上的相机。</p><p>比特币做的事情是将价值传输商品化，让它具有通用性和自由适应性，就像手机上的数码相机。开发任何类型 app 的任何开发者都可以集成价值传输。即时通信 app 可以让用户在自己的消息种附加价值。社交 app 可以让用户筹集资金和分摊账单，就像点赞一样简单。开发一个平台 —— 比如 Uber、Spotify、AirBnB、OnlyFans —— 不再需要几百万美金，也不需要在围起来的支付花园的迷宫中穿行；任何开发者都能开发出来。</p><p>支付需要银行家和律师。商品化的价值传输只需要比特币和定法这。</p><p>比特币正在从它的青春期走向壮年。具体来说，比特币需要闪电网络来提高吞吐量并加强它的互操作性。在这一方面，闪电网络需要找准自己的位置，成为基于比特币的价值传输的<a href="https://bitcoinmagazine.com/technical/lightning-is-the-common-language-of-the-bitcoin-economy">通用语言</a>（<a href="https://www.btcstudy.org/2025/06/12/lightning-is-the-common-language-of-the-bitcoin-economy/">中文译本</a>）。</p><p>但我们已经做到了。一个由许多比特币子网络 —— 包括 Spark、Ark、Liquid、Fedimint、Botanix 和 Cashu —— 组成的生态系统已经出现，每一个自网络都有独特的优势。SDK 现在已经可用，任何开发者都能将价值传输特性添加到自己的 app 中。用数码相机的类比来说，现在就是 2007 年，iPhone 第一次面市的时刻，也是开发者们开始跟相机 API 玩耍的时刻。</p><p>这是一个机会窗口。技术已经成熟，但市场还没有给这场转型定价。价值即将能够像信息那样移动。如果你想先人一步预测未来，现在已经太晚了；但如果你想利用这场变革，却还来得及。<strong>基于比特币的价值传输与 app 的融合是无可阻挡的，因为它就像给智能手机加上一个摄像头</strong>。</p><h2 id="给后人留下传奇"><a href="#给后人留下传奇" class="headerlink" title="给后人留下传奇"></a>给后人留下传奇</h2><p><img src="/../images/the-utility-of-bitcoin-moving-value-like-information-by-roy-sheinfeld/move-value-like-information.webp" alt="move-value-like-information"></p><p style="text-align:center">- 当价值能够像信息那样传递，所有事情都会改变。【制图：<a href="https://gemini.google.com/">Google Gemini</a>】 -</p><p>支付是我们这个时代的便携录像机，是下一种即将过时的技术。即将开始的新时代会有质的不同，就像 Dorothy 走出她的只有黑色和白色的世界，走进<a href="https://youtu.be/x6D8PAGelN8?t=37">五彩斑斓的 Oz 国</a>一样。<strong>当价值能像信息一样自由流动，经济产业会发生变化，社会也会随之发生变化</strong>。国界变得更不重要。财富和价值的流动将像微风（breeze）（此处是一语双关，“Breeze” 是作者所创办的企业的名字）。跨越政治和阶级障碍的全球交互将从特殊变为寻常。</p><p>万事俱备。比特币正在迅猛成长、打败其它资产。闪电网络允许任何一个比特币端点跟另一个端点交行是。出现了多种多样的协议来服务不同用法和偏好。开发者正在探索能够简化集成比特币价值传输特性的开发工具，他们也正在彼此切磋应用和利用价值传输功能的新方法，这些方法将让他们的应用像 ChatGPT 和谷歌地图一样不可或缺。</p><p>我们正生活在一个时代的末端，我们的子孙会认为这是原始时代，就像电力和自来水发明以前的世纪。我们也生活在另一个时代的开端，他们会认为那是天翻地覆的时代，就像文艺复习和互联网的诞生。做一些让他们感到骄傲的事情吧，同时，给他们一些惊讶：没有我们手创的工具，日子究竟是怎么过的呢！</p><p>（完）</p>]]></content>
    
    
    <summary type="html">互联网杰解放了信息，比特币解放了价值</summary>
    
    
    
    
    <category term="文化" scheme="https://www.btcstudy.org/tags/%E6%96%87%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Bitcoin Core 与 Bitcoin Knots：关于 OP_RETURN 的争议是为了什么</title>
    <link href="https://www.btcstudy.org/2025/10/15/bitcoin-core-or-bitcoin-knots-what-the-op_return-debate-is-actually-about/"/>
    <id>https://www.btcstudy.org/2025/10/15/bitcoin-core-or-bitcoin-knots-what-the-op_return-debate-is-actually-about/</id>
    <published>2025-10-15T03:31:53.000Z</published>
    <updated>2025-10-31T04:07:54.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Aaron van Wirdum</em></p><p><em>来源：<a href="https://bitcoinmagazine.com/technical/bitcoin-core-or-bitcoin-knots-what-the-op_return-debate-is-actually-about">https://bitcoinmagazine.com/technical/bitcoin-core-or-bitcoin-knots-what-the-op_return-debate-is-actually-about</a></em></p><p><em>原文出版于 2025 年 10 月 6 日。在 10 月 10 日，Bitcoin Core 30.0 版本已经发布。</em></p></blockquote><p>即将发布的 <a href="https://bitcoincore.org/">Bitcoin Core 软件</a>发行版本 “Bitcoin Core 30.0” 中的一个默认设定，在比特币社区中引发了分歧。一些用户宣称他们不会升级到这个新版本（哪怕 Bitcoin Core 是最多人使用的比特币客户端软件），而会转而使用 <a href="https://bitcoinknots.org/">Bitcoin Knots 软件</a>：由 <a href="https://ocean.xyz/">OCEAN</a> 矿池的首席技术官 Luke Dashjr 维护的 Bitcoin Core 软件复刻。Luke 是 Bitcoin Core 上正在发生的变化的激烈批评者。</p><p>这场辩论充斥着技术讨论，围绕着一个看起来微不足道的问题。带有 OP_RETURN 输出的交易是以特殊的方式嵌入非限定数据（比如文本或图像）的交易；而相比于以往的版本，Bitcoin Core 30.0 将默认允许带有更大体积 OP_RETURN 输出的交易进入本地的交易池并（在点对点网络中）转发它们。这似乎只是个微小的变更，因为 Bitcoin Core（以及 Bitcoin Knots）节点都已经接受了这样的交易（只要它们进入了区块）；同时，它们也都会转发使用别的方式嵌入非限定数据的交易。</p><p>但是，这个更新还是引发了分裂，因为它反映出了更深层次的顾虑。</p><h2 id="“Bitcoin-Knots-观点”"><a href="#“Bitcoin-Knots-观点”" class="headerlink" title="“Bitcoin Knots 观点”"></a>“Bitcoin Knots 观点”</h2><p>Bitcoin Knots 的支持者普遍不喜欢携带了非限定数据的交易，他们常常将这些交易称为 “垃圾（spam）”。但到目前，绝大多数人都已经不情愿地接受了，这是比特币协议的一个不幸的副作用。但是，他们依然认为，这种类型的用法应该被抑制。</p><p>当 Bitcoin Core 开发者们在软件默认转发的交易的 OP_RETURN 输出的体积上作出限制时，似乎确实让不少人转而在比特币以外的密码货币上使用这种用法。（最著名的是，这种做法常常被用来解释 “以太坊” 这种密码货币的 “初衷”。）</p><p>在 Bitcoin Knots 的支持者看来，Bitcoin Core 30.0 的新的转发策略，象征着投降 —— 它是欢迎 “垃圾交易人” 回到比特币的信号。</p><p>顾虑之一是，这种新转发策略会更加吸引这类使用非限定数据的用户和项目。而因为比特币的区块空间是有限的，用它来存储非限定数据会很快填满区块，反过来推高交易手续费，甚至会高到让许多常规交易（“货币交易”）被挤出去的地步。</p><p>另一个顾虑是，虽然可以用别的方法来嵌入非限定数据，相比于其它方法，OP_RUTURN 还是让这些数据更容易解析；只需更少功夫，就可以将它们还原为（比如说）图片。Bitcoin Knots 支持者们担心，这也会增加在区块中包含非法影音材料（比如儿童性虐影片）的风险，可能导致节点运营者面临监管压力。</p><p>如果问题在于 Bitcoin Core 开发者们不抵抗，那么 Bitcoin Knots 就代表着抵抗。即使他们无法阻止非限定数据被包含在比特币区块链上，也即无法完全防止它们，至少也不要为它们打开一个额外的方便之门。实质上，他们是在发出不欢迎这些垃圾的信号 —— 他们希望这些信号会有一个抑制效果。</p><p>Bitcoin Knots 支持者们说，假设抑制效果能成功把这些垃圾交易人挡在门外，那比特币就能继续用于它最初的设想用途：货币交易。</p><h2 id="“Bitcoin-Core-观点”"><a href="#“Bitcoin-Core-观点”" class="headerlink" title="“Bitcoin Core 观点”"></a>“Bitcoin Core 观点”</h2><p>人们用各种各样的方法在比特币区块链上存储非限定数据。实际上，近些年，许多人用“<a href="https://ordiscan.com/"> Inscriptions</a>”来存储图片，甚至，还能用<a href="https://blog.bitmex.com/the-unstoppable-jpg-in-private-keys/">公钥或者私钥</a>来嵌入非限定数据。</p><p>绝大部分 Bitcoin Core 开发者都同意 Bitcoin Knots 支持者在这件事上的观点：这些用法没有一个是好事，而且也不是比特币的设计用途。但在所有这些选项中，使用 OP_RETURN 是危害最小的版本，因为它尽可能降低了节点的计算机资源消耗量，从而让节点依然是尽可能便宜、可负担的。</p><p>因此，Bitcoin Core 开发者们得出结论：与其尝试抵制 OP_RETURN 的使用，不如放宽对它的限制；维持限制可能只会让事情变得更糟，甚至糟糕得多。</p><p>原因之一在于，仅仅拒绝转发这些携带大体积 OP_RETURN 输出的交易，从技术角度看，并没有很大的效果。这些交易依然可以被一些其它节点（比如 <a href="https://github.com/petertodd/bitcoin/tree/libre-relay-v30.0rc1">Libre Relay</a> 节点）转发给矿工，或者被直接发送给矿工，然后进入比特币区块。如果人们这样做，反过来会有一种中心化效果，因为可以假设，在直接提交数据时，人们更有可能会直接提交给规模更大的矿工，从而他们能够获得额外的手续费收入，而更小的矿工则不能。（如果这样的交易无论如何都会进入区块，那么这种直接提交的方法也会对节点自身造成一些<a href="https://bitcoin.stackexchange.com/a/127903">微妙的损害</a>。）</p><p>更加可靠的解决方案 —— 可以说也是符合逻辑的下一步 —— 是通过一次共识协议升级（软分叉）将（大体积的）OP_RETURN 交易变成无效交易，这样它们就完全不能进入区块了。但问题在于，前面已经提到了，人们可能会使用别的、危害更大的方法，在区块链上存储数据。（事实上，许多人已经偏好使用 Inscripton，因为对于更大体积的数据对象（比如图片）来说，它比 OP_RETURN 方法便宜得多。）</p><p>理论上，这些方法中的一部分也能被遏制。但绝大部分 Bitcoin Core 开发者都预见了，这只会导致一种打地鼠游戏，“垃圾交易人” 每次都会换用不同的方法。这会激励他们将自己的非限定数据 “伪装” 成常规交易，可能导致货币交易与非限定数据日益无法相互区分。</p><p>因此，剩下唯一的解决方案可能就是，指定一些人或者团体来裁定哪些交易是可以接受的、哪些交易不能，实际上也就是引入一些有权实施交易审查的实体。Bitcoin Core 开发者们（本身就是一群无组织的贡献者）没有兴趣扮演这样的角色 —— 不仅是因为他们不希望成为监管机构的目标（从而可能被迫滥用权力 —— 也是希望比特币不要走上这条道路。</p><p>相反，他们总的来说期待这个问题会自我消解，不需要他们的介入。</p><p>这是因为，货币交易（相对来说）的体积非常小。一个比特币区块可以放入几千笔这样的交易。而其它类型的数据通常来说会大得多：一张图片就可以填满整个区块。这意味着，一笔 “垃圾交易” 必须打败许多常规交易（给矿工提供更多交易费收入）。给定对货币交易的需求足够打，使用比特币区块链来存储数据很快就会变得过于昂贵。在这种情况下，非限定数据就会被挤走，然后自然消失。</p><p>绝大部分 Bitcoin Core 开发者都同意，比特币应该是一个主要用于货币交易的网络 —— 但不能因为他们会主动抵抗其它用法，而只能因为这是这个系统的激励机制塑造的结果。</p><h2 id="那到底怎么说？"><a href="#那到底怎么说？" class="headerlink" title="那到底怎么说？"></a>那到底怎么说？</h2><p>每个人都可以自由使用自己想要使用的软件，不管是 Bitcoin Core 30.0（使用这个默认设定，还是关闭它）、旧版本的 Bitcoin Core、Bitcoin Knots、Libre Relay，还是别的软件。在这个意义上，比特币用户确确实实是完全自治的。</p><p>从 X 等社交媒体平台上的情绪来看，似乎有不小比例的用户不会升级的 Bitcoin Core 30.0，或者会切换到 Bitcoin Knots 。但无法断定他们到底代表了多大比例的比特币用户。可能是很大的一部分 …… 也可能只是很小的一部分（只是声音很大）。</p><p>不管怎么说，比特币并不像民主制那样运作。因为每个节点一般都会转发交易给许多节点，甚至只要一小部分用户选择运行 Bitcoin Core 30.0（或者 Libre Relay 或类似的客户端），大体积的 OP_RETURN 交易在事实上就是自由传播的。这可能无法完全阻止，但假设 Bitcoin Knots 支持者希望至少有一些抑制效果，那么他们就需要说服占绝对多数的节点运营者（可能需要 95% 甚至更多）加入他们的过滤方案。</p><p>如果他们没能做到，那么运行 Bitcoin Knots 也可以视为一种不同意见的表达 —— 只是没有实际效果。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">如果问题在于 Bitcoin Core 开发者们不抵抗，那么 Bitcoin Knots 就代表着抵抗</summary>
    
    
    
    <category term="比特币主网" scheme="https://www.btcstudy.org/categories/%E6%AF%94%E7%89%B9%E5%B8%81%E4%B8%BB%E7%BD%91/"/>
    
    
    <category term="文化" scheme="https://www.btcstudy.org/tags/%E6%96%87%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>多签名钱包什么时候要更换密钥？</title>
    <link href="https://www.btcstudy.org/2025/10/14/replace-key-multisig-wallet-by-unchained/"/>
    <id>https://www.btcstudy.org/2025/10/14/replace-key-multisig-wallet-by-unchained/</id>
    <published>2025-10-14T09:20:13.000Z</published>
    <updated>2025-10-31T04:07:54.134Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Tyler Campbell</em></p><p><em>来源：<a href="https://www.unchained.com/blog/replace-key-multisig-wallet">https://www.unchained.com/blog/replace-key-multisig-wallet</a></em></p></blockquote><p>使用多签名钱包并自己持有密钥来保管比特币，可以帮助消除单点故障：即使组成你的钱包的其中一个密钥丢失了、毁坏了、失盗了，你这边也有容错机制，你依然能花费自己的比特币。然而，一旦发生了这种情况，能够 “花费” 自己的比特币是一回事，但保持这个钱包的 <em>健康</em> 又是另一回事。如果你的多签名钱包的其中一个密钥因为某个原因而不安全了，你应该尽快替换掉这个密钥。反之，尝试替换一个 <em>没有必要</em> 替换的密钥则可能带来不必要的风险。</p><h2 id="如何替换多签名钱包中的密钥？"><a href="#如何替换多签名钱包中的密钥？" class="headerlink" title="如何替换多签名钱包中的密钥？"></a>如何替换多签名钱包中的密钥？</h2><p>在我们考虑什么时候有必要替换密钥时，先看看如何替换密钥，也是有好处的。</p><h3 id="生成一个新密钥-——-以及一个新保险柜"><a href="#生成一个新密钥-——-以及一个新保险柜" class="headerlink" title="生成一个新密钥 —— 以及一个新保险柜"></a>生成一个新密钥 —— 以及一个新保险柜</h3><p>把你的多签名钱包想象成一个电子保险柜，而你持有这个保险柜的钥匙。我们假设使用 2-of-3 多签名钱包，类比过来，就是你的保险柜有两个钥匙孔、三把兼容的钥匙。这三把钥匙中的任意两个，都可以打开这个保险柜，然后你就可以取出其中的比特币。</p><p><img src="/../images/replace-key-multisig-wallet-by-unchained/multisig_vault.png" alt="multisig_vault"></p><p>如果某人偷走了你的其中一个钥匙，或者你弄丢了它，那么你就会想替换掉这个钥匙，这样事情才不会失控。</p><p>如果你弄丢了一个实体保险柜的钥匙，或者你想换一把钥匙，随便买一把新钥匙是不行的，它跟你的保险柜又对不上！如果随便一把钥匙都能打开你的锁，那你这个锁本身就没有任何意义，不是吗。</p><p>所以，必要的步骤是，你得用剩余的两把钥匙先打开这个旧的保险柜、把里面的东西转移到一个<strong>新的保险柜</strong>才行，并且，要确保这个新的保险柜能够用你原先的两个没有暴露的钥匙以及一个<strong>全新的钥匙</strong>打开。这就是多签名钱包密钥替换背后的原理。</p><h3 id="如何创建一个新的多签名钱包装置"><a href="#如何创建一个新的多签名钱包装置" class="headerlink" title="如何创建一个新的多签名钱包装置"></a>如何创建一个新的多签名钱包装置</h3><p>我们设想一种最常见的密钥替换场景：一个 2-of-3 的多签名钱包，组成它的密钥编号为【1】、【2】、【3】；现在编号为【3】的密钥需要替换，而我们生成了一个新的密钥，编号为【4】；现在我们的目标是将密钥【3】替换成密钥【4】。</p><p>为了完全替换密钥【3】，我们需要先使用密钥【1】、【2】、【4】创建一个新的多签名钱包。一旦这个新的多签名钱包构造出来了，资金就可以从旧钱包（使用来自密钥【1】和【2】的签名）转移到新的多签名钱包中。换句话说，你将资金从旧的、已经不够安全的保险柜转移到新的、足够安全的保险柜。</p><p><img src="/../images/replace-key-multisig-wallet-by-unchained/multisig-key-replacement-address.png" alt="multisig-key-replacement-address"></p><p>记住：在你给一个多签名钱包装置替换其中一个密钥时，你是在（使用一个新的密钥）创建一个全新的钱包！这意味着，你的旧的多签名钱包中的任何地址，都跟这个新的密钥无关，也<strong>并不</strong>使用这个新密钥来保护。</p><p>出于这个原因（以及其它原因），你最好：</p><ol><li>仅在真的有必要的时候才替换密钥；这个 “有必要” 的时机，我们会在后文详述。</li><li>如果你替换了密钥，务必从旧钱包中转出<strong>所有</strong>资金到新钱包。</li><li>记得在交易所和其它平台更新白名单地址。</li></ol><h2 id="什么时候需要替换密钥？"><a href="#什么时候需要替换密钥？" class="headerlink" title="什么时候需要替换密钥？"></a>什么时候需要替换密钥？</h2><p>如果你认为自己已经陷入了可能需要替换密钥的情形，请先深呼吸。多签名钱包的好处之一就是它的容错属性。即使组成你的钱包的其中一个密钥已经不安全了，也不是世界末日。</p><p><img src="/../images/replace-key-multisig-wallet-by-unchained/when_do_you_need_a_key_replacement.png" alt="when_do_you_need_a_key_replacement"></p><p>多签名钱包装置中的每一个密钥都有两个组成部分：一个硬件签名其，以及一个<a href="https://unchained.com/blog/why-you-should-always-secure-your-seed-phrase-four-unexpected-errors/">种子词</a>备份。在我们的 <a href="https://unchained.com/blog/why-2-of-3-multisig/">2-of-3 多签名装置</a>案例中，这意味着总共有 6 个敏感物件 —— 3 个硬件签名器，以及 3 个种子词备份 —— 需要确保安全；此外，还有一个描述钱包配置的文件。如果是联合保管的 2-of-3 多签名钱包，则总共有 4 个敏感物件 —— 2 个硬件签名器和 2 个种子词备份 —— 需要确保安全，外加一个钱包配置文件（第三个密钥由托管伙伴持有）。</p><p>种子词备份是每个密钥最敏感的组成部分，因为它是<a href="https://unchained.com/blog/what-is-a-bitcoin-seed-phrase/">你的密钥的可直接阅读的表示形式</a>，它能生成你用来 花费&#x2F;保管 你的资金的所有私钥。而硬件签名器，虽然也存储着种子词并让你可以用来签名比特币交易，但它通常带有 PIN 码作为额外的物理安全层。</p><p>我们来看你的密钥失去安全性的最常见情形。</p><h3 id="暴露的种子词"><a href="#暴露的种子词" class="headerlink" title="暴露的种子词"></a>暴露的种子词</h3><p>一个 “暴露的种子词” 就意味着这个种子词可能已经被（意料之外的）第三方看到了。比如，假如你用一个电子文件来存储种子词，然后用某种互联网通讯工具来传输这个文件；又或者你把种子词拍成了照片，然后用互联网来传输这张照片；或者，别人直接拿到了你的种子词实体备份；这都意味着这个种子词成了一个暴露的种子词。</p><p><strong>电子暴露风险</strong></p><p>绝大部分硬件签名器都会在生成种子词时鼓励你保存一个实体备份，但新用户不理会这一建议、选择用电子设备来保存种子词的情形，是非常常见的。</p><p>硬件签名器被专门设计为在<a href="https://unchained.com/blog/bitcoin-what-is-a-secure-element/">一个安全的环境</a>下生成种子词，而与更不安全的、带有互联网连接的设备相互隔绝。生成种子词之后，立即在另一个非专门设计的设备中存储它，会使这个种子词暴露在电子存储媒介的可能故障以及恶意软件（比如键盘监控器）的风险之下。更糟糕的是，你可能要在已经存入大额资金（到该密钥所生成的钱包）之后，才会发现它已经暴露了。</p><p>如果你使用了电子存储媒介来保存你的种子词，你应该假定这个密钥已经暴露了，所以，你<strong>需要</strong>替换掉这个密钥。</p><p><strong>弄丢种子词</strong></p><p>弄丢种子词是说，要么你没法确定它的下落，要么，你已经无法使用它了。也许你检查了一遍家里的保险箱，发现种子词没在里面；也许你在旅行中弄丢了一些东西。</p><p>不管是哪一种情形，你都要假设这个种子词已经暴露了，所以<strong>需要</strong>替换掉这个密钥。</p><p><strong>种子词被盗</strong></p><p>幸运的是，如果你使用了一个合适的多签名与之，耽美单个种子词被盗不会导致资金损失。当然，被盗就必须被认定为已经丢失和暴露了。</p><p>你<strong>需要</strong>替换掉这个密钥，因为窃贼只需再偷盗你的一个密钥，就能拿到你的比特币（假设他们也拿到了你的<a href="https://unchained.com/blog/what-is-a-multisig-wallet-configuration-file/">多签名钱包密钥配置</a>文件，或者在联合托管商处登录的证书）。</p><h3 id="硬件签名器被劫持"><a href="#硬件签名器被劫持" class="headerlink" title="硬件签名器被劫持"></a>硬件签名器被劫持</h3><p>类似于种子词暴露，如果你的硬件签名器丢失或失盗，你也必须在多签名钱包中替换掉它所存储的那个密钥。即使这个签名器带有 PIN 码，可以阻止别人立即获得其中的密钥，你也应该假设这个密钥已经暴露了，尤其是，已经有案例表明，某些设备允许攻击者完全绕过 PIN 码防护。</p><p><strong>丢失硬件签名器</strong></p><p>如果你无法确定你的设备的下落，你就无法知道其中的种子词是否已经暴露，或者未来会不会暴露。</p><p>这时候，你应该假设其中的种子词已经暴露，所以你<strong>需要</strong>为你的多签名钱包装置替换掉这个密钥。</p><p><strong>硬件签名器被盗</strong></p><p>如果你的设备在你的保管位置不翼而飞，被你在定期检查中发现（我们一直建议你每个季度检查一词）；或者，在你旅行期间从你的私人物品中消失，你的硬件签名器都有可能被盗了。</p><p>这时候，你应该假设其中的种子词已经暴露，所以你<strong>需要</strong>为你的多签名钱包装置替换掉这个密钥。</p><h2 id="何时-不需要-替换密钥？"><a href="#何时-不需要-替换密钥？" class="headerlink" title="何时 不需要 替换密钥？"></a>何时 <em>不需要</em> 替换密钥？</h2><p>对于一个密钥来说，实体的种子词备份是最敏感的东西，如果你有理由认为自己的种子词已经丢失或暴露，那么你需要替换掉这个密钥。但是，通常，也有一些情形，是你无需替换密钥的。实际上，在这些情形中，替换密钥可能比不替换的风险更大。</p><p>在不必要时替换密钥所带来的部分风险和代价包括：</p><ul><li><strong>交易手续费</strong>：替换密钥意味着你要把所有资金从旧的多签名钱包的地址中移动到新的多签名钱包的地址中，这需要让区块链网络确认你的交易，因此要支付区块确认手续费。</li><li><strong>移动大额的比特币</strong>：在转移比特币时总有出错的可能，而换用新钱包可能需要移动大额的比特币。</li><li><strong>钱包配置文件</strong>：你的多签名钱包配置文件也应该保存在安全的地方，而替换密钥意味着也要替换它（即访问这个安全位置）。</li><li><strong>白名单地址</strong>：任何你可能在某个交易所或其它服务中使用的白名单或者 “固定” 地址（属于你的旧钱包），都必须更新成来自新钱包的地址。</li></ul><p>出于这些原因，你应该要理解，什么时候是不必替换密钥的。所有这些情形的共性在于，它们只跟你的签名器有关，而不影响你的种子词备份。</p><h3 id="硬件或软件故障"><a href="#硬件或软件故障" class="headerlink" title="硬件或软件故障"></a>硬件或软件故障</h3><p>如果你的硬件签名器完全损坏了（比如遇上了火灾或者水灾），或者因为不知道确定原因的软件或硬件故障而变成了砖头（例如在固件升级中出错，或者因为 USB 接口故障，或者是显示屏无法显示），你都可以将种子词导入一个新设备。只要你的备份还是安全的，就没有必要替换密钥。</p><p>如果你只是签名器设备损坏，种子词备份还是完好保管的、没有暴露，那么你可以安全地假设自己的种子词没有暴露、硬件签名器也没有遭到劫持，所以<strong>不需要</strong>在多签名钱包中替换这个密钥。</p><h3 id="弄丢或忘记-PIN-码"><a href="#弄丢或忘记-PIN-码" class="headerlink" title="弄丢或忘记 PIN 码"></a>弄丢或忘记 PIN 码</h3><p>类似地，如果你只是忘记了在一个设备上设置好的 PIN 码，你可以将这个设备恢复为出厂状态，然后重新导入种子词；或者，你也可以买一台新设备，然后导入种子词。（译者注：注意，这里的两种做法的安全性并不等同，如果你是换用新的硬件签名器，应确保清空了旧的签名器（即复原为出厂状态））。</p><p>只要你的种子词备份还是完好保管的、没有暴露，那么你可以安全地假设自己的种子词没有暴露、硬件签名器也没有遭到劫持，所以<strong>不需要</strong>在多签名钱包中替换这个密钥。</p><h3 id="PIN-码暴露"><a href="#PIN-码暴露" class="headerlink" title="PIN 码暴露"></a>PIN 码暴露</h3><p>如果你的 PIN 码暴露了，但没有人拿到了你的签名器，那么你不必认为这台设备已经丢失或失盗。（译者注：但应该更新 PIN 码，以防止未来有人拿到这个签名器，使你的种子词暴露。）</p><p>你可以安全地假设种子词和签名器都没有暴露，所以<strong>不需要</strong>替换这个密钥。</p><h3 id="更新设备"><a href="#更新设备" class="headerlink" title="更新设备"></a>更新设备</h3><p>另一种常见的、你不需要替换密钥情形是，换用新的硬件签名器。BIP39 种子词标准在所有著名的比特币硬件签名器上都是受到支持的，所以你可以导入给定密钥的种子词到新设备中。最好的习惯是通过在新设备来确认你的多签名钱包地址、执行一笔小额花费，来确保密钥被正确导入了。（译者注：确保正确导入种子词后，旧的签名器应该清空，否则你将增加多一个敏感物件。）</p><p>只要你的种子词备份还是完好保管的、没有暴露，那么你<strong>不需要</strong>在多签名钱包中替换这个密钥。</p><h2 id="如何替换密钥？"><a href="#如何替换密钥？" class="headerlink" title="如何替换密钥？"></a>如何替换密钥？</h2><p>如果因为上面解释的原因，你的自主保管的多签名装置需要替换一个密钥，有一套标准的流程可以遵循，无论你使用什么比特币钱包软件。我们将 2-of-3 多签名钱包作为案例，你需要遵循以下通用的步骤：</p><ol><li>在一个新的硬件签名器上生成一个新的替换密钥</li><li>妥当地备份这个新的种子词（到纸上或者金属板上）</li><li>（在钱包软件中）使用这个新密钥以及原来的两个没有暴露的密钥创建一个新的多签名钱包</li><li>执行测试：向该多签名钱包存入小额资金、花费这些资金，以确认这个多签名钱包已经构建好了</li><li>使用原来的两个没有暴露的密钥，将资金从旧钱包转出、发送到新的多签名钱包的地址</li><li>确保从钱包软件中下载了这个新的多签名钱包的钱包配置信息并备份；最后，更新你在交易所或其它服务商用到旧钱包地址的白名单</li></ol><p>完成上述步骤之后，两个未暴露的密钥以及那个已经暴露的密钥就只控制着已经没有资金的旧钱包；而这两个未暴露的密钥以及新生成的密钥控制着新钱包。</p><h2 id="如何避免在未来需要更换密钥？"><a href="#如何避免在未来需要更换密钥？" class="headerlink" title="如何避免在未来需要更换密钥？"></a>如何避免在未来需要更换密钥？</h2><p>最好的情形当然是，总是确保不需要用上密钥替换方法。你的安全模型的具体情形取决于许多变量和取舍，但一般来说，你应该保证你的种子词备份被安全地保管在分散的位置，并且只有你知道的、信任的人能触及你的签名器设备。</p><p>若要学习如何保管种子词备份和硬件签名器，请看我们的《<a href="https://unchained.com/blog/how-to-store-bitcoin-seed-phrase-backups/">种子词保管终极指南</a>》、《<a href="https://unchained.com/blog/seed-phrase-backup-methods-recording-paper-metal/">纸张、金属板和其它种子词保管方法指南</a>》。如果你是 Unchained 的客户，请看我们的操作安全性指南中的种子词和签名器<a href="https://unchained.com/blog/wp-content/uploads/2022/01/Unchained-Operational-Security-Guide.pdf">保管建议</a>。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">如果你的多签名钱包的其中一个密钥因为某个原因而不安全了，你应该尽快替换掉这个密钥</summary>
    
    
    
    
    <category term="多签名钱包" scheme="https://www.btcstudy.org/tags/%E5%A4%9A%E7%AD%BE%E5%90%8D%E9%92%B1%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>恢复比特币脚本的全部力量</title>
    <link href="https://www.btcstudy.org/2025/10/13/the-great-opcode-restoration-by-rusty-russell/"/>
    <id>https://www.btcstudy.org/2025/10/13/the-great-opcode-restoration-by-rusty-russell/</id>
    <published>2025-10-13T07:58:17.000Z</published>
    <updated>2025-10-31T04:07:54.144Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Rusty Russell</em></p><p><em>来源：<a href="https://rusty.ozlabs.org/2024/01/19/the-great-opcode-restoration.html">https://rusty.ozlabs.org/2024/01/19/the-great-opcode-restoration.html</a></em></p></blockquote><blockquote><p>编者注：本文为作者 Rusty Russell 的 “Great Script Restoration”（直译为 “Script 复兴”）提议的概述，公开出版于 2024 年 1 月。“Script 复兴” 的想法是恢复比特币脚本在 2010 年由于 DoS 问题而被禁用的操作码；为避免重新启用这些操作码会造成同样的 DoS 问题，作者提出了一套新的约束交易的验证资源使用量的方法，并提出了新的操作码。</p><p>2025 年 9 月，作者已经为本文中涉及的想法撰写了<a href="https://bitcoinops.org/en/newsletters/2025/10/03/#draft-bips-for-script-restoration">相关的 4 个 BIP</a>。</p></blockquote><p>在我过去几篇文章中，我一直在谨慎地思考，如果我们有了 “内省（introspection）”，可能想要给 Bitcoin Script（比特币脚本编程语言）添加什么升级。Sccript 因为拒绝服务式攻击问题而止步于 0.3.1 版本：这一直是人们的一个遗憾，但是，像 <code>OP_TXHASH</code> 这样的功能，让 Script 的局限性变得清晰。</p><h2 id="陈旧的-Bitcoin-Script"><a href="#陈旧的-Bitcoin-Script" class="headerlink" title="陈旧的 Bitcoin Script"></a>陈旧的 Bitcoin Script</h2><p>许多人都知道，中本聪在 0.3.1 版本中禁用了 <code>OP_CAT</code> 和其它几种操作码，但 Anthony Towns 指出，在 0.3 版本以前，bitcoin 软件也允许使用 OpenSSL 的 BIGNUM 类型，实现<a href="https://github.com/bitcoin/bitcoin/blob/v0.3.0/script.cpp#L44">任意长度的数值</a>。  </p><p>那是比特币项目的起步阶段，我完全理解这种愿望：立即、清楚地避免 DoS 问题，等到这个问题经过慎重考虑之后再恢复功能。不幸的是，直到多年以后（也就是我们现在所处的位置），人们才理解为 Script 增强功能的难度。</p><h2 id="变长操作码预算：完全恢复-Script-功能而不引入-DoS"><a href="#变长操作码预算：完全恢复-Script-功能而不引入-DoS" class="headerlink" title="变长操作码预算：完全恢复 Script 功能而不引入 DoS"></a>变长操作码预算：完全恢复 Script 功能而不引入 DoS</h2><p>BIP-342 将全局的签名数量限制替换为一种基于重量（weight）的<a href="https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#resource-limits">签名操作预算</a>，该预算设计为能够支持任何合理的签名验证（比如可以由 miniscript 制作的脚本），又足以避免 DoS 。</p><p>我们可以在其它操作上使用这个办法，只要这种操作的开销与它们的运算对象（operand）的体积相关，并类似地移除现有脚本系统中的武断限制。我将这种想法称为 “变长操作码（varops）” 预算，因为它适用于在变长对象上的操作。</p><p>我的提议草案将变长操作码预算设得很简单：</p><ul><li>交易的重量乘以 520 。</li></ul><p>这保证了即使在现有的脚本上强制执行预算，也不会有可以想象到的脚本无法执行（例如，每一个 OP_SHA256 都总可以在最大长度的堆栈元素上操作，它自身的操作码重量就足以支撑其预算）。</p><p>注意：这种预算是在整个交易上生效的，不是以输入为单位的：这是因为预期会有内存操作码，它意味着一个非常短的脚本可能会检查其它非常大的输入。</p><p>每一个操作码的预算消耗量如下（未列出的操作码不消耗预算）：</p><table><thead><tr><th>操作码</th><th>变长操作码预算消耗量</th></tr></thead><tbody><tr><td>OP_CAT</td><td>0</td></tr><tr><td>OP_SUBSTR</td><td>0</td></tr><tr><td>OP_LEFT</td><td>0</td></tr><tr><td>OP_RIGHT</td><td>0</td></tr><tr><td>OP_INVERT</td><td>1 + len(a) &#x2F; 8</td></tr><tr><td>OP_AND</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_OR</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_XOR</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_2MUL</td><td>1 + len(a) &#x2F; 8</td></tr><tr><td>OP_2DIV</td><td>1 + len(a) &#x2F; 8</td></tr><tr><td>OP_ADD</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_SUB</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_MUL</td><td>(1 + len(a) &#x2F; 8) * (1 + len(b) &#x2F; 8</td></tr><tr><td>OP_DIV</td><td>(1 + len(a) &#x2F; 8) * (1 + len(b) &#x2F; 8</td></tr><tr><td>OP_MOD</td><td>(1 + len(a) &#x2F; 8) * (1 + len(b) &#x2F; 8</td></tr><tr><td>OP_LSHIFT</td><td>1 + len(a) &#x2F; 8</td></tr><tr><td>OP_RSHIFT</td><td>1 + len(a) &#x2F; 8</td></tr><tr><td>OP_EQUAL</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_NOTEQUAL</td><td>1 + MAX(len(a), len(b)) &#x2F; 8</td></tr><tr><td>OP_SHA256</td><td>1 + len(a)</td></tr><tr><td>OP_RIPEMD160</td><td>0 (fails if len(a) &gt; 520 bytes)</td></tr><tr><td>OP_SHA1</td><td>0 (fails if len(a) &gt; 520 bytes)</td></tr><tr><td>OP_HASH160</td><td>1 + len(a)</td></tr><tr><td>OP_HASH256</td><td>1 + len(a)</td></tr></tbody></table><h2 id="移除其它限制"><a href="#移除其它限制" class="headerlink" title="移除其它限制"></a>移除其它限制</h2><p>Ethan Hilman 的<a href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022089.html">恢复 OP_CAT 的提议</a>保留了 520 字节的限制（译者注：指单个堆栈元素不得超过 520 字节长的限制）。应用变长操作码预算之后，就可以移除这一限制，替换成在 taproot v1 上已经应用的堆栈总规模限制（1000 个元素和 520 000 字节）。</p><p>此外，如果我们希望引入一个新的隔离见证版本（比如 Anthony Towns 的 “<a href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016249.html">generalized taproot</a>”）或者希望允许 “无密钥的条件（<a href="https://rusty.ozlabs.org/2024/01/19/%7B%20%%20post_url%202024-01-16-pay-to-tapscript.md%7D">keyless entry</a>）”，我们可以将这些限制适配为合理的区块体积上限（也许是 1 0000 个元素，最大 4M 字节）。</p><h2 id="稍微改变语义"><a href="#稍微改变语义" class="headerlink" title="稍微改变语义"></a>稍微改变语义</h2><p>数值将依然是小端序编码（little-endian），但变成无符号数（unsigned）。这能简化实现，而且让位操作（bit opertations）和算术运算（arithmetic operations）的相互作用变得简单很多。它允许现有的正数使用这些操作码而无需修改，也不需要转换。</p><p>如果我们有意使用一个新的隔离见证版本，现有的操作码可以替换；否则，就需要添加新的操作码（例如 <code>OP_ADDV</code>）。</p><h2 id="实现细节"><a href="#实现细节" class="headerlink" title="实现细节"></a>实现细节</h2><p>v0.3.0 比特币软件使用了 OpenSSL 的 BIGNUM 类型的一种简单的类封装器，但为了最大限度的简洁性，我在不使用外部依赖的前提下重新实现了每一个操作码。</p><p>除了 <code>OP_EQUAL</code>&#x2F;<code>OP_EQUALVERIFY</code> ，每一个操作码都转换为 <code>uint64_t</code> 的一个小端序向量（或从这样的向量开始转换）。这可以通过按需转换来优化。</p><p><code>OP_DIV</code>、<code>OP_MOD</code> 和 <code>OP_MUL</code> 是粗糙地实现的（与 libgmp 的大数字操作的比较表明，更复杂的方法会快得多）。</p><h2 id="基准测试：上述限制是否低到足以防止-DoS-？"><a href="#基准测试：上述限制是否低到足以防止-DoS-？" class="headerlink" title="基准测试：上述限制是否低到足以防止 DoS ？"></a>基准测试：上述限制是否低到足以防止 DoS ？</h2><h2 id="上述限制是否高到足以被忽略？"><a href="#上述限制是否高到足以被忽略？" class="headerlink" title="上述限制是否高到足以被忽略？"></a>上述限制是否高到足以被忽略？</h2><p>我们可以移除 520 字节的限制。（译者注：应指单个堆栈对象体积不得超过 520 字节的限制。）</p><p>但我们依然需要对堆栈的总体积作一个限制：使用一种新的隔离见证版本，可以将这个限制提高到 400 0000；或者跟当前的限制保持一致：52 0000 字节。</p><p>在我之前的《<a href="https://rusty.ozlabs.org/2023/10/20/examining-scriptpubkey-in-script.html#making-more-useful-templates-reducing-the-power-of-op_success">在 Script 中求出脚本公钥</a>》（<a href="https://www.btcstudy.org/2023/10/25/examining-scriptpubkey-in-script/">中文译本</a>）一文中，我指出，有些时候，我们希望要求一类特定的脚本条件，但不是一段确切的脚本：一个例子是保险柜合约类型的限制条款，它要求时延，但不关心脚本里还有没有别的东西。</p><p>问题在于，在 Taproot 脚本中，任何未知的操作码（<code>OP_SUCCESSx</code>）都将导致整个脚本通过（完全不会被执行），所以我们需要稍微调整一下。我以往的分隔符的提议很令人尴尬，所以我想出了一个更简单的新办法。</p><h2 id="加入-OP-SEGMENT"><a href="#加入-OP-SEGMENT" class="headerlink" title="加入 OP_SEGMENT"></a>加入 OP_SEGMENT</h2><p>当前，验证程序会在<a href="https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#specification">整个 tapscript</a> 中扫描 <code>OP_SUCCESS</code> 操作码，一旦找到，脚本就直接通过。这将被修改成：</p><ol><li>在 tapscript 中扫描 <code>OP_SEGMENT</code> 和 <code>OP_SUCCESSx</code>。</li><li>如果找到了 <code>OP_SEGMENT</code>，那就执行位于这个操作码前面的脚本；如果脚本没有失败，那就从这个操作码开始继续扫描。</li><li>如果找到了 <code>OP_SUCCESSx</code>，那么脚本直接通过。</li></ol><p>基本上，这就将一段脚本分成了几个 <em>片段</em>，每个片段按顺序执行。它并不像 “使用 OP_SEGMENT 将脚本分成几段，一次只执行一个片段” 这么简单，因为 tapscript 允许在 <code>OP_SUCCESSx</code> 之后包含无法解码的东西，我们希望保留这种能力。</p><p>在执行 <code>OP_SEGMENT</code> 的时候，它什么也不做：它的存在只是为了限制 <code>OP_SUCCESS</code> 操作码的覆盖范围。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><code>ExecuteWitnessScript</code> 将有必要重构（可能是作为一段专门的 <code>ExecuteTapScript</code>，因为它的 38 行代码中有 21 行都在 “if Tapscript” 条件下），而且它也暗示了，对当前的 tapscript 的堆栈限制，在遇到了 <code>OP_SEGMENT</code> 时会强制执行，即使后面跟着 <code>OP_SUCCESS</code> 。</p><p>有趣的是，核心的 <code>EvalScript</code> 函数不会改变，除了忽视 <code>OP_SEGMENT</code>，因为它已经非常灵活了。</p><p>提醒一句，我还没完成实现，所以可能会有惊喜，但我计划在这个想法获得一些评论之后制作原型。</p><p>希望你们喜欢！</p><p>（完）</p>]]></content>
    
    
    <summary type="html">如果我们有了内省，可能想要给 Bitcoin Script 添加什么升级</summary>
    
    
    
    
    <category term="Great-Script-Restoration" scheme="https://www.btcstudy.org/tags/Great-Script-Restoration/"/>
    
  </entry>
  
  <entry>
    <title> 多签名钱包使用习惯常见误区及其纠正</title>
    <link href="https://www.btcstudy.org/2025/10/08/common-multisig-setup-errors-and-fixes/"/>
    <id>https://www.btcstudy.org/2025/10/08/common-multisig-setup-errors-and-fixes/</id>
    <published>2025-10-08T15:40:42.000Z</published>
    <updated>2025-10-31T04:07:54.106Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：bitvault</em></p><p><em>来源：<a href="https://blog.bitvault.sv/common-multisig-setup-errors-and-fixes/">https://blog.bitvault.sv/common-multisig-setup-errors-and-fixes/</a></em></p></blockquote><p><strong>多签名钱包</strong>通过要求多个密钥为交易签名来提高比特币保管装置的安全性，但是，不正确的使用习惯可能会导致资金丢失或是装置漏洞。常见的错误包括：糟糕的密钥备份、错误配置脚本、密钥未充分分散、软件问题，以及缺少复原计划。以下则是你可以如何避免这些错误：</p><ul><li><strong>妥当地备份密钥</strong>：在多个安全地点（例如防火的保险柜）存储备份、避免使用电子存储介质。使用 “<a href="https://en.wikipedia.org/wiki/Shamir%27s_secret_sharing">Shamir 私钥分割</a>” 这样的技术可以增加安全性。</li><li><strong>验证脚本和地址</strong>：多次确认所有配置；在转入大额资金之前，先用小额资金测试。</li><li><strong>实质性分散密钥</strong>：将密钥分散在多个设备和地点上，以减少风险。避免在同一位置存放多个密钥。</li><li><strong>确保软件的兼容性</strong>：使用支持你的多签名设置的软件，并经常更新软件。在存入资金之前，测试软件的完整性。</li><li><strong>准备复原规划</strong>：清晰地写下复原步骤、定期测试，并安排后备的密钥持有人。</li></ul><p><strong>定期测试和审计</strong>是持续保证安全性的关键步骤。你要模拟需要复原钱包的情形、每个季度检查密钥备份，并定期轮换密钥。<a href="https://bitvault.sv/">BitVault</a> 这样的工具可以简化这些流程，还提供延迟交易和安全通知这样的高级功能。</p><p><a href="https://youtu.be/GJ31v-7g4Qo">视频：为什么比特币多签名钱包是非常安全的，以及，如何使用 Electrum 来建立 2-of-3 多签名钱包</a></p><h2 id="多签名钱包用法常见误区及纠正"><a href="#多签名钱包用法常见误区及纠正" class="headerlink" title="多签名钱包用法常见误区及纠正"></a>多签名钱包用法常见误区及纠正</h2><p>建立一个多签名钱包可能很不容易，甚至小错误也可能引发大问题。了解常见的误区以及规避方法，可以帮助你免于犯下代价昂贵的错误。以下是常见误区的详细解释，以及保证你的多签名钱包流畅运作的实用解决方案。</p><h3 id="糟糕的密钥备份程序"><a href="#糟糕的密钥备份程序" class="headerlink" title="糟糕的密钥备份程序"></a>糟糕的密钥备份程序</h3><p><strong>问题</strong>：许多用户要么没有妥当地备份自己的私钥（种子词），要么将所有的备份材料都放在了一个地方。更糟糕的是，一些用户甚至从来没有测试过复原流程（直到遇上真实需要，然后发现自己无法复原），将自己的资金置于严重的风险之中。</p><p><strong>解决方案</strong>：创建多个备份，并存放在单独的、安全的位置。将跟你的密钥有关的物品分散在多个地点，保证至少一套种子词是跟其它元素完全分开的。</p><p>（译者注：顾名思义，多签名钱包涉及多个私钥（种子词），这些种子词都要有单独的备份，并且，不应在一个安全地点存放足以复原钱包（取出资金）的所有材料，否则，这个保管装置的安全性将降低到与单签名钱包相同 —— 只需攻破一个安全地点，就足以盗窃资金。）</p><p>避免实用电子存储介质 —— 不要在电子设备上存储种子词、不要 复制-粘贴 它们、不要拍成照片。相反，你应该把它们写在纸上，或者刻在金属板上（更加耐用）。在安全的地方存放这些备份，比如银行保险柜。如果想获得额外的安全性，你应该使用 <strong>Shamir 私钥分割（SSS）</strong> 将一个种子词分成几份，要求获得一定数量的碎片才能复原出这个种子词。</p><p>定期测试你的备份系统，确保你能复原钱包和其中的资金。清晰地写下复原的流程，要保证即使几年之后你重新拿起也能遵守这个流程、复原你的钱包。</p><h3 id="错误的地址（脚本）设定"><a href="#错误的地址（脚本）设定" class="headerlink" title="错误的地址（脚本）设定"></a>错误的地址（脚本）设定</h3><p><strong>问题</strong>：在公钥记录中出现错误，使用不匹配的地址格式（或者说不正确的脚本配置）可能使你无法复原钱包，或使之暴露在风险之中。这个问题常常出现在用户需要手动输入数据条目或使用不兼容的钱包软件的时候。</p><p><strong>解决方案</strong>：在完成钱包搭建之前，多次检查公钥记录以及地址格式。使用可信任的工具来验证所有的细节都严丝合缝，并且绝对不要将从不安全、不可信任的来源复制敏感信息。</p><p>使用小额资金来测试你的保管装置，以尽早发现故障：确保你可以存入、取出资金而不会遇到问题，然后才能将大额资金存入。</p><p>保留关于你的多签名钱包配置的详细记录，包括阈值要求、脚本类型、所设计的所有公钥。这些资料在恢复钱包和排除故障时都极为有用。（译者注：在先进的多签名钱包中，已经可以将这些关键信息导出为 “输出描述符” 或是 “BSMS 文件”，的确是非常重要的信息。） </p><h3 id="糟糕的密钥分散与协作"><a href="#糟糕的密钥分散与协作" class="headerlink" title="糟糕的密钥分散与协作"></a>糟糕的密钥分散与协作</h3><p><strong>问题</strong>：将一个多签名钱包的多个密钥存放在同一个地点，会导致该钱包的安全性降级，此外，签名器之间的交互协议不清楚，可能导致交易许可过程中的困惑、延迟甚至安全漏洞。</p><p><strong>解决方案</strong>：在多台设备、多个人、多个位置分散密钥。避免将多个密钥存放在同一台设备或是放在同一个地方。保证硬件签名器和种子词是分开存放的。</p><p>为初始化交易的人选以及如何协作建立清楚的规则。使用安全的通信通道，比如加密聊天、视频会议或者带有多重身份验证的私人虚拟网络。避免在电子邮件中传递敏感数据，很容易被欺骗。</p><p>让所有的密钥持有人了解安全性的最佳习惯、签名流程以及如何处理潜在的威胁。不要揭晓签名人的身份，以保护他们免遭有针对的攻击，同时避免让他们的真名与家庭地址与某个签名密钥关联起来。</p><p>在签名交易时，保证所有参与者都理解交易的意图、支付目标以及数额。验证收款地址、为每一笔交易实现一个清楚的验证流程。</p><h3 id="软件兼容性问题"><a href="#软件兼容性问题" class="headerlink" title="软件兼容性问题"></a>软件兼容性问题</h3><p><strong>问题</strong>：使用并不完全支持你的多签名装置的钱包软件或服务，可能导致交易失败或是无法复原资金。不同的软件时间可能会以不同的方式来处理多签名脚本。</p><p><strong>解决方案</strong>：选择兼容你的多签名配置的钱包软件。兼容性跟保管密钥同样重要。</p><h3 id="缺少复原和紧急情况应对方案"><a href="#缺少复原和紧急情况应对方案" class="headerlink" title="缺少复原和紧急情况应对方案"></a>缺少复原和紧急情况应对方案</h3><p><strong>问题</strong>：许多用户都没有为自己的多签名钱包准备好妥善的复原（紧急情况应对）计划。没有清晰的文档和流程，失去一个密钥就可能导致永久的资金损失或是费力的复原尝试。</p><p><strong>解决方案</strong>：为一个私钥丢失或失盗的情形准备应对计划。可能需要安排一个受信任的第三方作为一个后备的密钥保管人。写下复原的步骤并单独保管（不要跟私钥放在一起）。</p><h2 id="如何测试和审计你的多签名装置"><a href="#如何测试和审计你的多签名装置" class="headerlink" title="如何测试和审计你的多签名装置"></a>如何测试和审计你的多签名装置</h2><p>解决了常见的问题之后，持续的测试和审计也是保证你的钱包安全的关键机关。定期审核以及演练复原场景，可以帮助你发现弱点、防止漏洞扩大。</p><h3 id="演练复原场景"><a href="#演练复原场景" class="headerlink" title="演练复原场景"></a>演练复原场景</h3><p>测试复原场景是找出和修复潜在漏洞的好剑法。比如说，模拟丢失了一个硬件签名器或是某个签名人失去行动能力的场景。看看你需要多长时间从钱包中取出你的资金，并记录你会遇到的所有障碍。</p><p>每年要运行这些模拟至少两次，并且要记录下你学到的东西。保证所有的参与者都知道自己的角色，并且能够触及必要的备份材料。一份<strong>复原检查清单</strong>可能是救命稻草 —— 包括像取出备份材料和在有需要时生成新密钥这样的步骤。如果你在使用 2-of-3 阈值条件，尝试使用不同的密钥组合来复原钱包、确保每一个复原路径都像你想的那样运作。</p><p>还要关注你在复原钱包期间跟其他签名人的协调所花费的时间。如果你的装置需要多个人来许可交易，还要演练通信流程，保证流畅和安全。建立加密通信通道或者安全的群聊，来保证紧急情况下协调能顺利完成。</p><p>经常联系会建立起自信，并保证每个人都时刻准备好了，也是为定期的密钥检查打下基础。</p><h3 id="定期的密钥和备份检查"><a href="#定期的密钥和备份检查" class="headerlink" title="定期的密钥和备份检查"></a>定期的密钥和备份检查</h3><p>为了保持安全性，你的多签名装置也需要定期维护。可以每个季度检查一次备份材料的完整性以及可访问性。比如说，确认每一个写在纸上的种子词都依然可以辨识、没有损坏。</p><p>在检查期间，验证所有的签名人都可以触及自己的密钥并且理解自己的责任。因为人们可能会变换手机号码、迁徙乃至丢失设备，所以保留联系信息和最新的密钥位置就成了关键。关注你的紧急联系人列表、确保后备的密钥持有人依然活着、在你需要的时候就愿意提供帮助。</p><p>此外，也要更新你的钱包软件、确保它跟你使用的其它工具相兼容。软件更新有时会影响多签名交易的处理方式，所以保持更新就成了关键。</p><p>定期检查你的交易历史，看看其中有无反常的活动以及未获得许可的尝试。即使是失败的交易尝试，也可能暗示着漏洞。记录下你在检查中的发现。</p><p>考虑每两年轮换你的密钥，作为额外的应对措施。虽然着可能是过度的，但它降低了密钥被盗而导致长期损失的风险。在轮换密钥时，创建一个新的多签名钱包、彻底地测试它，然后将资金从旧钱包转移盗新钱包。</p><h2 id="快速参考：故障与解决方案列表"><a href="#快速参考：故障与解决方案列表" class="headerlink" title="快速参考：故障与解决方案列表"></a>快速参考：故障与解决方案列表</h2><p>为了支持高效的测试和审计，使用这个快速参考指南来排查常见的问题。下面的列表列举了常见的误区、它们的表现、影响级别和解决方案，以及防止进一步问题的建议。</p><table><thead><tr><th>错误类型</th><th>表现</th><th>影响级别</th><th>快速解决方案</th><th>建议</th></tr></thead><tbody><tr><td><strong>糟糕的密钥备份</strong></td><td>在设备故障之后无法访问钱包；缺少种子词</td><td><strong>致命</strong></td><td>立即重新创建备份；使用小额资金测试钱包能否复原</td><td>在 3 个以上不同地点存储备份；使用 防火&#x2F;防水 的存储介质</td></tr><tr><td><strong>错误的地址设置</strong></td><td>交易失败；资金发送到错误的地址</td><td><strong>高</strong></td><td>验证脚本类型在所有设备上一致；如有需要，重新生成地址</td><td>在第一次交易之前多次检查地址格式</td></tr><tr><td><strong>糟糕的密钥分发</strong></td><td>所有密钥保存在同一个位置；一个人控制着多个密钥</td><td><strong>高</strong></td><td>重新分发密钥到不同地点&#x2F;不同人；更新访问流程</td><td>在一开始就计划好地点和保管人</td></tr><tr><td><strong>软件兼容性</strong></td><td>无法签名交易；钱包不能识别签名；</td><td><strong>中等</strong></td><td>更新所有的钱包软件；验证 BIP 标准兼容性</td><td>在大额资金存入以前用小额资金测试</td></tr><tr><td><strong>缺少复原计划</strong></td><td>在某个签名人失去行动能力时没有清晰的应对方案；缺乏紧急情况预案</td><td><strong>中等</strong></td><td>写下复原钱包的每一个步骤；指定后备签名人</td><td>制定书面流程；定期演练</td></tr></tbody></table><p> “<strong>影响级别</strong>” 一列可以帮助你确定修复措施的优先级。立即解决致命和高风险的问题，因为它们可能导致你永久丢失资金（或者钱包永久锁定）。</p><p>使用这个指南的时候，请从 “表现” 一列检查自己遇到的问题，并了解相应的 “快速解决方案”。在快速修复措施解决掉紧急问题之后，“建议” 可以帮助避免重复犯错。</p><p>保留这张表格以备季度检查使用。考虑打印它并随备份材料保管，以备快速查验。</p><p>对于紧急情形，例如交易失败或者签名人无法行动，请首先使用快速解决方案。但请注意，在一些情形中，比如重新分发密钥，可能需要创建一个新的多签名钱包并转移资金。请周密地计划这些步骤，以保证流畅迁移。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>通过要求多个签名，多签名钱包可以显著降低单点故障的风险。</p><p>保证你的多签名钱包的安全性，是一个需要周密计划和持续劳动的过程。缺少密钥备份以及复原方案这样的错误，通常可以通过周详的准备和定期检查来避免。</p><p>在维护多签名钱包的安全性时，有三个关键的原则：<strong>妥当地备份种子词</strong>、<strong>在多个地点和设备分散保管种子词</strong>以及<strong>定期测试你的装置</strong>。在创建好种子词之后，就备份它们，并定期通过尝试签名来测试它们、确保一切都按预期进行。</p><p>在配置你的钱包时，要在安全性和易用性之间取得平衡。例如，2-of-3 和 3-of-5 这样的签名要求，既提供了灵活性，又使得你的某个密钥丢失或者失盗时能够轻松复原资金。相反，2-of-2 和 3-of-3 这样的配置，即使只是无法访问一个密钥，也会给你带来故障。此外，要将种子词存储在不同设备上，以降低风险。</p><p>随着你的环境改变，要定期检查你的安全设置和密钥持有人安排。回顾签名的快速参考表格来狙击和解决可能导致资金永久丢失的漏洞。</p><p>多签名钱包最强大的地方在于它内置的冗余性。即使你丢失了一个私钥（种子词），只要你还能满足签名阈值要求，就还能取出资金。这让多签名钱包成为安全地保管大额储蓄的绝佳选择。但是，只有你遵守了合理的搭建和维护习惯时，才能获得这些好处。跳过这些步骤可能会降低多签名钱包本来能够提供的安全性。</p>]]></content>
    
    
    <summary type="html">不正确的使用习惯可能会给你带来风险</summary>
    
    
    
    
    <category term="多签名钱包" scheme="https://www.btcstudy.org/tags/%E5%A4%9A%E7%AD%BE%E5%90%8D%E9%92%B1%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>了解 Miniscript 时间锁钱包的取舍</title>
    <link href="https://www.btcstudy.org/2025/10/04/examining-the-tradeoffs-of-miniscript-timelock-wallets/"/>
    <id>https://www.btcstudy.org/2025/10/04/examining-the-tradeoffs-of-miniscript-timelock-wallets/</id>
    <published>2025-10-04T15:36:10.000Z</published>
    <updated>2025-10-31T04:07:54.110Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Tom Honzik</em></p><p><em>来源：<a href="https://www.unchained.com/blog/examining-the-tradeoffs-of-miniscript-timelock-wallets">https://www.unchained.com/blog/examining-the-tradeoffs-of-miniscript-timelock-wallets</a></em></p></blockquote><p><img src="/../images/examining-the-tradeoffs-of-miniscript-timelock-wallets/TimelockWalletsMiniscript.png" alt="TimelockWalletsMiniscript"></p><p>多种比特币钱包软件和托管服务开始探索基于时间的安全模式和复原选项。这些产品激起了一些比特币持有者的兴趣，他们希望了解这背后的工作原理、确定这是不是一种保护他们的比特币储蓄的一种好选择。</p><p>在本文中，我们会解释这些保管装置要实现什么设计目标，并介绍实现这些目标的基础技术 —— 时间锁和 Miniscript 。我们会了解一些实践案例，并讨论这些钱包的取舍，帮助你在使用与否的决策上作出明智的决定。</p><h2 id="什么是-“时间锁钱包”？"><a href="#什么是-“时间锁钱包”？" class="headerlink" title="什么是 “时间锁钱包”？"></a>什么是 “时间锁钱包”？</h2><p>在本文中，“时间锁钱包” 一词指的是一种<a href="https://www.unchained.com/blog/your-bitcoin-isnt-in-your-wallet">比特币钱包</a>，其中的<a href="https://www.unchained.com/blog/what-is-a-bitcoin-address">地址</a>使用了 <em>时间锁</em> 作为它们的安全模式的一部分。时间锁钱包在市场营销中可能使用各种术语，比如这样的钱包提供了 “基于实践的复原密钥”、“带有时延的继承密钥”、“高级的 Miniscript 安全性”，或者其它类似词语的组合。</p><p>时间锁让时间成为了一种决定花费比特币的必要条件的因素。一个简单的例子是一个地址，它内在地防止存入其中的比特币在某个日历日期或时间点之前被花掉（也可以是阻止资金在区块链抵达某个区块高度之前被花掉）。</p><p>一个更高级的案例是一种地址，它被设计成带有一个默认的花费路径，但还有另一条花费路径，仅在经过一段时间之后才变得可用。像这样的结构，在默认花费路径不再能使用时（不论因为丢失密钥还是设备损毁），都是很有用的。地址和其中资金的主人只需等待后面那条花费路径变得可用，就可以取回资金；这条复原路径可以设计成带有更加款苏的花费要求，或者要求完全不一样的<a href="https://www.unchained.com/blog/what-is-a-bitcoin-key">私钥</a>。对这种复原机制的兴趣，就是推动比特币保管市场出现时间锁钱包产品的主要催化剂。</p><h2 id="时间锁钱包如何工作？"><a href="#时间锁钱包如何工作？" class="headerlink" title="时间锁钱包如何工作？"></a>时间锁钱包如何工作？</h2><p>时间锁钱包是理由两个主要工具来实现的。第一个是比特币协议的时间锁功能自身，它有不同的制作方法，也各有局限性。第二个是 <em>Miniscript</em> ，一种更先进的开发工具，提供了更加安全的方式来开发复杂的花费条件，比如多条花费路径（这些花费条件就是比特币地址的前身）。接下来，我们细致第了解一下这些技术。</p><h3 id="时间锁功能"><a href="#时间锁功能" class="headerlink" title="时间锁功能"></a>时间锁功能</h3><p>有两种不同的方式可以将时间锁做进一个比特币地址。一种是 “CLTV（CheckLockTimeVerify）”，它带来的是 <em>绝对时间锁</em>，意思是这种时间锁会在一个预先指定的时间点过期（解锁），比特币进入这样的地址的时间并不影响其中时间锁的解锁时间。这种方法会给使用带有时间锁的宽松复原路径的钱包带来一个问题：随着我们逐渐接近乃至越过预定的时间点，钱包的安全模式会完全改变（译者注：即这样的时间锁将逐渐失去限制复原路径可用性的作用）。如果你希望新的存款拥有很远的未来才能使用的复原路径，你将不得不周期性地迁移到一个全新的钱包（一组新的地址，其钱包配置与原钱包配置不同），就为了使用另一个绝对时间锁。</p><p>另一种方式是 “CSV（CheckSequenceVerify）”，它会建立 <em>相对时间锁</em>，即时间锁将从每一笔<a href="https://www.unchained.com/blog/what-is-a-utxo-bitcoin">资金</a>进入这样的地址的时间点开始倒计时。因此，（钱包中）每一个 UTXO 都有不同时间锁过期时间。这对于使用基于时间的复原机制的钱包来说是更好的方法，因为钱包的安全模型在时间流逝中保持恒定 —— 只需将（旧地址中的）比特币转入同一钱包的新地址中，就可以重设倒计时，而不是只能构造和备份一个全新的钱包。</p><p><img src="/../images/examining-the-tradeoffs-of-miniscript-timelock-wallets/locktime-diag.png" alt="locktime-diag"></p><p style="text-align:center">- 一个可视案例，对比使用绝对时间锁的地址和使用相对时间锁的地址。在创造钱包时，两种时间锁都设为 12 个月长。在使用绝对时间锁的钱包中，不同地址中的时间锁会在同一时间点到期；而相对时间锁则会使每一笔存入资金拥有独立的倒计时（只是时长相同）。 -</p><p>CLTV 和 CSV 的另一个重要区别是锁定时间的范围。CLTV 可以用来将比特币锁定几个世纪，意味着在设置锁定时间时，任何事物都可能产生灾难性的后果。但 CSV 的最大锁定时间要么是 65535 个区块（大概 15 个月），要么是 65535 * 512 秒（大约 13 个月）。因为 CSV 是绝大部分时间锁钱包所用的方法，这个局限性是相当重要的。</p><h3 id="Miniscript"><a href="#Miniscript" class="headerlink" title="Miniscript"></a>Miniscript</h3><p>比特币的共识规则，使用一种简单的、基于堆栈的编程语言，叫做 “<a href="https://learnmeabitcoin.com/technical/script/">Script</a>” 来编程一笔比特币可被花费的条件。不过，对有志于开发比标准的单签名和多签名钱包更复杂花费条件的人来说，Script 用些难用。组合、验证和解释使用多个条件式花费路径的脚本，可能难以安全地实现，效率也难以保证。这就是 <a href="https://github.com/bitcoin/bips/blob/master/bip-0379.md">BIP379</a> Miniscript 的动机。</p><p>“Miniscript” 使用更加有用的方式来表达脚本，使得更加复杂的花费要求可以更安全地组合及分析。虽然当前的时间锁钱包，从技术上来说只需 Script 就可以实现，但 Miniscript 铺平了道路、使它们更加实用。下面是一个例子，对比了表达相同花费条件的 Script 代码和 Miniscript 代码，可以看出形态相当不同，Miniscript 代码更为简洁。</p><p>Script：</p><pre><code>&lt;A&gt; OP_CHECKSIG OP_IFDUP OP_NOTIF  &lt;B&gt; OP_CHECKSIGVERIFY &lt;50c300&gt; OP_CHECKLOCKTIMEVERIFYOP_ENDIF</code></pre><p>Miniscript：</p><pre><code>or_d(pk(A),and_v(v:pk(B),after(50000)))</code></pre><p>（译者注：这里要额外说明的是，引入 Miniscript 并不需要改变比特币的共识规则，因为实际上，Miniscript 只是 Script 表达能力的一个子集，它只是运用特定的结构来使用 Script 的片段，使我们可以在 Miniscirpt 层面完成对代码的组合、分析和验证。也就是说，它没有改变比特币本身（实际表达花费条件的依然是 Script 代码），它改变的只是开发者的编程环境。）</p><h2 id="时间锁钱包案例"><a href="#时间锁钱包案例" class="headerlink" title="时间锁钱包案例"></a>时间锁钱包案例</h2><p>我们已经介绍了时间锁钱包的基本前提、它们是如何构造的，现在，我们来看看人们曾经为之设想的几种用途。虽然可以定制化，时间锁钱包一般来说会有一个主花费路径（通常是一个多签名装置），然后是一个复原花费路径，由时间锁来限定。复原路径的想法包括递减式多签名、拓展式多签名以及替代密钥。</p><h3 id="递减式多签名"><a href="#递减式多签名" class="headerlink" title="递减式多签名"></a>递减式多签名</h3><p>递减式多签名是一种为一个<a href="https://www.unchained.com/blog/what-is-multisig">多签名钱包</a>创建一个随时间解锁的、更宽松的花费路径的方法。给定一个 k-of- n 的多签名装置，递减式多签名会随时间推移而使 “k” 逐渐下降，从而更少密钥就能授权取款。比如说，你可以搭建一个钱包，其比特币控制在一个 3-of-3 的多签名装置中，但如果地址中的比特币一段时间没有移动，则可以递减为 2-of-3 的多签名装置。这也许能在丢失一个密钥的时候发挥作用。</p><h3 id="拓展式多签名"><a href="#拓展式多签名" class="headerlink" title="拓展式多签名"></a>拓展式多签名</h3><p>拓展式多签名是另一种构造带有时间锁的复原路径的方法。给定一个 k-of-n 的多签名装置，拓展式多签名将随着时间推移逐渐提高 “n” 的值，从而额外的公钥能够提供有效的签名来帮助取出比特币。比如说，你可以搭建一个 2-of-2 的多签名装置，然后在地址中的比特币一段时间没有移动之后，开启允许一个 2-of-3 的多签名装置来取出比特币。如果最初的两个密钥的其中之一丢失了，额外的密钥可以提供更新的访问比特币的能力。</p><h3 id="替代密钥"><a href="#替代密钥" class="headerlink" title="替代密钥"></a>替代密钥</h3><p>复原路径跟默认花费路径的区别可以更大 —— 使用完全不同的密钥。比如，你可以先搭建一个包含公钥 A、B、C 的 2-of-3 多签名装置，但在一个时间锁过期后，就可以用公钥 D、E、F 所组成的多签名装置来花费资金。此外，复原密钥也可以只要求公钥 D，或者任何其它你想要的结构。这个方法在遗产规划中会有作用 —— 遗嘱执行人手上的密钥要等到时间锁过期之后才会有用。</p><h2 id="关于时间锁钱包的顾虑"><a href="#关于时间锁钱包的顾虑" class="headerlink" title="关于时间锁钱包的顾虑"></a>关于时间锁钱包的顾虑</h2><p>乍看起来，随时间锁过期而启用的复原机制是非常吸引人的。但是，有一些取舍，也许不会立即显现出来，却是值得考虑的。</p><p>比如说，将一个时间锁钱包从一个软件迁移到另一个软件，就只有非常少的选项，那就意味着，钱包复原的整体难度可能更大。时间锁钱包的用户也可能会面临高得多的交易手续费，因为他们的交易的体积更大、更有可能需要在相对不理想的费率条件下移动比特币。定期转移比特币、刷新时间锁的压力，可能会让你进入艰难的密钥管理局面 —— 你必须记得移动比特币，不然安全性就要降级。接下来，我们会更细致地了解这些顾虑。</p><h3 id="钱包迁移选项有限"><a href="#钱包迁移选项有限" class="headerlink" title="钱包迁移选项有限"></a>钱包迁移选项有限</h3><p>普通的单签名和多签名钱包在比特币保管生态系统中无处不在。数十个声誉良好的钱包软件支持这些标准化的钱包类型，而且都可以互操作，所以用户可以轻松地从一个软件迁移到另一个软件。这就意味着，如果你的钱包软件界面（你查看和管理比特币余额的界面）除了问题，你只需导入你的<a href="https://www.unchained.com/blog/bitcoin-wallet-configurations">钱包配置信息</a>（<a href="https://www.btcstudy.org/2025/07/08/bitcoin-wallet-configurations-the-architecture-required-for-bitcoin-recovery/">中文译本</a>）到另一个接口中，就可以绕开这些故障、继续使用你的比特币。</p><p>与此同时，时间锁钱包拥有更加复杂的钱包配置信息 —— 通常以 <em>描述符</em> 格式来表示 —— 包含了关于这些时间锁和多种花费路径的 Miniscript 细节。截至本文撰写之时，很少钱包软件已经采用了导入这样的描述符的功能。如果你在某一个软件（或者协作服务）中构造了一个时间锁钱包，而你的账户出现了问题，在复原钱包时你可能只有极少数的软件选择。这样的选项确实存在（比如 Bitcoin Core），但对于不那么了解技术的用户，可能很困难。</p><p>如果描述符和 Miniscript 被更多声誉良好的钱包软件采用，缺乏迁移选项也将随着时间推移不复成为问题。另一方面，在导入一个独特深度定制的 Miniscript 钱包（比如一个时间锁钱包）时，可能也会遇到问题。理想情况下，一个钱包软件应该能够理解一个被导入的钱包的设计、并在界面中为用户展示有用的信息，比如每个 UTXO 的时间锁状态。这又要求开发者为当前绝大多数流行的钱包软件开发实质性的增强功能，因为当前，这些软件还没有设计为能够解释和显示这些信息。</p><h3 id="更高的交易手续费"><a href="#更高的交易手续费" class="headerlink" title="更高的交易手续费"></a>更高的交易手续费</h3><p>决定一笔比特币交易手续费的主要变量之一，就是这笔交易的数据体积。交易数据包含了关于资金转移的基本信息，但也必须包含描述被满足的花费条件的脚本，以保证交易是有效的。更复杂的花费条件就有更大的脚本，因此就倾向于有更多的交易数据、更高的手续费。</p><p>带有多个花费路径的时间锁钱包就是这样一个例子。为了研究多花费路径装置与普通的比特币钱包的差异，我们对比了一个标准的 2-of-3 多签名钱包与多种时间锁钱包（全部使用 P2WSH 的脚本类型）。一种多时间锁钱包设计成以 2-of-2 多签名为基础，在 15 个月后拓展成 2-of-3 多签名；我们发现，在从钱包种取款时，每多一个输入（多花费一个 UTXO），时间锁钱包的交易的体积（以 vB 为单位）就比标准的多签名钱包交易多出 13% 。第二种时间锁钱包设计成以 3-of-3 多签名为基础，在 15 个月后递减为一个 2-of-3 多签名。对于这种钱包，每多一个输入就会多出 38% 的数据体积。</p><p>交易数据的差异可能跟时间锁钱包构造的具体细节高度相关（利用了 taproot 的钱包会从交易数据减少种获得好处）。这种差异可能已经足以一项 UTXO 管理决定，例如导致<a href="https://www.unchained.com/blog/utxo-management-mandatory">建议为钱包的 UTXO 设置更高的面额下限</a>。除了更大的交易体积，时间锁钱包还可能有更多的在高费率环境下发起交易的需要，这是我们将要讨论的另一个顾虑。</p><h3 id="定期移动比特币的压力"><a href="#定期移动比特币的压力" class="headerlink" title="定期移动比特币的压力"></a>定期移动比特币的压力</h3><p>基于时间的复原路径的钱包，有意设计成让这些花费条件在一开始是禁用的，而在地址中的比特币静置一段时间没有移动之后，才启用 —— 并不是一开始就提供可用的另外路径。复原路径的激活提高了资金的可访问性，这在处理丢失密钥的威胁时，是非常有用的，但是，它同时也降低了应对偷盗威胁的保护。因此，一个时间锁钱包的用户，要保证复原路径永久处于时间锁的约束之下，直到真的要用到它。</p><p>在本文的开头，我们提到，绝大部分时间锁钱包都使用 CSV，它最长的时间锁也就是 15 个月。因此，为了保证时间锁不过期，最少每 15 个月要重置一次时间锁。重置 CSV 时间锁并不难，只需将比特币转移到同一钱包内的一个新的地址，但是，这样做就要触及所需的私钥、将它们从安全的存储位置取出、签名一笔或更多笔交易来移动整个钱包的余额。在时间压力之下采取这些敏感的行动，可能会产生慌张和十五。此外，如果还要考虑隐私性，可能需要更加频繁的重置交易（每个 UTXO 分别处理），来<a href="https://www.unchained.com/blog/bitcoin-utxo-privacy">避免影响隐私性的地址关联</a>。</p><p>另一个重要考虑是交易手续费率的波动。交易手续费不仅取决于交易数据（如上一节所述），也取决于手续费率环境 —— 快速移动比特币的全球需求。手续费率环境可能在比特币价格大幅波动时产生无法预料的波动。如果你设置了一个时间锁钱包，计划每 14 个月（在 15 个月的倒计时还剩一个月的时候）重置一次时间锁，你可能会发现在这最后一个月里，手续费率是非常高的。那么你就会面临一些不舒服的抉择：你可以支付额外更高的手续费（<a href="https://www.unchained.com/blog/too-many-bitcoin-utxos">可能是费率较低时候的几百倍</a>），也可以等待、之网手续费率下降。如果你等了，费率却继续上升，你就会感觉自己被逼到了墙角，要么让钱包的安全性随着时间锁过期而降级，要么拿出一大笔比特币来支付手续费。</p><h2 id="结论：时间锁钱包更安全吗？"><a href="#结论：时间锁钱包更安全吗？" class="headerlink" title="结论：时间锁钱包更安全吗？"></a>结论：时间锁钱包更安全吗？</h2><p>利用了 Miniscript 的时间锁钱包可以为比特币资金的安全模式加入额外的复杂性。它们可以定制成实现一些巧妙的结构，但也有一些取舍。交易手续费、UTXO 管理、外部的钱包迁移选项，对于用户来说都更具挑战性。持续采取行动的模式，也不同于许多标准的多签名钱包用户的保管策略 —— 直接锁定比特币储备长达数年。</p><p>时间锁以独特的方式处理了密钥丢失和被盗的风险、预留了额外的盗窃保护，它随时间自动解除限制，以应对密钥丢失的概率。这种创造性的复杂性，是其吸引力的主要来源。然而，<a href="https://www.unchained.com/blog/what-is-multisig">标准的多签名钱包</a>已经被广泛认为是对丢失和失盗符合风险的强大解决方案。使用由<a href="https://www.unchained.com/blog/what-is-a-bitcoin-key-agent">密钥代理</a>持有后备密钥的<a href="https://www.unchained.com/features/diy-vs-collaborative-multisig">联合保管多签名</a>钱包，功能也非常类似于拓展式多签名时间锁钱包，但在钱包迁移和及时行动上更少顾虑。因此，将时间锁钱包视为不必要的过度复杂方案，也有一些道理。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">这些保管装置要实现什么设计目标，并介绍实现这些目标的基础技术</summary>
    
    
    
    
    <category term="Miniscript" scheme="https://www.btcstudy.org/tags/Miniscript/"/>
    
  </entry>
  
  <entry>
    <title>保护你的比特币遗产：基础原理</title>
    <link href="https://www.btcstudy.org/2025/10/02/preserving-your-bitcoin-legacy-estate-and-inheritance-planning-basics/"/>
    <id>https://www.btcstudy.org/2025/10/02/preserving-your-bitcoin-legacy-estate-and-inheritance-planning-basics/</id>
    <published>2025-10-02T06:59:02.000Z</published>
    <updated>2025-10-31T04:07:54.132Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Jon Bobb</em></p><p><em>来源：<a href="https://www.unchained.com/blog/preserving-your-bitcoin-legacy-estate-and-inheritance-planning-basics">https://www.unchained.com/blog/preserving-your-bitcoin-legacy-estate-and-inheritance-planning-basics</a></em></p></blockquote><p>遗产规划是你的比特币旅途的重要部分，而且需要远见和计划，来保证顺利继承。很常见的情形是，家庭成员过于关注一件事情 —— 比特币密钥管理的技术细节 —— 最终忽略了实际分发比特币的法律过程。没有妥善的计划，你的继承人和受益人可能无法及时且按照你的意愿得到你的比特币。</p><p>在本文中，我们会提供比特币遗产规划的一个概述。我们会介绍在设计遗产管理策略、传递比特币给你的下一代时需要考虑的重要信息。</p><h2 id="什么是遗产规划？"><a href="#什么是遗产规划？" class="headerlink" title="什么是遗产规划？"></a>什么是遗产规划？</h2><p>遗产规划流程是为了确定，你希望在你身故之后，你的资产会如何管理和分发。它不是只对有钱人和老年人有意义 —— 不管你是什么年龄，财务状况如何，遗产规划都是确保你的意愿得到尊重、你爱的人得到保护、你的资产得到高效管理的有用工具。</p><p>没有合理的计划，你的财产可能会受制于所在地区的遗嘱认证法律，最终产生违背你的意愿的、意料之外的后果。</p><p>一份全面的遗产计划可能会包含以下一项或多项：</p><ul><li>遗嘱</li><li>授权书</li><li>信托</li></ul><p>我们逐一深入。</p><h2 id="遗嘱"><a href="#遗嘱" class="headerlink" title="遗嘱"></a>遗嘱</h2><p><em>遗嘱</em> 是一份具有法律意义的文本，描述在你身故之后，你的房产和其它资产要如何转移。</p><p>在你身故之后，这份遗嘱通常会被呈交给你所在地的遗嘱认证法庭。持有这份遗嘱的人可以这么做，遗嘱中指定的执行人也可以这么做。</p><p>执行人或者个人代表提交  “遗嘱认定申请书” 的时候，就可以请求法庭合法地指定遗嘱执行人。请求中通常包含了死者的信息、死亡时间、一系列已知的资产，以及关于潜在继承人的细节。一旦得到授权，执行人就可以帮助认证流程：帮助解决任何遗留税务、传递资产给继承人。</p><table><thead><tr><th>优点</th><th>局限性</th></tr></thead><tbody><tr><td>创建遗嘱快速而且便宜</td><td>你的遗嘱中的资产传教受制于遗嘱认证法庭，法庭程序可能耗费许多时间、许多金钱，取决于你所在的区域</td></tr><tr><td>可以随时修改或撤销</td><td>隐私性有限，因为遗嘱会被公开记录</td></tr><tr><td>为资产分发提供清晰的指引</td><td>更容易受到对遗嘱不满意的继承人（债权人）的质疑</td></tr></tbody></table><p>如果你没有设立遗嘱，你的遗产会根据你死亡时所在区域的法律来结算。这就是所谓的 “无遗嘱” 死亡，可能会产生你和你的继承人不满意的结果。你可以通过设立遗嘱并定期更新它，来防止这些事情发生。</p><h2 id="授权书"><a href="#授权书" class="headerlink" title="授权书"></a>授权书</h2><p>如果你因为疾病、受伤或衰老而无法做出决定，那么必须要有人来管理你的事务。那么通过起草委托书（power of attorney，POA），将一个受信任的人指定为保管人。在导致你失去行动能力的事件中，一个家庭成员或者密友可以在听证会上出示证据，以获得许可。一旦获得许可，这个保管人将拥有法律上的权威来管理你的财务，并代表你作出重要的决定。</p><table><thead><tr><th>优点</th><th>局限性</th></tr></thead><tbody><tr><td>可以根据具体需要来定制</td><td>仅在你生前有效，效力在你死亡的时候就终止</td></tr><tr><td>可以在具体的决定上赋予广泛或受限的权力</td><td>一些机构可能会在较旧的、过时的，或者 “太新的” POA 面前犹豫不决</td></tr><tr><td>如果你失去行动能力，可以减少由法庭来任命监护人的需要</td><td>可能会在无意中以及未更新文档的前提下撤销</td></tr><tr><td>可以管理财产、金融、投资（POA）和医疗护理（健康代理）上的所有事情</td><td></td></tr></tbody></table><h2 id="信托：将资产-“委托”-给受托人"><a href="#信托：将资产-“委托”-给受托人" class="headerlink" title="信托：将资产 “委托” 给受托人"></a>信托：将资产 “委托” 给受托人</h2><p>信托在遗产规划、资产保护和金融管理上都很常见。它是一种涉及三方的法律安排：授予人，受托人，受益人。</p><p><em>授予人</em> 就是创建信托、把资产转移到信托中的人。这个人决定信托的目的、确定信托的条款，并指定其他两方 —— 受托人和受益人。授予人必须决定信托是可以撤销的还是不可以撤销的（这个我们后面会再讲到）。</p><p><em>受托人</em> 是根据信托条款和受益人的最大利益、负责管理信托资产的人（或实体）。受托人可以是授予人自己（在还活着的时候）、一个受信任的人（朋友或是家人）、专业人士（比如一位律师或者会计师），也可以是一家公司（比如银行或者信托公司）。</p><p><em>受益人</em> 则是能够从信托的资产和收入中获益的人或实体。他们可以根据信托合约中的条款获得资产分发。授予人可以设定让受益人获得信托资产的具体的条款和条件。</p><h3 id="可撤销的生前信托"><a href="#可撤销的生前信托" class="headerlink" title="可撤销的生前信托"></a>可撤销的生前信托</h3><p>可撤销的生前信托，有时会被称为 “生前信托（living trust）” 或者 “可撤销的信托（revocable trust）”，允许授予人在生前保持对 TA 的资产的控制权。授予人可以随时修改信托、变更受托人和受益人、直接投资乃至撤销信托。如果在生前得到<a href="https://unchained.com/blog/living-trust-bitcoin-inheritance/">妥善的设计</a>和注资，可撤销的信托一般允许资产快速传递、无需公开继承的细节。</p><p>可撤销的生前信托也可以认为是一种在生前保持对你的资产的控制权、同时保证在你死后资产不会通过遗嘱认证法庭来传递的方法。它不能替代不可撤销的信托（见下文），因为那是为完全不同的目的而使用的。同时使用可撤销和不可撤销的信托是罕见行为。</p><table><thead><tr><th>优点</th><th>局限性</th></tr></thead><tbody><tr><td>授予人可以灵活控制受益人如何以及何时获得资产</td><td>更高的初始搭建成本和复杂性（相比遗嘱）</td></tr><tr><td>避免遗嘱认证、允许受益人快速获得资产</td><td>如果资产在授予人生前没有妥善转移到信托中，就无法被信托管理，可能依然需要遗嘱认证</td></tr><tr><td>保护受益人的隐私性，继承的细节无需公开</td><td>因为授予人保留着控制权，信托的资产会被认为仍是授予人财产的一部分，以聪容易被债务人索赔</td></tr></tbody></table><h3 id="不可撤销的信托"><a href="#不可撤销的信托" class="headerlink" title="不可撤销的信托"></a>不可撤销的信托</h3><p>与可撤销的信托不同，不可撤销的信托是无法修改的。一旦授予人将资产放入不可撤销的信托中，这些资产的占有和控制权就永久转移了。这种方法通常用于资产保护和减免税务。</p><table><thead><tr><th>优点</th><th>局限性</th></tr></thead><tbody><tr><td>资产可以以高度结构化的方式转移（大学基金、配偶终身使用权、隔代信托、特殊用途信托，等等）</td><td>创建之后就无法修改、撤销，如果没有妥善构造，受益人可能滥用分红</td></tr><tr><td>可以减少遗产税</td><td>授予人放弃对财产的所有权和控制权</td></tr><tr><td>一般可以保护授予人的信托资产不受债权人索赔</td><td>通常要求持续的法律和行政支持，以满足严格的法律和税务要求。这些支持可能是昂贵的</td></tr><tr><td>避免遗嘱认定，允许受益人快速获得资产</td><td></td></tr><tr><td>保护受益人的隐私，继承的细节无需公开</td><td></td></tr></tbody></table><h2 id="什么类型的遗产计划最适合你？"><a href="#什么类型的遗产计划最适合你？" class="headerlink" title="什么类型的遗产计划最适合你？"></a>什么类型的遗产计划最适合你？</h2><p>为了保证你的遗产得到继承，你采取的规划可能包含上述多种工具。一位合格的遗产规划律师可以帮助你设计最适合你的策略、保证你所爱的人拥有必要的知识、技能和资源来清算你的财产、继承你的比特币。</p><p>如果你的遗产规划律师拥有比特币知识，那也会有帮助。但因为比特币在法律上并不独特，所有也不是严格必要的。要了解更多，请看我们关于在建立比特币遗产规划时的<a href="https://unchained.com/blog/how-bitcoin-inheritance-plan">五大考虑</a>的博文。</p><h2 id="使用联合保管保护你的比特币遗产"><a href="#使用联合保管保护你的比特币遗产" class="headerlink" title="使用联合保管保护你的比特币遗产"></a>使用联合保管保护你的比特币遗产</h2><p>“<a href="https://unchained.com/features/diy-vs-collaborative-multisig">联合保管多签名</a>” 是一种在你的财产 以及&#x2F;或者 继承计划中保管和保护你的比特币好方法。Unchained 提供了多种账户类型和配置，允许你：</p><ul><li><strong>在你生前，保管你的密钥</strong>。保管好你自己的私钥，同时在计划中加入你的继承人、受托人、继任者和受益人。在你准备好之前，这些信息可以保密。</li><li><strong>确保资产获得合适的归属</strong>。在个人资产和信托资产之间创建清晰的分割。通过指定授予人、受托人、继任者和受益人，强制执行严格的债务分割。</li><li><strong>获得便利的管理</strong>。为个人、公司和信托资产使用不同的账户类型。使用数量不限的保险柜来单独追踪资产。获得详细的月度报告。</li><li><strong>确保你的家人参与</strong>。为你的信托和公司账户添加多位用户，<a href="https://unchained.com/connections">按需使用密钥</a>，为你所爱的人分割债务以及访问权限。</li><li><strong>按需获得比特币专家的服务</strong>。全面的资源和高级服务支持，确保你和你所爱的人拥有知识和技能来管理你的比特币。</li></ul><p>（完)</p>]]></content>
    
    
    <summary type="html">遗产规划是你的比特币旅途的重要部分，而且需要远见和计划</summary>
    
    
    
    
    <category term="产品" scheme="https://www.btcstudy.org/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>Ark：一种比特币 Layer-2 协议</title>
    <link href="https://www.btcstudy.org/2025/09/28/ark-101-a-bitcoin-layer-2-protocol/"/>
    <id>https://www.btcstudy.org/2025/09/28/ark-101-a-bitcoin-layer-2-protocol/</id>
    <published>2025-09-28T10:02:28.000Z</published>
    <updated>2025-10-31T04:07:54.094Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Saravanan Mani</em></p><p><em>来源：<a href="https://medium.com/@saravananmani_/ark-101-0d64cfe9378f">https://medium.com/@saravananmani_/ark-101-0d64cfe9378f</a></em></p></blockquote><h2 id="什么是-“Ark”？"><a href="#什么是-“Ark”？" class="headerlink" title="什么是 “Ark”？"></a>什么是 “Ark”？</h2><p>“Ark” 是一种比特币 Layer 2 协议，支持即时且便宜的比特币支付。</p><p>它的操作大部分发生在链外（off-chain），也就是说，基于 Ark 协议的支付是在比特币区块链之外发生的。Ark 是一种支持自主保管的协议，用户可以在需要时自主在链内（on-chain）取出资金，虽然跟基于排他性输出的自主保管方案有区别（我后面会讲到）。</p><p>与闪电网络不同，Ark 协议不依赖于发票、支付通道、HTLC（哈希时间锁合约）、路由等概念。相反，它使用一种 服务商-客户 模式，所有用户都跟自己的服务商交互，而不是通过点对点网络（跟其他用户）交互。</p><p>Ark 遵循了一种乐观设计，也即用户假设服务商会正确地协调交易。如果这个服务商变得无动于衷、开始审查交易、行为不轨，用户就可以回敬以单方面退出。常规条件下，退出操作会在服务商和用户协同之下在链外处理，即单方面退出只用于非常规情形。</p><p>Ark 支付跟链内支付模式相似：它们是在链外处理的预签名比特币交易，接收者不需要在线来接收支付，用户也不需要提前锁定流动性。</p><p>Ark 是比特币专属的（Bitcoin-only）。它不包含山寨币、token、侧链和新区块链。它在当前的比特币共识规则上就能工作。不过，“限制条款（covenant）”（一类比特币共识规则升级）可以显著加强这个协议。</p><p>与所有的 Layer 2 协议一样，Ark 也有自身的取舍，这使得它更适合于某一些场景，而不适合另一些场景。</p><h2 id="入场和支付"><a href="#入场和支付" class="headerlink" title="入场和支付"></a>入场和支付</h2><p>有两种方法加入一个 Ark：</p><ul><li><p>使用一笔常规的比特币交易，在区块链内移动你的比特币到一个 Ark 中</p></li><li><p>收取 Ark-to-Ark 支付，也能让你进入一个 Ark，并且是即时的 。这是在链外发生的，并不需要付出区块链确认手续费，也不需要前置操作。</p><p>（译者注：此处讲的这种支付形式是一般称为 “Arkoor（Ark out-of-round）” 的支付。）</p></li></ul><p>所有的 Ark-to-Ark 支付都是即时、低手续费的，而且完全发生在链外。</p><h3 id="如何通过链内存款进入一个-Ark？"><a href="#如何通过链内存款进入一个-Ark？" class="headerlink" title="如何通过链内存款进入一个 Ark？"></a>如何通过链内存款进入一个 Ark？</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/onchain-deposit-onboard-ark.webp" alt="onchain-deposit-onboard-ark"></p><p>在这个案例中，Alice 使用自己的链内 UTXO（在图中表示为 “Alice input utxo”）创建一笔注资交易。该交易随时可以被 Alice 和目标 Ark 的服务商（AS）一起花费，也可以在 30 天后被 AS 独自花费。在签名和广播这笔注资交易之前，Alice 和 AS 要一起签名一笔暂不广播的 “退出虚拟交易（exit virtual transaction）”。这笔退出交易花费注资交易的输出（“output UTXO”）；而它的输出又可以被双方随时一起花费，或者被 Alice 在该退出交易得到区块确认的一天之后独自花费。这套装置给了 Alice 在加入这个 Ark 后的 30 天内单方面退出的选择。</p><p>这些没有广播的交易都包含一个额外的锚点输出，用于允许通过 CPFP（子为父偿）方法为交易追加手续费。为了简洁，上图中省略了这样的锚点输出。（译者注：“CPFP” 即是用一笔新交易来花费一笔尚未得到区块确认的交易的某个输出，并在这笔新交易中携带足够多的手续费，从而吸引矿工同时确认这两笔交易。）</p><p>但是，为什么 AS 可以在 30 天的绝对时延之后独自取走注资交易中的资金，而 Alibe 必须等待 1 天的相对时延之后才能单方面取走退出交易中的资金？为什么 CPFP 是这些交易的唯一一种手续费支付机制？我们后面再解释。</p><p>在 Ark 协议中，未广播的交易和 UTXO 相应被称作 “虚拟交易” 和 “VTXO（虚拟 UTXO）”。</p><p>（译者注：可以看出，不同作者对 “VTXO” 的定义会有些许不同，但核心意思是一致的。）</p><p>Ark 协议使用基于 Schnorr 签名的 Taproot 脚本来强制执行这些花费条件。Alice+AS 的多签名装置遵循 N-of-N 的 MuSig2 多方计算协议，最终产生单个聚合公钥和单个聚合签名。</p><h3 id="如何通过-Ark-支付进入一个-Ark？"><a href="#如何通过-Ark-支付进入一个-Ark？" class="headerlink" title="如何通过 Ark 支付进入一个 Ark？"></a>如何通过 Ark 支付进入一个 Ark？</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/ark-payment-onboard-ark.webp" alt="ark-payment-onboard-ark"></p><p>在这种情况下，Alice  给 Bob 支付 100k 聪（见黄色的 “bob vtxo”），具体做法是花费自己的 VTXO（即 “alice vtxo”）。她跟 AS 一起签名，解锁 “Alice+AS” 花费条件。她会收到 900k 聪作为找零（“alice change vtxo”）。Bob 的 VTXO 中的花费条件跟 Alice 的 VTXO 是完全一样的（唯一区别是使用 Bob 的公钥而非 Alice 的公钥）。Alice 的找零 VTXO（“alice change vtxo”）维持跟她原来的 VTXO 一样的花费条件。</p><p>现在，Bob 就可以使用自己的 VTXO 来发起 Ark 支付了，就像 Alice 做的一样。不过，Bob 的 VTXO 带有被重复花费的风险：因为支付是在链外发生的，这些交易没有得到区块链确认，也就没有区块链提供的重复花费保护；AS 和 Alice 可以串通起来，在别的地方再次花费 Alice 原本的 VTXO，从而在 Bob 一无所知的情况下作废掉 Bob 的 VTXO 。但 Alice 的找零 VTXO 就没有这样的风险，因为她没有欺诈自己的动机。</p><p>如果 Alice 和 AS 都作风正派（没有签名和广播与此次支付相冲突的交易），Bob 就可以通过广播他的 “支付虚拟交易（payment virtual transaction）” 以及退出虚拟交易，单方面退出这个 Ark 。他自己必须使用 CPFP 为这两笔交易支付区块确认手续费。</p><p>带有重复花费风险的 VTXO 被涂成黄色，而没有这样的风险的 VTXO 则被涂成绿色。</p><h3 id="深入观察-Ark-支付"><a href="#深入观察-Ark-支付" class="headerlink" title="深入观察 Ark 支付"></a>深入观察 Ark 支付</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/ark-payment-closer-look.webp" alt="ark-payment-closer-look"></p><p>如你所见，就像 Alice 可以给 Bob 支付一样，Ark 的用户可以彼此支付。然而，任何从带有重复花费风险的 VTXO 创建的新 VTXO 都会带有同样的风险。实际上，这种风险会越来越大，因为这个 VTXO 链条上的任何一个前任都可能跟 AS 勾结从而伤害最新 VTXO 的持有人。找零 VTXO（或者说自我支付的 VTXO）最初是从一个 exit VTXO（比如 Alice 的 exit VTXO）中派生的，可以认为是没有这种风险的，因为同一个用户既控制着输入又控制着输出，所有没有激励去创建与之冲突的交易（参与勾结）。</p><p>此外，从长链条的支付虚拟交易中创建的 VTXO 在单方面退出时会面临更高的区块链确认费用。这是因为用户必须为（从最初一笔退出虚拟交易开始的）链条上的每一笔虚拟交易支付手续费。</p><p>我们会在后续章节中演讲如何缓解重复花费风险以及长链条 VTXO 的高昂单方面退出成本。</p><p>因为 Ark 支付是只由发送者和 AS 签名、完全离链的交易，所以它们是即时的，而且不会有区块确认手续费。</p><h3 id="Ark-协议如何为入场和支付扩容？"><a href="#Ark-协议如何为入场和支付扩容？" class="headerlink" title="Ark 协议如何为入场和支付扩容？"></a>Ark 协议如何为入场和支付扩容？</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/scaling-onbard-and-payment.webp" alt="scaling-onbard-and-payment"></p><p>任何用户都可以使用自己的链内资金加入某个 Ark，就像 Alice 一样。在上图中，Wendy 也用类似的方式加入了一个 Ark 。为了简化，只展示出了可以被花费的 VTXO 。</p><p>链内入场的吞吐量受到比特币的区块空间限制。相反，Ark 支付是完全在链外发生的，并不受区块空间的约束。它的吞吐量完全取决于 Ark 服务商处理和协调这些交易的能力。</p><h2 id="合作式退出"><a href="#合作式退出" class="headerlink" title="合作式退出"></a>合作式退出</h2><h3 id="什么是-“合作式退出”？"><a href="#什么是-“合作式退出”？" class="headerlink" title="什么是 “合作式退出”？"></a>什么是 “合作式退出”？</h3><p>在 “合作式退出” 中，一位用户向自己的 AS 表明，自己希望用一个 VTXO 交换一个链内的 UTXO 。这位用户将自己的 VTXO 余额转移到一个由 AS 控制的地址中，而 AS 则同时转移相等数额的链内资金到该用户所控制的地址。这种互换具有原子性，从而保证了公平。</p><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/cooperatively-exit.webp" alt="cooperatively-exit"></p><p>如上图所示，Bob 和 Wendy 都希望合作式退出这个 Ark 。那么，AS 就构造一笔交易，称作 “批量处理交易”，将 AS 的链内资金转移给这两位用户。同时，这两位用户各自准备一笔 “弃权交易（forfeit transaction）”，将自己的 VTXO 余额转移给由 AS 控制的一个地址。</p><p>在这个阶段，这三笔交易都还没签名。这是因为，不管 AS 还是用户，都不想先把自己的余额交给对方，因为这样会带来对手方风险：对方可能拒绝签名对应的交易。为了保证退出是公平的，我们需要一种机制来原子化地签名这些交易、保证 VTXO 和 UTXO 公平交换。</p><p>这里的想法是：如果仅在批量处理交易变得可以花费之后，弃权交易才能被花费，那么交换就是原子化的。</p><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/atomical-swap.webp" alt="atomical-swap"></p><p>如上图所示，当我们把来自批量处理交易的一个输出（称为 “连接器”）作为一笔弃权交易的一个输入之后，就只有在批量处理交易被签名和区块确认之后，弃权交易才能被花费。连接器输出的价值并不重要。只要它超过了粉尘数额，就可以保证，只有在批量处理交易得到区块确认之后，弃权交易才可能被区块确认。</p><p>现在，签名顺序的重要性就体现出来了。用户必须先签名自己的弃权交易 —— 这个步骤对他们来说是绝对安全的，因为除非 AS 签名批量处理交易，弃权交易是不会生效的。</p><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/connector-signing-order.webp" alt="connector-signing-order"></p><p>在收到用户发来的弃权交易之后，这个 AS 再完成签名和广播批量这笔处理交易、让它得到区块确认的流程。</p><h3 id="为什么要在-VTXO-中添加-“用户-1-天之后才能取走资金”-的条款？"><a href="#为什么要在-VTXO-中添加-“用户-1-天之后才能取走资金”-的条款？" class="headerlink" title="为什么要在 VTXO 中添加 “用户 1 天之后才能取走资金” 的条款？"></a>为什么要在 VTXO 中添加 “用户 1 天之后才能取走资金” 的条款？</h3><p>如果 Wendy 尝试欺骗这个 Ark 服务商，也就是说，在已经签名了弃权交易、从批量处理交易中收到了一笔资金之后，又发起单方面退出、尝试领取自己（已经弃权的）VTXO 中的价值，这个 AS 就可以广播这笔弃权交易、阻止 Wendy 。</p><p>这就是在 VTXO 中添加为期 1 天的相对时间锁的目的。这个时延给了 AS 充足的时间来广播和确认弃权交易；该交易已经得到了 Wendy 的签名，可解锁 Wendy+AS 条件，因此不受时间锁限制。时间锁让A S 可以抢在 Wendy 之前，取走 VTXO 中的资金。</p><p>这个相对时间锁的长度可以由服务商来配置。</p><h3 id="连接器输出可能会变得很多，有办法优化它吗？"><a href="#连接器输出可能会变得很多，有办法优化它吗？" class="headerlink" title="连接器输出可能会变得很多，有办法优化它吗？"></a>连接器输出可能会变得很多，有办法优化它吗？</h3><p>在上图的做法中，批量处理交易中的连接器输出的数量，是跟使用它来合作式退出的 VTXO 的数量一样多的。因为批量处理交易是要得到区块确认的，随着连接器输出的数量增加，它的体积也就增大，区块确认手续费也会上升。</p><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/connector-optimaztion.webp" alt="connector-optimaztion"></p><p>而在这里，我们加入一笔缓冲交易，叫做 “连接器交易（connector tx）”，它使批量处理交易只需要准备 1 个连接器输出，就能（产生出足够数量的连接器）为所有的弃权交易服务。这就消除了（在批量处理交易中）为每一笔弃权交易准备一个连接器输出的需要，将连接器输出数量的线性增加替换为单个输出，极大地减少了批量处理交易的体积和确认成本。</p><p>理想情况下，VTXO 的虚拟交易，以及弃权交易和连接#器交易，都是不会广播到区块链上的。它们只是一种后备手段，只会在用户尝试欺诈时使用（这时候用户会广播全部的虚拟交易以及被弃权的 VTXO，而 AS 会广播连接器交易和弃权交易）。</p><p>但如何阻止用户通过广播一个已经弃权的 VTXO、向 AS 发动 DoS（拒绝服务式攻击）？答案是，因为所有的虚拟交易都依赖 CPFP 来支付手续费（自身并不携带任何手续费），尝试欺诈的用户必须为整个交易链条支付手续费。即使这个用户能接受这一点，AS 也依然能够通过预签名的弃权交易来抢先取走被弃权的 VTXO 中的资金。这使得这样的攻击昂贵而且没有意义，也就在实质上阻止了用户尝试欺诈。</p><h3 id="那又为什么要在输出-UTXO-中加入-“AS-可在-30-天绝对时延后取款”-的条件呢？"><a href="#那又为什么要在输出-UTXO-中加入-“AS-可在-30-天绝对时延后取款”-的条件呢？" class="headerlink" title="那又为什么要在输出 UTXO 中加入 “AS 可在 30 天绝对时延后取款” 的条件呢？"></a>那又为什么要在输出 UTXO 中加入 “AS 可在 30 天绝对时延后取款” 的条件呢？</h3><p>在现实生活中，一个 Ark 服务商（AS）的任何一部分用户都可能随时请求合作式退出。</p><p>从一笔注资交易的输出中创建的 VTXO，是直接或间接派生自这个输出的，形成了一个多层的、前后相接的交易结构。这意味着，多个用户实际上共同分享来自注资交易的同一个链内 UTXO 。</p><p>然而，AS 无法在某一用户请求合作式退出时，就强迫共享同一个祖先交易的所有其他用户也跟着一起退出。这样做会形成糟糕的用户体验，而且也是不切实际的，因为一些用户会离开互联网，或者说在合作式退出流程期间无法响应。</p><p>为了处理一些用户的退出请求而不打扰另一些用户，AS 临时使用自己的链内资金来协助希望合作式退出的用户批量退出。</p><p>但是，AS 自己为批量处理交易注入资金（为用户服务）之后，该如何从用户弃权的 VTXO 中回收资金呢？一种选择是广播弃权交易。但是，这将强迫许多共享相同祖先交易的无关 VTXO 也退出。而且，这种办法还会引入不必要的交易确认成本和时延，在实质上背离了 Ark 的链外设计的初衷。</p><p>与此同时，AS 也不能让自己提供的流动性永久锁定、直到共享一笔注资交易的每一位用户都合作式退出，这代价也太昂贵了。这样做会给 AS 施加一种无法承受的负担、让这样的系统无法扩容。</p><p>一种更加务实的做法是，给共享一笔注资交易的所有用户施加一个最终期限，在这个最终期限到来之前，用户们必须发起合作式退出。但是该怎么实现呢？</p><p>这就是 “AS 可在 30 天绝对时延后取款” 的作用了。在 30 天的绝对时延之后，AS 就可以独自花费这个 UTXO 。在这个窗口期内，用户可以随时请求合作式退出。不过，如果一个用户没有在此期间退出，TA 的 VTXO 就会被 AS 拿走 —— 无论 TA 是否明确签名过弃权交易。</p><p>这一机制让 AS 可以在一个可预期的时间框架内回收流动性，并持续高效地运行。这个过期时间的长度也是可以由服务商来配置的。</p><p>缺点是，没能在最终期限到来之前行动的用户会丢失自己的 VTXO 余额（由 AS 取走）。</p><h2 id="三个尴尬的问题"><a href="#三个尴尬的问题" class="headerlink" title="三个尴尬的问题"></a>三个尴尬的问题</h2><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/the-three-awkward-issue.webp" alt="the-three-awkward-issue"></p><p>我们已经指出了三种可能让 Ark 协议不实用或者缺乏吸引力的尴尬问题：</p><ul><li>从 Ark 支付中创建的 VTXO 所伴随的重复花费风险</li><li>因为没有在 30 天的最终期限之前退出而丢失 VTXO 余额的风险</li><li>单方面退出的难度和高成本，尤其是对其 VTXO 处于长长的虚拟交易链条末端的用户</li></ul><h3 id="Ark-协议可以如何解决这些问题？"><a href="#Ark-协议可以如何解决这些问题？" class="headerlink" title="Ark 协议可以如何解决这些问题？"></a>Ark 协议可以如何解决这些问题？</h3><p>幸运的是，这三种问题都可以用一种方案来解决：AS 回收受影响的 VTXO，为相关的用户发放刷新了的退出虚拟交易的 VTXO。</p><p>我们可以使用批量处理交易来解决这些问题，就像合作式退出流程一样。只是，AS 不需要为每个用户协调一个链内 UTXO，而只需要为他们每人发放一个来自新的退出虚拟交易的新 VTXO 。这个新 VTXO 是更加安全的，因为它没有重复花费风险，也不处在长长的虚拟交易链条的末端，而且过期时间点重设成了从此刻开始的 30 天之后。</p><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/issue-new-vtxo.webp" alt="issue-new-vtxo"></p><p>在上面这个案例中，Dave 原子化地将自己的旧 VTXO（带有重复花费风险）换成了一个新的、没有风险的 VTXO 。他没有用批量处理交易来执行合作式退出（获取一个链内 UTXO），而是安全地获得了一个新的、来自一笔退出虚拟交易的 VTXO 。</p><p>如果你再看仔细些，你会发现，上图的批量处理交易的第一个输出，其花费条件跟前述注资交易的输出是一样的。Dave 的退出虚拟交易也是数次。关键区别是资金的来源：前面提到的注资交易的资金来自用户自己的 UTXO，而这里的批量处理交易的资金则来自 AS 自己的 UTXO 。为什么呢？原因跟 AS 要给合作式退出注资是一样的 —— TA 临时注入自己的资金，帮助用户将旧的 VTXO 换成新的。一旦旧 VTXO 的过期时间点到来，AS 就可以一次性回收资金，跟合作式退出的情形是一样的。</p><p>当这个新 VTXO 的过期时间点临近，这个用户必须依照相同的流程、执行另一次互换。这防止了 AS 侵夺过期的 VTXO 。如果 AS 清扫了过期（而没有明确弃权）的 VTXO，用户实际上就是将自己的资金交给了 AS 。Ark 协议并不保证这样被清扫的 VTXO 的价值会归还给用户。不过，在现实中，AS 可能会在用户回到互联网上的时候，为 TA 发放一个相同价值的新的 VTXO ，作为一种礼貌。</p><p>自然，这些周期性的互换会需要用户付出一定的手续费，因为批量处理交易需要获得区块确认。但这一费用一般来说是低的，因为每个用户只需分摊一部分区块确认手续费。</p><h3 id="Ark-协议如何扩大-VTXO-互换的吞吐量？"><a href="#Ark-协议如何扩大-VTXO-互换的吞吐量？" class="headerlink" title="Ark 协议如何扩大 VTXO 互换的吞吐量？"></a>Ark 协议如何扩大 VTXO 互换的吞吐量？</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/vtxo-swap-scaling.webp" alt="vtxo-swap-scaling"></p><p>这一设计的关键优势是可扩展性。在上面这个例子中，Carol 和 Dave 都将自己的带有重复花费风险的 VTXO 换成新的来自退出虚拟交易的 VTXO 。一笔批量处理交易可以支持几千个用户，只需要在输出的多签名花费条件中加入用户的公钥、产生更多的退出虚拟交易和 VTXO 即可。主要的瓶颈在于 AS 和所有参与的用户之间的交互式签名流程。</p><h2 id="批量处理交易和退出虚拟交易的细节"><a href="#批量处理交易和退出虚拟交易的细节" class="headerlink" title="批量处理交易和退出虚拟交易的细节"></a>批量处理交易和退出虚拟交易的细节</h2><h3 id="AS-创建批量处理交易的频率"><a href="#AS-创建批量处理交易的频率" class="headerlink" title="AS 创建批量处理交易的频率"></a>AS 创建批量处理交易的频率</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/batch-transcation-frequency.webp" alt="batch-transcation-frequency"></p><p>一般来，AS 会按日常的时间间隔，比如一个小时，创建一笔新的批量处理交易。希望合作式退出，或者将既有 VTXO 换成新的无风险 VTXO 的用户可以向 AS 登记自己的意图，然后 AS 会跟他们的钱包软件协调交易。这个间隔是由 AS 自己决定的。在高需求期间，AS 可以按需启动额外的批次。</p><h3 id="退出虚拟交易有一些问题"><a href="#退出虚拟交易有一些问题" class="headerlink" title="退出虚拟交易有一些问题"></a>退出虚拟交易有一些问题</h3><p>在一种基础的退出虚拟交易构造中，一旦一位用户单方面退出，同一批次的所有其他用户也会被迫退出。这就打破了链外处理设施的连续性、导致意料之外的手续费、时延，并且要求每个人都重新入场。</p><p>而且，单方面退出的区块确认手续费会随着同一批次 VTXO 数量的增加而线性增加。比如说，如果一个批次有 1000 个 VTXO，那么退出的用户就必须为全部 1000 个输出支付区块确认手续费，那么单方面退出的成本当然是极为昂贵的。</p><h3 id="如何解决这个问题？"><a href="#如何解决这个问题？" class="headerlink" title="如何解决这个问题？"></a>如何解决这个问题？</h3><p><img src="/../images/ark-101-a-bitcoin-layer-2-protocol/transaction-tree-construction.webp" alt="transaction-tree-construction"></p><p>我们可以使用一种类似于二叉树的退出虚拟交易构造，而不是让一笔退出虚拟交易携带所有的 VTXO 。在这种构造中，如上图所示，如果 Carol （在同一批次的其他参与者之前）希望单方面退出，那么她需要按顺序广播一系列的虚拟交易：首先，是锚定了整个批次的 “根虚拟交易（root virtual transaction）”；然后，是左边的 “分支虚拟交易（branch virtual transaction）”，该交易通向她的 VTXO 所在的为止；最后，是她自己个人的 “退出虚拟交易（exit virtual transaction）”。</p><p>结果是，如果 Dave 也希望单方面退出，由于他跟 Carol 恰好在树的同一分支上，那么他只需要广播他自己的退出虚拟交易，因为该交易在树上的祖先交易 —— 根虚拟交易和分支虚拟交易，都已经在 Carol 的单方面退出期间得到区块确认了。</p><p>树结构的退出虚拟交易设计，相比于基础设计，提供了几种好处。在基础设计中，一个用户的单方面退出会强迫同一批次的所有其他用户也跟着退出。而在树结构设计中，没有发起单方面退出的用户不会受到其他人的退出操作的影响，既避免了被迫的退出，又保持了链外支付的使用体验。</p><p>单方面退出的区块确认手续费负担，也因此大大减少。在树结构设计中，区块确认手续费不再随着 VTXO 数量的增加而线性增加，只会随着 VTXO 数量的增加而呈对数增加（与树的深度呈线性增加），从而单方面退出也变得更加经济。后发起操作得用户还能进一步受益，因为他们只需要广播自己的子分支和叶子交易，尽可能降低自己个人的区块确认手续费。</p><p>树结构也提升了可扩展性，允许单个批次容纳更多的 VTXO 。不过，它也带来了更多的复杂性：交互式签名的次数会随着树的深度而增加，并且需要参与者之间的更多协调。</p><p>当一位用户选择单方面退出时，他们必须广播从树根到自己所在的叶子、整条路径上的每一个连接（每一笔交易），所以这个过程是非常费时费力的。当然，树根和分支交易（的输出）使用相同的脚本规则和过期条件，跟批量处理交易一样。关键的区别是这些交易在签好名后不会立即广播到区块链网络中，只会在需要时广播。</p><p>最后，如果一个用户单方面退出了，那么在 AS 日后需要清扫剩余的 VTXO 中的价值时，也必须广播和确认相应的分支交易（而不是只花费批量处理交易就能完成清扫）。</p><p style="text-align:center">- - -</p><p>要了解更多，可看这些资料：</p><ul><li><a href="https://docs.second.tech/ark-protocol/intro">Ark 协议 —— Second 文档</a>（<a href="https://www.btcstudy.org/2025/08/07/ark-protocol-intro-illustration-by-second-docs/">中文译本</a>）</li><li><a href="https://docs.arklabs.xyz/ark.pdf">Ark: A UTXO-based Transaction Batching Protocol — Litepaper by Ark Labs</a></li></ul><p>特别感谢 <a href="https://x.com/tierotiero"><em>tiero</em></a> 审核这篇文章。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">Ark 101</summary>
    
    
    
    
    <category term="Ark" scheme="https://www.btcstudy.org/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>SPHINCS+ 简介</title>
    <link href="https://www.btcstudy.org/2025/09/26/sphincs-plus-by-nifty/"/>
    <id>https://www.btcstudy.org/2025/09/26/sphincs-plus-by-nifty/</id>
    <published>2025-09-26T04:21:25.000Z</published>
    <updated>2025-10-31T04:07:54.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：NIFTY</em></p><p><em>来源：<a href="https://insider.btcpp.dev/p/sphincs">https://insider.btcpp.dev/p/sphincs</a></em></p></blockquote><p><img src="/../images/sphincs-plus-by-nifty/4b07-b1bf-9998c7c57aae.webp" alt="4b07-b1bf-9998c7c57aae"></p><p><em>Presido Bitcoin 是旧金山的一个 Bitcoin-only 的联合办公空间，他们在上周举办了一场关于比特币和量子计算的行业会议。<a href="https://x.com/roasbeef">@roasbeef</a> 是 <code>btcd</code> 和 <code>lnd</code> 两种客户端软件的首席维护者，以及 <a href="http://lightning.engineering/">Lightning Labs</a> 的首席技术官。他在会议上提出了一种为比特币添加量子安全签名方案 SPHINCS+ 的提议。在今天的报告中，Insider 的协议专家 <a href="https://x.com/niftynei">@niftynei</a> 将为你解读这个提议。</em></p><h2 id="量子安全问题"><a href="#量子安全问题" class="headerlink" title="量子安全问题"></a>量子安全问题</h2><p>比特币区块链上的大部分资金都是用私钥来保护的。为了让区块链确认你的比特币交易（资金转移），你需要证明你拥有花费这些资金的权限，具体做法就是提供一个签名。有效的签名只能由能够接触到正确私钥的人生成。</p><p>从某种意义上来说，比特币也是 “通过混淆来实现安全性”，这里的 “混淆” 就是猜测出你的私钥的难度。可能作为私钥的数字的数量是天文数字级别。猜测出某个私钥需要花费许多时间和能量，是任何人在合理的时间范围内都做不到的（比如需要几百年时间）。</p><p>然而，当前的比特币密钥依赖于基于椭圆曲线的数学等式。椭圆曲线是创建公私钥的明智选择，因为这样的公私钥关系一般来说比质数分解（另一种作为公私钥密码学基础的 “数学系统”）更加安全，公私钥的体积也更小。</p><p>但是，椭圆曲线密码学也有一个问题。Shor 算法由 <a href="https://www.youtube.com/watch?v=wnhZPmB8KLg">Peter Shor</a> 在 1994 年发明，基于傅里叶变换，意味着一台具有足够量子比特币（qubits）的量子计算机（quantum computer）可以快速计算出任何公钥的私钥。</p><p>Shor 算法意味着我们 <em>知道</em> 如何打破椭圆曲线密码学，只是能够做到这件事的工具还不存在。这样的工具会不会出现、什么时候会出现，也是一个有很多争议的话题，不仅出现在比特币社区中，也出现在广大的密码学界。用来保管比特币的每一个私钥的安全性，都取决于在无限长的未来、不会有任何人能够接触到能够执行 Shor 算法的工具。</p><p>普遍的共识是，到未来的 <em>某个</em> 时间点，比特币需要迁移到一种 <em>后量子</em>（post-quantum）的公私钥密码学系统中。@roasbeef  上周在 Presidio Bitcoin 的提议基于 “SPHINCS+” 哈希签名方案。我们先来简单看看它是怎么工作的，以及为什么它可能是一个保护比特币的好选择。</p><h2 id="量子安全，但数据沉重"><a href="#量子安全，但数据沉重" class="headerlink" title="量子安全，但数据沉重"></a>量子安全，但数据沉重</h2><p>“SPHINCS+” 是一种基于哈希函数的签名构造。它的核心是，依赖于密码学哈希函数（而不是优雅的椭圆曲线等式或者隐秘的大质数分解）来构造公钥和验证签名。基于哈希函数的密码学方案不受 Shor 算法影响，因为它们在单向函数（one-way functions）背后 <em>不使用</em> 函数式数学系统（functional math systems）。相反，哈希函数依赖于暴力的原像（preimage）数据堆叠。而暴力不包含在量子计算机傅里叶变换面前脆弱的数学关系（或者说捷径）， 也就没有 Shor 算法可以利用的对象。</p><p>堆叠数据，也就是哈希函数，有一个缺点：它的公钥和签名需要多得多的数据来分享。中本聪为比特币选择了椭圆曲线，正是因为在确认一个签名以及将资金锁定到一个公钥时，基于椭圆曲线的密码学需要分享的数据 <em>体积较小</em>。我喜欢说，比特币是椭圆曲线密码学的杀手级应用（killer app）；在中本聪在比特币协议中使用 secp256k1（具体的一种椭圆曲线）之前，大多数密码系统都在使用 RSA（或者说质数分解）作为底层的数学系统。根据 <a href="https://www.secg.org/SEC2-Ver-1.0.pdf">SEC 2</a> 参数论文，签名的安全性要达到 128 比特，RAS 的公钥需要长达 3072 个比特，而椭圆曲线的公钥只需要 256 比特。</p><p><img src="/../images/sphincs-plus-by-nifty/89ed9103a2bf.webp" alt="89ed9103a2bf"></p><p>小体积对区块链系统是非常重要的，因为任何添加到区块链上的数据都必须发送给网络中的每一个对等节点、由他们存储。紧凑的签名和公钥体积意味着，同样大小的数据空间可以塞进更多的交易。体积上的节省可以说就是中本聪为比特币选择椭圆曲线而不是 RSA 密码学的理由。</p><p>相比之下，后量子的密码学系统（中的公钥和签名）都大得令人难以置信。SPHINCS+ 系统中的公钥跟比特币当前的密钥系统中的公钥体积一样大，但签名的体积达到几千个字节。隔离见证 v1（也即 Taproot）中的 Schnorr 签名是 64 字节长；而 SPHINCS+ 的基准测试签名是 3 ~ 7 千字节。</p><p><img src="/../images/sphincs-plus-by-nifty/4f24100c3f1f.webp" alt="4f24100c3f1f"></p><p style="text-align:center">- 来自 NIST SPHINCS+ <a href="https://csrc.nist.gov/csrc/media/Events/2024/fifth-pqc-standardization-conference/documents/papers/a-note-on-sphincs-plus-parameter-sets.pdf">参数论文</a> -</p><h2 id="SPHINCS"><a href="#SPHINCS" class="headerlink" title="SPHINCS+"></a>SPHINCS+</h2><p>SPHINCS+ 是一种复杂的签名方案，是用多层的后量子签名 “小工具” 开发出来的；将它们结合在一起之后，SPHINCS+ 就创造了一种量子安全的 公钥&#x2F;私钥 对，可以安全地签名许多消息。与它的前辈 “XMSS（eXtended Merkle Signature Schemes）” （也是一种基于哈希函数的后量子签名方案）不同，在 SPHINCS+ 中，你不再需要为一个密钥对记忆曾经制作过的签名。</p><p>一个  SPHINCS+ “结构” 可以制造一个公钥，这个公钥可以签名多条消息而不会揭晓私钥。</p><p>而一个 SPHINCS+ “结构” 由以下三个部分组成：</p><ul><li><p>FORS，即 “随机子集森林（Forest of Random Subsets）”。这是 SPHINCS+ “结构” 的底层，也是用消息来确定要揭晓哪些原像的地方。被揭晓的原像集合将成为 SPHINCS+ 签名的基础。在 SPHINCS+  中，消息实际上是使用 FORS 来 “签名” 的。下一部分将用来把 FORS 签名绑定到 SPHINCS+ “超级结构（super structure）”（我选择这么称呼它）的根公钥上。</p></li><li><p>WOTS+，即 “Winternitz 一次性签名+”。这是一种后量子的、基于哈希函数的签名算法，可以安全地签名一条消息。SPHINCS+ 使用 WOTS+ 签名将在 FORS 中揭晓的原像绑定到分层的 XMSS 默克尔树上。这棵分层的默克尔树的树根即是 SPHINCS+ 公钥。（WOTS 和 WOTS+ 的唯一区别在于，这个带有 “+” 的变种在每一次哈希运算中都包含了一个随机前缀，从而缓解了 “多目标哈希攻击（multi-target hash attacks）”。“SPHINCS+ ” 中的 “+” 也同样意味着，每一次哈希运算中都包含一个随机生成的前缀。）</p></li><li><p>XMSS 默克尔树。一棵 XMSS 默克尔树的每个叶子上都是一个 WOTS+ 公钥。SPHINCS+ 用 XMSS 默克尔树所构成的层级创建了巨大的金字塔结构。树之上的树通常被称为 “hypertrees（超级树）”。父树的每一个叶子都是一个 WOTS+ 公钥，这个公钥要来签名在它之下的树的树根，就这样将树绑定在一起（从而形成一个结构）。树的数量以及层级的数量，都是可以改变的，取决于一个 SPHINCS+ “超级结构” 想要的签名大小。要求的签名体积越小，验证和生成签名所需的哈希次数就越多。所有树的最低层的每一个叶子都是一个 FORS 。许多默克尔树以及许多层级，意味着金字塔的底部有许许多多的 FORS，可以用来制作重用概率非常小的安全签名。</p><p>（译者注：这里之所以将一个 SPHINCS+ 结构称为 “金字塔” 而不是 “一整棵树”，是因为它确实不像单棵默克尔树那样，完全由叶子开始逐级合并、最终形成一个树根（从而一个树根就承诺了底层的所有叶子）；相反，顶层的一棵 XMSS 默克尔树的每个叶子是一个 WOTS+ 公钥，每个 WOTS+ 公钥都 <em>签名</em> 第二层某一棵 XMSS 默克尔树的树根，这些第二层 XMSS 默克尔树也是同样的构造：每个叶子是一个 WOTS+ 公钥；依此类推；因此，下一层的 XMSS 默克尔树的数量总是上一级数量的倍乘，也就是一个金字塔。最底层的不是 XMSS 默克尔树，而是 FORS 默克尔树（森林） —— 一个 FORS 公钥会对应许多棵默克尔树，可用来制作签名。）</p></li></ul><p><img src="/../images/sphincs-plus-by-nifty/ec5d1ae8dc91.webp" alt="ec5d1ae8dc91"></p><p style="text-align:center">- 超级树图的过度简化版本。上图中的 PK 在 SPHINCS+ 语境下实际上是 FORS 签名。而 “root” 是 SPHINCS+  公钥。 -</p><p>生成一个 SPHINCS+ 公钥的基本流程是：生成放在树根中的 WOTS+ 公钥，然后计算这些树的默克尔根（译者注：原文如此；疑应为 “生成放在叶子中的 WOTS+ 公钥，然后计算这些树的默克尔根”）。最顶部的一棵树的树根就是 SPHINCS+ 公钥。默克尔树的树根的体积由用来计算这个树根的哈希函数决定。一般来说，我们选择使用 SHA256 哈希函数，其输出是 256 比特。这就意味着，这样一棵默克尔树的树根将是 32 字节。这就是 SPHINCS+ 公钥的由来。</p><p>生成一个 SPHINCS+ 签名需要使用消息的一个哈希值，以随机选择要连接到 SPHINCS+ 超级树、生成 FORS 签名的 FORS 子树。一旦 FORS 签名生成之后，再用上一层 XMSS 树中的一个 WOTS+ 公钥的私钥来签名它；如此，签名与（公钥的）默克尔路径结合起来，一层一层向上，直到抵达最顶端的 SPHINCS+ 公钥。所有的 WOTS+ 签名、FORS 签名，以及让它们从 FORS 签名走向 SPHINCS+ 公钥的默克尔路径，就是这条消息的签名。你可以想象，这是很大一堆数据， 这就是为什么 SPHINCS+ 签名要比椭圆曲线签名（64 字节）大上几个数量级的原因。</p><p><img src="/../images/sphincs-plus-by-nifty/8dcf-5d1c8a54e425.webp" alt="8dcf-5d1c8a54e425"></p><p style="text-align:center">- 包含再 SPHINCS+ 签名中的数据的示意图；右边的 “sign” 会生成一个 FORS 签名；而中间的 “sign” 会生成一个 WOTS+ 签名。 -</p><h2 id="为什么要使用-SPHINCS"><a href="#为什么要使用-SPHINCS" class="headerlink" title="为什么要使用 SPHINCS+ ?"></a>为什么要使用 SPHINCS+ ?</h2><p>SPHINCS+ 是充分分层的，它非常笨拙，而且依赖于多种不同的 “工具” 来生成签名：Witnernitz 签名、FORS 和 XMSS 子树。</p><p>SPHINCS+ 的复杂性来源于它强大的特性集合。它是对 XMSS 的严格优化。XMSS 也是一种后量子的签名方案，允许一个公钥签名多条消息，但你必须跟踪已经用来签过名的默克尔树叶子。SPHINCS+ 则使用从被签名消息的摘要中生成的随机性，确定性地选择超级树上的一个子树叶子。</p><p>在比特币中，理想情况下，你应该为每一笔交易轮换一个公钥，这意味着你要为 <em>每一个</em> 在比特币中使用的公钥生成一个新的 SPHINCS+ 超级结构。</p><p>一开始，我困惑于为什么要在（理想情况下）一次性的公钥上提供这么强大的多次签名功能。</p><p>来自 Blockstream Research 的 <a href="https://x.com/n1ckler">Jonas Nick</a> 指出，你会在想要追加手续费或者交易因为某些原因而丢失时再次签名；<a href="https://x.com/roasbeef">Laolu</a>（也就是 roasbeef）指出，闪电网络这样的链下协议，需要（同一公钥）多次签名以跟踪私人合约内的状态转换。</p><p>在比特币上你可能不需要无限的重复签名功能，这就允许我们构造规模更小的 SPHINCS+ 超级结构来生成公钥。更小的超级结构意味着签名的体积会更小，因为需要携带的默克尔树路径减少了。但同时，这也意味着，在安全性开始下降之前，你可以制作的签名的数量变少了。在椭圆曲线密码学中，签名 nonce 的复用会立即泄露私钥；而在 SPHINCS+ 中，公钥的过度使用（用于签名），只会让安全性从 128 比特开始逐渐降级（随着低层的 FORS 开始部分复用）。</p><p>在深入研究之后，我不得不说，我真的成了 roasbeef 的使用 SPHINCS+ 作为后量子签名方案的提议的支持者。为了确定具体的参数，还有许多设计工作要做。我期待有一个 BIP 草稿（他表示已在撰写中），可以帮助填补一些围绕超级结构的层数与安全重复签名次数关系的空白。</p><p>还值得指出的是，就像 roasbeef 的演讲提到的，SPHINCS+ 不允许使用 种子词&#x2F;子密钥 派生路径。这意味着 BIP32 层级式钱包会死去。这里还有别的选择，但我们将失去使用层级式派生路径来描述组成一个钱包的公钥的办法（当前的 xpub 和子钱包行业习惯就是这个作用）。</p><h2 id="该走哪条路呢？"><a href="#该走哪条路呢？" class="headerlink" title="该走哪条路呢？"></a>该走哪条路呢？</h2><p>比特币将迁移到一种后量子签名方案。什么时候、使用哪种方案、什么参数，可能是接下来几年的热门话题。</p><p>Roasbeef 的 SPHINCS+ 提议是一种吸引人的选项，尽管多层树超级结构非常复杂。在我看来，所有基于哈希函数的后量子公钥方案都非常狰狞。SPHINCS+ 也丑陋，但这是因为它提供了最多的特性，尤其是重复签名时候的 “<em>无状态性</em>（statelessness）”（译者注：也可译为 “免记忆性”）。</p><p>随着我更加理解每一部分在协议中扮演的角色，我开始强烈赞赏这种设计出这种多层结构的聪明。</p><p>Roasbeef 在编写 BIP 上还有许多工作要做，尤其是在选择每一棵树的深度以及子树的层数上，还有 Winternitz 签名的体积以及 FORS 的参数。签名的体积和生成签名所需的哈希次数之间存在两难。要先在计算量和链上踪迹之间找出正确的平衡，才能发布正式的 BIP 。</p><p>那么还剩最后一个问题：</p><p>迁移到 SPHINCS+ 是否意味着比特币成了一种金字塔骗局（pyramid-scheme）？很难定义，但看起来的确是这样。</p><p>（译者注：这里是一语双关的玩笑，因为 “pyramid-scheme” 既可以表示 “金字塔骗局” ，又可以指代 SPHINCS+ 的 “金字塔结构”。）</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>感谢 Jonas Nick 和 Olaoluwa Osuntokun 在解释 SPHINCS+ 公钥复用和参数调整上的帮助。</p><h2 id="进阶阅读"><a href="#进阶阅读" class="headerlink" title="进阶阅读"></a>进阶阅读</h2><p>想要更加深入？以下是一些很好的材料，也是我撰写这篇文章的资料来源：</p><ul><li>Laolu 在 7 月 17 日的 Presidio Bitcoin 比特币与量子计算会议上的<a href="https://drive.google.com/file/d/12UlzfGvG09IwvzWscL2FT8CoewGBWlGD/view">演讲幻灯片</a></li><li><a href="https://sphere10.com/articles/cryptography/pqc/wots">Sphere10 的 Winternitz 签名讲解</a>，让我掌握了后量子签名的基础知识</li><li>来自软件开发者 Ethan Rahn 的一篇<a href="https://er4hn.info/blog/2023.12.16-sphincs_plus-step-by-step/">深度讲解博客</a>，包含了很好的示意图，以及一些后量子签名的开发历史</li><li><a href="https://csrc.nist.gov/csrc/media/Presentations/2022/crclub-2022-10-19a/20221020-crypto-club-kelsey-slides-MD-hash-sigs.pdf">SPHINCS+</a> 的极佳深度讲解，来自 NIST 的 John Kelsey。是我看过最好的详尽解释，但显然被埋没了。</li></ul><p>（完）</p>]]></content>
    
    
    <summary type="html">SPHINCS+ 是用多层的后量子签名小工具开发出来的</summary>
    
    
    
    
    <category term="哈希签名" scheme="https://www.btcstudy.org/tags/%E5%93%88%E5%B8%8C%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>hArk 和 Erk：使用 CTV 和 CSFS 改进 Ark 协议</title>
    <link href="https://www.btcstudy.org/2025/09/24/hark-erk-evolving-the-ark-protocol-using-ctv-and-csfs/"/>
    <id>https://www.btcstudy.org/2025/09/24/hark-erk-evolving-the-ark-protocol-using-ctv-and-csfs/</id>
    <published>2025-09-24T07:45:32.000Z</published>
    <updated>2025-10-31T04:07:54.112Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Steven Roose</em></p><p><em>来源：<a href="https://roose.io/blog/hark-erk-evolving-the-ark-protocol-using-ctv-and-csfs/">https://roose.io/blog/hark-erk-evolving-the-ark-protocol-using-ctv-and-csfs/</a></em></p></blockquote><p>（本文同时发布在 <a href="https://delvingbitcoin.org/t/evolving-the-ark-protocol-using-ctv-and-csfs/1602/1">Delving Bitcoin 论坛</a>中。）</p><p>上周在 OP_NEXT 论坛上，我提出了 Ark 协议的一种新变种，叫做 “Erk”，它消除了参与回合的用户的所有交互需要。在本文中，Erik De Smedt 和我希望明确 Erk 以及利用 CTV（<a href="https://github.com/bitcoin/bips/blob/c5220f8c3b43821efa3841a6c5e90af9ce5519e8/bip-0119.mediawiki"><code>OP_CHECKTEMPLATEVERIFY</code></a>）和 CSFS（<a href="https://github.com/bitcoin/bips/blob/c5220f8c3b43821efa3841a6c5e90af9ce5519e8/bip-0348.md"><code>OP_CHECKSIGFROMSTACK</code></a>）可以在 Ark 上作出的其它优化。</p><p>简单来说，我们得出了 Ark 的 <em><strong>两种</strong></em> 相互竞争的协议，它们具有如下特性：</p><ul><li>“Erk”：<ul><li>参与回合的时候不需要用户交互</li><li>离线刷新（服务商可以为用户刷新）</li><li>永续离线刷新（服务商可以为一个用户不断刷新，没有期限）</li><li>在单输入、单输出的 VTXO 上效果最好</li><li>需要 CTV + CSFS</li></ul></li><li>“hArk”：<ul><li>参与回合的时候不需要用户交互</li><li>非常高效，哪怕输入有多个</li><li>无法实现离线刷新（至少到目前为止）</li><li>只需要 CTV</li></ul></li></ul><h2 id="Ark-简介"><a href="#Ark-简介" class="headerlink" title="Ark 简介"></a>Ark 简介</h2><p>我们先要总结一下现有的基于 CTV 的 Ark 协议以及基于 MuSig 的 clArk 协议，然后是关于新的 Erk 和 hArk 变种的详细解释。</p><p>首先，我们来总结一下会在下文的解释中用到的核心概念。</p><p>我们将 Ark 服务商的公钥记为 $S$，而用户的公钥则记为 $A, B, …$ </p><p>Ark 协议的基础砖块是交易树，它让多个用户能够共享一个链上的 UTXO 。下面的骨架图展示了一棵交易树，其中 Alice（$A$）拥有 4 BTC、Bob（$B$）拥有 3 BTC、Carol（$C$）拥有 2 BTC，而 Dave（$D$）拥有 1 BTC 。Ark 是一套离链的协议，所以，在乐观情形下，整个交易树只有注资交易（FUNDING）会得到区块链确认。</p><pre><code>(每个方框都是一笔比特币交易)                 +------------+                 |  FUNDING   |                 +------------+                       | 10₿                 +-----+------+                 |   NODE 1   |                  +-----+------+             +---------┴--------------+          7₿ |                        | 3₿        +----+----+              +----+----+        | NODE 2  |              | NODE 3  |        +----+----+              +----+----+             |                        |       +-----+-----+            +-----+-----+    4₿ |        3₿ |       2₿   |           | 1₿    +---+----+  +---+----+   +---+----+  +---+----+    | EXIT A |  | EXIT B |   | EXIT C |  | EXIT D |    +--------+  +--------+   +--------+  +--------+</code></pre><p>在这套装置中，Alice 可以通过广播她所在的交易树分支，来执行单方面退出、领取她的资金。她的分支由这四笔交易组成：<em>FUNDING</em>、<em>NODE 1</em>、<em>NODE 2</em> 和 <em>EXIT A</em> 。在 Alice 知道这些交易（以及让它们变成有效交易所需的见证数据）并且可以用公钥 $A$ 来花费它们的时候，我们就说 Alice 拥有一个 VTXO 。</p><p>每一个 Ark VTXO 都有一个过期时间点，在这个过期时间点之前，这个 VTXO 必须要么被花掉、要么刷新（否则用户就会失去其中的价值）。而 “刷新一个 VTXO”，本质上意味着将一个 VTXO 换成一个新的（刷新时间延后了的）VTXO。刷新操作在 Ark 的 “回合” 中实现，也就是是 Ark 服务商和自己的用户的一个在线交互流程。</p><p>在过期之后，服务商就可以清扫整个交易树中的价值。在理想情况下，服务商可以直接清扫（花费）注资交易，但如果某个（某些）用户执行过单方面退出，服务商就只能清扫尚未有用户退出的所有剩余节点中的价值。</p><h3 id="Arkoor"><a href="#Arkoor" class="headerlink" title="Arkoor"></a>Arkoor</h3><p>如果 Alice 持有一个 VTXO、想给 Bob 支付，她可以创建一笔新的链下交易（在类型上称为 “arkoor 交易”）、花费她自己的 VTXO（也即她的退出交易的输出）、为 Bob 创建一个新的 VTXO 。Bob 可以存储构成 Alice 的 VTXO 的所有交易，再加上 Alice 创建的这笔 arkoot 交易，构成他的新的 <em>arkoor VTXO</em> 。</p><p>（译者注：“Arkoor” 是 “Ark out-of-round” 的缩写，顾名思义，是在回合之外执行的。）</p><h3 id="输出的花费条件"><a href="#输出的花费条件" class="headerlink" title="输出的花费条件"></a>输出的花费条件</h3><p>我们将用在 Ark 协议中的输出花费条件分为三种：</p><ul><li><em><strong>节点交易花费条件</strong></em>：用在所有节点交易（也包括注资交易）中的花费条件</li><li><em><strong>叶子条件</strong></em>：用在最后一笔节点交易的输出中的花费条件，支付给一笔退出交易</li><li><em><strong>退出条件</strong></em>：用在退出交易中的花费条件；退出交易是整个交易树的叶子，可被用户用来执行单方面退出</li></ul><p>从逻辑上来说，你可以将这些三种花费条件视为前后相接的。下图指明了上图所示的不同交易所用到的输出花费条件。退出交易后面可以跟随 arkoor 交易或者弃权交易。</p><pre><code>FUNDING+-------------+-----+| node policy | 10₿ |+-------------+-----+NODE 1+-------------+-----+| node policy |  7₿ |+-------------+-----+| node policy |  3₿ |+-------------+-----+NODE 2+-------------+-----+| leaf policy |  4₿ |+-------------+-----+| leaf policy |  3₿ |+-------------+-----+EXIT A+-------------+-----+| exit policy |  4₿ |+-------------+-----+</code></pre><p>所有的变种都具有以下共性：</p><ul><li><p>每一个回合都会在一个 <em><strong>过期区块高度</strong></em> $T_{exp}$ ，在这个区块之后，这个回合（所对应的交易树）中的资金就可以被 Ark 服务商密钥清扫。</p></li><li><p>在我们的构造中，所有的交易都是 0 手续费的，都有一个手续费锚点输出。在现实中，手续费可以是非零值，如果服务商倾向于给用户补贴一部分退出成本的话。带有交易费不是整个构造能够工作的必要条件，但带有手续费锚点输出则是。（译者注：这个锚点输出允许用户通过 “CPFP” 方法来追加手续费）。</p></li><li><p><em>节点花费条件</em> 和 <em>叶子花费条件</em> 的功能都是延续交易树的分支，并带有一个替代性的花费路径，让服务商可以在过期之后清扫资金。</p></li><li><p>对用户来说，活性要求是指，他们要在自己的 VTXO 过期之前（也即 $T_{exp}$ 之前）的一段时间里回到互联网上，要么刷新自己的 VTXO ，要么执行单方面退出（如果服务商和自己的 arkoor VTXO 的任何一位前任所有权人行为不轨的话）。</p></li><li><p>一旦退出交易得到区块确认，过期机制就失效了，资金会进入 <em>退出条件</em>。退出条件有两个主要功能以及对应的 <em>条款</em>：</p><ul><li><em><strong>支付条款</strong></em>，给用户和服务商提供了一种合作式创建即时花费的方法（用于创建 arkoor 交易和弃权交易）</li><li><em><strong>退出条款</strong></em>，用户提供了一种访问这些资金的方法，如果 TA 从未用这个 VTXO 创建过即时花费</li></ul><p><em>退出条件</em> 的最初设计在 <em>退出条款</em> 中使用了一个相对时间锁，但我们的更新设计结合了一个绝对时间锁 $T_{exp}$ 和一个相对时间锁 $\Delta t$ 。</p><ul><li>这个相对时间锁保证了，<em>支付条款</em> 优先于 <em>退出条款</em>。</li><li>这个绝对时间锁保证了，这个 VTXO 的任何后续的所有权人（任何可能通过使用 <em>支付条款</em> 的 arkoor 交易收到这个 VTXO 的人），除了在 $T_{exp}$ 之前一段时间上线之外，没有别的活性要求</li></ul></li></ul><h2 id="细说部分变种"><a href="#细说部分变种" class="headerlink" title="细说部分变种"></a>细说部分变种</h2><h3 id="Ark"><a href="#Ark" class="headerlink" title="Ark"></a>Ark</h3><p>最初版本的 Ark 协议基于 CTV 。我们对这个想法的最新迭代也一样。</p><p><em>节点花费条件</em> 和 <em>退出条件</em> 都使用了 <code>OP_CTV</code> 来承诺下一笔交易。</p><ul><li><em>节点条件</em> 和 <em>叶子条件</em>：$CTV\ or\ (S + T_{exp})$</li><li><em>退出条件</em>：$(A + S)\ or\ (A + T_{exp} + \Delta t)$</li></ul><p>在回合中（刷新 VTXO 的时候），用户需要签名一笔 <em>弃权交易</em>，将自己的 VTXO交给服务商，并且，该弃权交易的生效条件是下一回合的正确开启。一个 <em>连接器</em> 是下一个回合的注资交易的一个专用后代交易，它会被用作 <em>弃权交易</em> 的一个输出，从而保证，服务商只有在下一回合（的注资交易）成功得到确认时，才能强制执行这个弃权交易。一旦所有用户都为自己的 VTXO 签名了弃权交易，服务商就可以签名注资交易、并广播到比特币网络中。</p><p>弃权交易有两个输入：</p><ul><li>退出交易的输出，使用 <em>退出花费条件</em> 的 <em>支付条款</em></li><li>连接器输入，来自新回合的注资交易的一连串后代交易的一个输出</li></ul><p>弃权交易只有一个输出，就是将所有资金发送给服务商。</p><pre><code>forfeit tx:| inputs    | outputs | +===========+=========+| exit tx   |       S | +-----------+---------+| connector |         | +-----------+---------+</code></pre><h3 id="clArk，“无需限制条款的-Ark”"><a href="#clArk，“无需限制条款的-Ark”" class="headerlink" title="clArk，“无需限制条款的 Ark”"></a>clArk，“无需限制条款的 Ark”</h3><p>clArk 与 Ark 非常相似，只是在交易树上使用了递归的多签名装置。每一个 <em>节点条件</em> 都包含了一个多签名装置，使用该节点下的所有叶子的公钥。</p><ul><li><em>节点条件</em>：$(A + B + C + … + S)\ or\ (S + T_{exp})$</li><li><em>叶子条件</em>：$(A + S) or\ (S + T_{exp})$</li><li><em>退出条件</em>：$(A + S)\ or\ (A + T_{exp} + \Delta t)$</li></ul><p>回合机制是一样的，也使用了 <em>连接器</em>。唯一的区别在于，在所有客户端签名（自己所在的）交易树的分支时，需要一个额外的阶段。</p><h3 id="Erk，“Erik-的-Ark”"><a href="#Erk，“Erik-的-Ark”" class="headerlink" title="Erk，“Erik 的 Ark”"></a>Erk，“Erik 的 Ark”</h3><p>我在 OP_NEXT 大会上演示 Erk 之后，我们又作了一些额外的升级。</p><p>Erk 的花费条件跟 Ark 中的一模一样，但我们让签名变成 <em><strong>可以重新绑定的</strong></em>（“可以重新绑定的签名” 是使用 APO 语义的签名，意思是他们不承诺具体的 UTXO 输入，所以可以用来花费任何包含相同公钥的输出）。我们可以使用 CTV + CSFS 来实现可以重新绑定的签名。</p><ul><li><em>节点条件</em> 和 <em>叶子条件</em>：$CTV\ or\ (S + T_{exp})$</li><li><em>退出条件</em>：$(A + S)\ or\ (A + T_{exp} + \Delta t)$</li></ul><p><em>退出条件</em> 中的 $A + S$，就是我们要使用重绑定签名的地方。</p><p>Erk 的核心和基本原则体现在下列交易中，我们称为 <em>退款交易</em>。</p><pre><code>refund tx:| inputs             |        outputs | +====================+================+| old exit tx for A  | exit policy A&#39; | +--------------------+----------------+| new exit tx for A&#39; |              S | +--------------------+----------------+</code></pre><p>Erk 回合没有用户交互（我们把 “用户交互” 定义为 “所有用户同时采取行动”）。用户通过发送一个新的公钥（$A’$）以及一个签过名的退款交易给服务商，来参与一个回合。注意，退款交易的一个输入是用当前的公钥 $A$ 来签名的，而另一个输入则是用新的公钥 $A’$ 来签名的。</p><p>这时候，服务商可以安全地创建一棵新的 VTXO 树、为用户发行相同的 VTXO（减去一些手续费）。这个新的 VTXO 有一个 <em>退出条件</em>，使用的新公钥 $A’$。</p><p>用户可以随时安全地签名这笔退款交易，因为他们依然能从交易的其中一个输出中收到自己的钱。所以如果这笔交易被服务商恶意使用，用户并不会丢失任何资金。</p><p>服务商也可以在收到这样的签过名的退款交易之后创建回合，因为，如果用户尝试（恶意地）退出原本的旧 VTXO，服务商可以揭晓这个新 VTXO，然后同时花费两者、拿走用户无权拥有的东西。</p><p><strong>Arkoor</strong></p><p>在 Erk 变种中实现 arkoor 交易需要格外小心。设想，如果用户 Alice 把自己的新 VTXO 发送给了 Bob（使用一笔 arkoor 交易），然后又恶意的尝试退出旧的 VTXO 。服务商将被迫广播新的 VTXO 并使用退款交易，这就把 Bob 的 arkoor VTXO 作废掉了。</p><p>然而，因为作为交易树的叶子的退出交易，跟退款交易拥有相同的输出花费条件（对公钥 $A’$ 来说），那么 Bob 可以要求 Alice 提供可以重新绑定的 arkoor 签名：这个签名在这两种输出上都可以使用。（注意，同一时间，只有其中一个才能存在，因为退款交易是退出交易的子交易。）</p><p>这一设计让 arkoor 交易在 Erk 上也可以实现，前提是每一个新的 VTXO 都来自一个 VTXO 输入。当我们尝试将这种设计推广到多个 VTXO 输入被合并为一个 VTXO 输出的情形中时，arkoor 构造就会无法工作。</p><p><strong>离线刷新</strong></p><p>现在，设想如果用户已经预先为自己的 VTXO 签名了一笔退款交易（就在这个 VTXO 刚刚创建好的时候）、把这个签名交给了服务商，然后就离线了。这意味着，这个服务商可以随时安全地重新发行这个 VTXO，只要持有这笔退款交易，就不怕用户同时领取这两个 VTXO 。这意味着，即使用户放弃了手动刷新，服务商也可以自动帮助 TA 。也可以让瞭望塔来监控这个 Ark，并在服务商没有帮助刷新用户的 VTXO 时通知这个用户。</p><p>（译者注：“瞭望塔” 指的是能够监控比特币区块链并代替客户对其中发生的事件作出响应的互联网服务。）</p><p>此外，设想第一次刷新将公钥 $A$ 变更为 $A’$，Alice 也可以预先为未来的 VTXO $A’$ 签名一笔退款交易，从而将公钥变更为 $A’’$。实际上，Alice 可以预先签名任意次数的刷新操作，每一次都将资金转入一个新的公钥（还可以每一次都减去一些数额，作为给服务商的服务费）。这样一来，一个服务商可以不断刷新一个 VTXO，用户不需要回到互联网上，除非一个瞭望塔提醒 TA 服务商并没有遵守约定。</p><p>也许一个恶意的服务商可以尝试迅速地应用所有这些退款交易，从而领走所有的服务费（请注意，这不一定是经济的，因为他需要为每一笔交易支付挖矿手续费）。可以通过在每一笔退款交易中放置绝对时间锁来避免这一点：服务商只能在根据预计的回合时间计算出来的未来时间点之后使用相应的退款交易。）</p><h3 id="hArk，“哈希锁-Ark”"><a href="#hArk，“哈希锁-Ark”" class="headerlink" title="hArk，“哈希锁 Ark”"></a>hArk，“哈希锁 Ark”</h3><p>Erk 看起来非常强大（尽管我们放弃了 “aArk” 这个可能的代号），但依然有两个主要缺点：</p><ul><li>服务商为了 “报复” 一个恶意退出操作，必须揭晓新 VTXO 所在的交易树分支。这在 “入场 VTXO” —— 用户自己在移动资金到一个 Ark 中时创建的 VTXO） —— 上问题尤其突出。入场 VTXO 只由一笔注资交易和一笔退出交易构成（该注资交易的输出使用 <em>叶子花费条件</em>）。这意味着用户尝试恶意退出的代价是很低的，而服务商要报复的代价则可能是很高的。</li><li>Erk 只能支持单 VTXO 输入的刷新。</li></ul><p>hArk 并不是 Erk 的变种，而是跟 Erk 完全不同的 Ark 变种。它的回合机制也不要求任何用户交互，它是链上踪迹最小化的，而且完美适配多 VTXO 输入的情形。</p><p>在 hArk 中，<em>叶子花费条件</em> 与 <em>节点花费条件</em> 不同，在于前者要求知道一个秘密值。</p><ul><li><em>节点条件</em>：$CTV\ or\ (S + T_{exp})$</li><li><em>叶子条件</em>：概念上是 $(CTV + secret) or\ (S + T_{exp})$（$secret$ 即所要求的秘密值），但另类的 $(A + S + secret tweak) or\ (S + T_{exp})$ 可以使用 Taproot 密钥路径花费，所以更加高效</li><li><em>退出条件</em>：$(A + S)\ or\ (A + T_{exp} + \Delta t)$</li></ul><p>在 hArk 的回合中，用户提交自己希望刷新的 VTXO 输出。服务商为树上的每一个新 VTXO 创建一个秘密值。因为一开始只有服务商才知道这个秘密值，所以 TA 可以安全地为回合（交易树）注资。一开始，没有任何一个新 VTXO 是能被用户访问的，因为所有的秘密值都还是保密的。</p><p>在回合注资交易得到区块确认之后，用户再签名一笔 <em>弃权交易</em>。这笔弃权交易将跟 Ark 和 clArk 中弃权交易不同，它让服务商可以通过揭晓秘密值来领取 VTXO 中的价值。</p><p>这笔弃权交易的输出花费条件是 $(S + secret)\ or\ (A + \Delta t)$ 。粗略地说，秘密值的检查可以通过使用简单的哈希锁来实现，但也可以在 Taproot 的密钥花费路径（Schnorr 签名）中使用 “适配器签名” 来实现，可以节约一些字节。</p><pre><code>forfeit tx:| inputs  |    outputs | +=========+============+| exit tx | S + secret ||         | or  A + Δt |+---------+------------+</code></pre><p>在用户签名这笔弃权交易之后，服务商再告诉用户这个秘密值。这样一来，用户就能访问新的 VTXO 了。</p><p>如果用户签名这笔弃权交易之后，这个服务商拒绝交出相关的秘密值，那么用户将被迫尝试单方面退出，最终，这要么将钱交回给用户，要么服务商再链上揭晓这个秘密值。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>如果 CTV 可用，我们就能在 Ark 回合机制中完全消除所有用户交互。VTXO 刷新将变成一个完全异步的过程，用户可以自由登记，服务商可以独立地发行新的 VTXO，用户日后回到互联网上，就可以完成整个流程。</p><p>如果 CTV 之上还有 CSFS 可用，那么离线刷新甚至可以递归使用。这让服务商可以无需用户参与、自动刷新 VTXO，并且用户可以将监控正确动作的任务委托给第三方（瞭望塔）。</p><p>Erk 和 hArk 可以同时使用。用户可以总是预先签名 Erk 退款交易，以防自己不能及时上线，但依然使用 hArk 方法手动参与回合，比如需要合并多个 VTXO 为一个的时候，或是他们希望尽快刷新的时候。</p><p>我们想象，上述方案可以极大地强化 Ark 的用户体验、Ark 在移动端场景中的可用性，以及 Ark 服务商可以提供的功能性。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">现有的基于 CTV 的 Ark 协议以及基于 MuSig 的 clArk 协议，然后是关于新的 Erk 和 hArk 变种的详细解释</summary>
    
    
    
    
    <category term="Ark" scheme="https://www.btcstudy.org/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>什么是 “Hashpool”？</title>
    <link href="https://www.btcstudy.org/2025/09/23/what-is-hashpool-by-vnprc/"/>
    <id>https://www.btcstudy.org/2025/09/23/what-is-hashpool-by-vnprc/</id>
    <published>2025-09-23T04:18:47.000Z</published>
    <updated>2025-10-31T04:07:54.154Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：vnprc</em></p><p><em>来源：<a href="https://blog.cashu.space/what-is-hashpool/">https://blog.cashu.space/what-is-hashpool/</a></em></p></blockquote><p><img src="/../images/what-is-hashpool-by-vnprc/hashpool-head.png" alt="hashpool-head"></p><p>“Hashpool” 是一种无账户的矿池，使用 ecash 来代表挖矿份额（shares）。与现有的矿池协议不同，Hashpool 利用密码学掩盖了用户的身份，并创建了一种自由市场来交易挖矿份额。</p><h2 id="矿池的问题"><a href="#矿池的问题" class="headerlink" title="矿池的问题"></a>矿池的问题</h2><p>在比特币诞生的时候，每个人都能在自己的笔记本电脑上通过运行比特币软件来挖矿。在最近 15 年间，事情发生了很大变化。矿工需要购买专用的硬件（ASIC 矿机）、加入矿池；而矿池又是为带有几千台 ASIC 矿池、7 乘 24 小时运营的大矿场而优化的。这种环境对刚刚起步的小矿工极其不利。</p><h3 id="最小取款额度和入场费"><a href="#最小取款额度和入场费" class="headerlink" title="最小取款额度和入场费"></a>最小取款额度和入场费</h3><p>所有的矿池都有最小的取款额度门槛，这意味着，如果你想从一台最小型的 ASIC 矿机开始挖矿，你要挖好几年，才能在链上取回第一笔挖矿收入。</p><p>一些矿池为闪电取款提供更低的取款门槛，但使用闪电网络也有自身的难题。如果你使用一个托管型闪电钱包，你会交出所有的交易隐私权，而且你的资金将总是处在被托管商盗走的风险中。</p><p>如果你决定使用一款自主保管的钱包，可以消除上述跑路风险，但需要付出应付技术复杂性的精力。你需要开启一条闪电通道，然后才能使用自己的钱包，这又需要付出链上手续费。如果你已经有一些比特币了，那么你可以跟另一个闪电节点购买一条通道；为此，你需要付出一笔入场费，跟你要求的通道容量成正比，对于希望从零起步的新用户来说不是愉快的经历。</p><h3 id="挖矿隐私性"><a href="#挖矿隐私性" class="headerlink" title="挖矿隐私性"></a>挖矿隐私性</h3><p>今天的矿池协议在隐私性上也很糟糕。大部分矿池都要求你完成 KYC，然后才能创建一个账户。即使是不要求 KYC 的矿池，运营者也直到你的三项关键信息：你的 IP 地址（很容易关联到你的身份）、你的哈希率，以及对你的比特币支付。结果是，私密地挖矿，或者从小规模开始，变成了一个差劲的选择。</p><h2 id="Hashpool-改进了什么？"><a href="#Hashpool-改进了什么？" class="headerlink" title="Hashpool 改进了什么？"></a>Hashpool 改进了什么？</h2><p>Hashpool 使用一种叫做 “ecash” 的隐私技术来解决这些问题。Ecash 并不是一个新想法，它在 1982 年就出现了，但在 1990 年代和 2000 年代都没有获得成功。在比特币作为一种原生的电子健全货币出现之后，ecash 才迎来复兴。</p><h3 id="Ecash-的工作原理"><a href="#Ecash-的工作原理" class="headerlink" title="Ecash 的工作原理"></a>Ecash 的工作原理</h3><p>一个 ecash token 是由一个托管商（称作 “铸币厂”）发行的一个不记名的资产。铸币厂就像电子银行，而 ecash 可以理解成一种纸质的银行票据。一个 ecash token 就是一张 IOU（借据），标的是该铸币厂托管的某种资产。现代的 ecash 铸币厂运行在比特币本位上，并且可以发送和接收闪电支付。这让它们可以跟任何交易所、钱包以及闪电网络上的商家互操作。</p><p>支撑 ecash 的秘密武器是一种叫做 “盲签名（blind signing）” 的密码学技术。盲签名有点像是复写纸（carbon paper）。如果你在两页纸之间夹一张复写纸，那么你写在上面这张纸上的东西也会自动转印到下面那张纸上。设想你要写一封信，你在写好的信上放一页复写纸，然后将两张纸都塞进信封，封好。现在，你把信封拿到银行取，让一位银行经理在上面签一个名（但不让 TA 拆开）。当你再把信封打开的时候，信纸上就留下了一个来自银行经理的有效签名，但那个银行经理对信的内容可是一无所知。他们一无所知地签名了你在信纸上的信息。</p><p><img src="/../images/what-is-hashpool-by-vnprc/sig-steps" alt="image-20250923105822317"></p><p>Ecash token 的工作原理就是让铸币厂在用户存入一些资产后盲目地签名一个秘密值。然后，用户私密地解开这个秘密值和签名。感谢密码学，这个解除遮蔽的签名可以由任何知道这个铸币厂的公钥的人验证。成对的解除遮蔽的秘密值和接触遮蔽的签名，就组成了一个 ecash token 。就跟纸币一样，ecash 可以自由转移，不需要让铸币厂知道用户的身份。</p><h3 id="隐私性"><a href="#隐私性" class="headerlink" title="隐私性"></a>隐私性</h3><p>Hashpool 使用 ecash 来实现无需账户的矿池。矿池不再需要维护一个数据库、跟踪每一个用户账户的余额，只需要为每一个挖矿份额发行 ecash token，然后跟踪自己发行了多少 ecash token 就行了。这意味着不需要知道谁在挖矿、谁取走了挖矿奖励。</p><p>Hashpool 也是为小型矿池的运营者而开发的。默认情况下它就不需要用户登录，也不需要提交 KYC 信息。但是否要鉴别用户还是取决于运营者自己。只要世界上还有至少一个Nimitz的 hashpool 实例，任何人都可以匿名挖矿。这不酷吗？</p><h3 id="最小取款额度门槛"><a href="#最小取款额度门槛" class="headerlink" title="最小取款额度门槛"></a>最小取款额度门槛</h3><p>因为 ecash 的效率是如此之高，所以它没有最低支付门槛。你可以发送一聪到一个全新的钱包中，就像发送 100 万聪一样容易。只要你的 hashpool 实例支持 ecash 支付，就没有入场费。这意味着 hashpool 可以高效地服务最小体量的矿工。Bitaxe 的粉丝们欢呼吧！（译者注：Bitaxe 是一种体积极小的家用挖矿设备。）</p><h3 id="eHash"><a href="#eHash" class="headerlink" title="eHash"></a>eHash</h3><p>挖矿份额是比特币的前身，是挖掘新比特币的过程中的必要组成部分。如果把比特币比作喷气燃料，那么挖矿份额就是原油。它们是可以转化为有价值产品的原料。因此，Hashpool 并不发行比特币支持的 ecash 来交换挖矿份额，相反，它使用一种新的资产，叫做 “eHash”。Ehash token 是由工作量证明（而非比特币）来支撑的 ecash token 。</p><h2 id="挖矿行业的未来"><a href="#挖矿行业的未来" class="headerlink" title="挖矿行业的未来"></a>挖矿行业的未来</h2><p>Ehash 需要一些时间来积累比特币价值。在 eHash token 发行的一段时间之后，它获得该矿池（在这段时间内）找到的每一个比特币区块的价值。一旦这个时间窗口过去，这个 eHash token 就停止积累价值，可以赎回比特币，不论是通过闪电支付还是链上交易，还是使用 ecash 。</p><p>Ehash 可以自由交换，但它的价格并不是固定的。每一个 token 都代表着对未来将发放的一些资产的请求权。这让 ecash 成为一种期货工具。挖矿期货是非常有用的，原因有两个：它让矿工可以通过（在完全成熟之前）卖出自己的份额来对冲风险，也让买家可以买到按风险打折的比特币。</p><p>在许多国家，期货市场是普通人无缘的。使用 hashpool，任何地方的任何人都可以按任意的操作规模获得比特币区块奖励的期货。感谢 ecash 的效率和隐私性，这些期货工具将迅速流动，而且自由（就像词语一样）。起飞！</p><h2 id="但-Ecash-不是托管的吗？"><a href="#但-Ecash-不是托管的吗？" class="headerlink" title="但 Ecash 不是托管的吗？"></a>但 Ecash 不是托管的吗？</h2><p>ecash 所面对的来自比特币人的最常见的批评就是，它是一个托管系统。这当然是对的。比特币的一个标识性属性之一就是它是免信任的、自我保管的；使用比特币你不需要得到别人的许可。跟比特币不一样，ecash 需要你信任你使用的铸币厂。</p><p>但这在现实中意味着什么，则非常简单：*<strong>不要</strong>在一个 ecash 铸币厂中存储你的毕生积蓄。*你应该把这些聪放在链上，用离线的冷存储来保管私钥。Ecash 就像现金，只要钱包里有足以覆盖日常支出的数量就够了。</p><h2 id="梦幻团队"><a href="#梦幻团队" class="headerlink" title="梦幻团队"></a>梦幻团队</h2><p>我喜欢从三个角度描述电子货币：免信任性、隐私性，以及可验证性。比特币在免信任性和可验证性上非常强劲。我们还没发现更容易、更精确验证的别种货币。除了黄金这样的大宗商品，也没有别的东西像比特币那么免信任。在这两种指标上，比特币无与伦比。但因为区块链的特性，比特币的隐私性相当一般。</p><p>世界上的任何都可以使用区块链浏览器网站来观察比特币的流动。一旦某个比特币地址被盯上，其所有的交易历史和未来交易都可能被监控，除非地址的主人主动采取措施来重获隐私性，比如 coinjoin、coin swap 或其它隐私技术。这是中本聪在创造比特币的时候作出的取舍。</p><p>Ecash 则相反，牺牲免信任性，但加强隐私性。密码朋克们也一直在开发让铸币厂完全可验证的协议，叫做 “债务证据（Proof of Liabilities）”，当前还在开发中。感谢盲签名，ecash 在理论上拥有完美的隐私性。与比特币不同，ecash 没有交易图，所以甚至连铸币厂也没法将用户间的支付关联起来。</p><p><img src="/../images/what-is-hashpool-by-vnprc/bitcoin-vs-ecash" alt="image-20250923120455148"></p><p>现实中，用户可以自由交换 ecash 和比特币，利用它们各自的优势、避开它们的短板。这就是 ecash 何以是比特币的一个梦幻模块、它何以迎来复兴的原因。这两个家伙，是梦幻团队啊！</p><h2 id="更好的托管商"><a href="#更好的托管商" class="headerlink" title="更好的托管商"></a>更好的托管商</h2><p>ecash 铸币厂是最好的那种托管商：尊重隐私的、没有账户的托管商。这是对基于账户的托管商的一个巨大改进，因为它意味着铸币厂不能选择性拒绝服务。所有的矿池都天然是托管服务。而 Hashpool 让矿池可以成为最好的那种托管商：隐私的、可验证的托管商。</p><p>Hashpool 应该处在开发的初步阶段，我们渴望得到你的帮助！如果你希望做些事情，就来联系我们！</p><p>（完）</p>]]></content>
    
    
    <summary type="html">ecash 铸币厂是最好的那种托管商</summary>
    
    
    
    
    <category term="Ecash" scheme="https://www.btcstudy.org/tags/Ecash/"/>
    
    <category term="矿池" scheme="https://www.btcstudy.org/tags/%E7%9F%BF%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Miniscript 与可编程的比特币</title>
    <link href="https://www.btcstudy.org/2025/09/22/miniscript-programmable-bitcoin-by-nunchuk/"/>
    <id>https://www.btcstudy.org/2025/09/22/miniscript-programmable-bitcoin-by-nunchuk/</id>
    <published>2025-09-22T04:26:55.000Z</published>
    <updated>2025-10-31T04:07:54.125Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：nunchuk</em></p><p><em>来源：<a href="https://nunchuk.io/blog/miniscript-programmable-bitcoin">https://nunchuk.io/blog/miniscript-programmable-bitcoin</a></em></p></blockquote><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/miniscript_announcement_blog_header.webp" alt="miniscript_announcement_blog_header"></p><p>比特币带来了可编程的货币，但创建复杂的花费规则一直是困难的、有风险的，也难以协调。今天，我们要改变这一切。</p><p>我们将在 Nunchuk 钱包中推出<strong>通用的 Miniscript 特性</strong>，让每一个人都能创建适合其真实需要的钱包，比如带有时间锁的继承规划钱包、带有分级许可和灾备的公司财库、非托管的安全保管，以及链上踪迹最小化的多方钱包。这一切都来自一款友好的、加密的钱包。</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li><strong>Miniscript</strong>  将比特币内置的规则（签名、时间锁、哈希锁，等等）转化为安全、可组合的砖块。</li><li><strong>Nunchuk 中的通用 Miniscript 特性</strong>：不再只是集中预先设定好的脚本。你可以创建符合标准的比特币花费条款的任何 Miniscript 花费条款。</li><li><strong>团体钱包也可使用 Miniscript</strong>：安全地提出、创建和操作集体的 Miniscript 钱包。在创建好钱包之后，使用内置的聊天功能来协作，整个流程是端到端加密的（E2EE）。</li><li><strong>可选 Taproot 和 MuSig2</strong>：Taproot 可以将未使用的花费条件隐藏起来。MuSig2 可以将多个签名人聚合成一个结合密钥（不论放在密钥花费路径中，还是放在一个脚本分支中），从而提高隐私性和效率。</li><li><strong>当前的硬件签名器支持</strong>：<ul><li><strong>支持原生的隔离见证 Miniscript</strong>：Coldcard、Tapsigner、Blockstream Jade、Ledger、Specter DIY</li><li><strong>Taproot Miniscript</strong>：Coldcard、Ledger、Specter DIY</li><li><strong>MuSig2</strong>：（目前）只支持软件密钥。将随着更多供应商采用 Miniscript&#x2F;Taproot&#x2F;MuSig2 而改善。</li></ul></li></ul><h2 id="Miniscript-意味着什么（大白话）"><a href="#Miniscript-意味着什么（大白话）" class="headerlink" title="Miniscript 意味着什么（大白话）"></a>Miniscript 意味着什么（大白话）</h2><p>比特币一直支持多签名和时间延迟这样的花费规则。但以往，创建和管理使用这些规则的钱包很复杂、容易出错，而且难以验证。</p><p>Miniscript （<a href="https://github.com/bitcoin/bips/blob/master/bip-0379.md">BIP-379</a>）使用一种结构化的方式来表达这些规则，从而钱包软件可以安全地分析和表示它们。<strong>把它想象成乐高积木</strong>：使用签名、时间锁和秘密（哈希锁），你就可以组合出清楚、可靠的条款，而不需要手写脚本。</p><h2 id="Nunchuk-中的新特性"><a href="#Nunchuk-中的新特性" class="headerlink" title="Nunchuk 中的新特性"></a>Nunchuk 中的新特性</h2><h3 id="1-通用的-Miniscript"><a href="#1-通用的-Miniscript" class="headerlink" title="1. 通用的 Miniscript"></a>1. 通用的 Miniscript</h3><p>你不再受制于少量小众的条款。你可以创建任何可以用 Miniscript 来表达、在标准的比特币花费规则可以采用的条款：门限条件；AND&#x2F;OR 逻辑；时间锁；基于哈希的条件。</p><p>使用常见模式的薄板，或者粘贴一个定制的条款（如果你是一个专业的用户）。Nunchuk 会验证这个条款，检查它的正确性和标准型，并清晰地展示最终的结果，然后才允许你存入资金。</p><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/large_miniscript_templates_vs_custom_policy.png" alt="large_miniscript_templates_vs_custom_policy"></p><p style="text-align:center">- Miniscript 模板 vs. 定制条款 -</p><h3 id="2-团体钱包，现已进入-Nunchuk"><a href="#2-团体钱包，现已进入-Nunchuk" class="headerlink" title="2. 团体钱包，现已进入 Nunchuk"></a>2. 团体钱包，现已进入 Nunchuk</h3><p>六个月以前，我们发布了<a href="https://nunchuk.io/blog/group-wallet">端到端加密的团体钱包</a>。从今天开始，团体钱包从一开始就可以使用 Minicript 。</p><p>通过不安全的消息通道（电子邮件、标准的即时通信软件）来协调复杂的保管工作是一个重大风险。Nunchuk 解决了这个问题：任何的个人和设备集合都可以在 Nunchuk 中创建一个协作的 Miniscript 钱包，然后使用内置的加密聊天功能来开展后续的协商，比如支付请求和状态更新。</p><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/large_collaborative_bitcoin_wallets.png" alt="large_collaborative_bitcoin_wallets"></p><p style="text-align:center">- 安全的协作钱包，以及可以定制的 Miniscript 条款 -</p><p>通用的 Miniscript 与协作式的团体钱包，两相结合，让可编程的货币在团队、家庭和组织中变得实用且安全。</p><h3 id="真实世界案例（你现在可以开发出来的东西）"><a href="#真实世界案例（你现在可以开发出来的东西）" class="headerlink" title="真实世界案例（你现在可以开发出来的东西）"></a>真实世界案例（你现在可以开发出来的东西）</h3><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/large_Example_use_cases.png" alt="large_Example_use_cases"></p><p style="text-align:center">- Miniscript 应用案例 -</p><p><strong>A）带有时间锁的机场（设置好就可以忘记的复原方法）</strong></p><p>想法：平日，是个 2-of-3 的多签名钱包；在你离线长达 6 个月之后，一个指定的后备密钥可以找回钱包中的资金。</p><p>意义：减少永久丢失资金的风险，又不会给予任何人立即控制资金的权限。</p><p>工作原理：一个签名门限条件，和一个带有时间锁的复原花费路径。</p><blockquote><p><strong>蜜罐特性（下一次发布）指引</strong>：对于我们的会员，<a href="https://nunchuk.io/individuals">Honey Badger</a> 助手钱包将同时支持<strong>链下</strong>和<strong>链上</strong>的时间锁，用于继承规划。</p></blockquote><p><strong>B）带有分级许可的企业财库</strong></p><p>想法：</p><ul><li>平时：任意两位财务总监加上一个集团控制的签名器（例如 硬件签名模块&#x2F;密钥管理系统）</li><li>高价值支出：任意两位财务总监加上 CFO（首席财务官）</li><li>带有时延的&#x2F;紧急 访问：任意两位财务总监在为期 7 天的时延之后。</li></ul><p>意义：兼顾日常支出的便利性与严格的安全保护措施。</p><p>工作原理：门限&#x2F;AND 条件，加上  OR 分支以及一个可选的时间锁花费分支。团队在操作时候选择相应分支。</p><p><strong>C）为 OTC 交易保留你的控制权</strong></p><p>想法：买方 + 卖方，或者，在时间锁过期后，其中一方 + 仲裁者</p><p>意义：没有托管商，清楚、基于规则的解决方案</p><p>工作原理：OR 逻辑以及一个带有时间锁的后备方案</p><p><strong>D）私人的多方钱包，具有紧凑的链上踪迹</strong></p><p>想法：三个设备共享控制；花费交易可以使用一个聚合公钥，从而签名器的数量不会公开</p><p>意义：实现健壮的安全性，而不会公开内部的管理结构</p><p>工作原理：可选的 Taproot 和 MuSig2 特性。MuSig2 可以将多个签名器聚合成一个公钥；Taproot 可以隐藏没有使用的花费条件（在脚本花费路径中，只有被使用的花费条件才会揭晓）</p><h2 id="隐私和效率（可选）"><a href="#隐私和效率（可选）" class="headerlink" title="隐私和效率（可选）"></a>隐私和效率（可选）</h2><p>你可以在 Nunchuk 中使用原生的隔离见证 Miniscript 。如果你选择更高级的特性，<a href="https://nunchuk.io/blog/taproot-multisig">Taproot</a> 可以在脚本花费时将未使用的条件隐藏起来，而 <a href="https://nunchuk.io/blog/taproot-multisig">MuSig2</a> 可以将多个签名器聚合为一个公钥。聚合后的公钥可以用在密钥花费路径中，也可以用在脚本花费路径中。不管用在哪里，都可以减少链上足迹、加强隐私性。是可选使用的。</p><h2 id="当前的硬件签名器之处以及下一步"><a href="#当前的硬件签名器之处以及下一步" class="headerlink" title="当前的硬件签名器之处以及下一步"></a>当前的硬件签名器之处以及下一步</h2><p><strong>当前支持 Miniscript 的签名器</strong></p><ul><li><strong>支持原生的隔离见证 Miniscript</strong>：Coldcard、Tapsigner、Blockstream Jade、Ledger、Specter DIY</li><li><strong>Taproot Miniscript</strong>：Coldcard、Ledger、Specter DIY</li><li><strong>MuSig2</strong>：只支持软件密钥</li></ul><p><strong>下一步</strong></p><p>随着更多的硬件签名器供应商采用 Miniscript、Taproot 和 MuSig2，上面这个名单会扩充。我们将随着供应商发布兼容的固件和 SDK 而扩充名单。</p><h2 id="如何在-Nunchuk-中使用-Miniscript"><a href="#如何在-Nunchuk-中使用-Miniscript" class="headerlink" title="如何在 Nunchuk 中使用 Miniscript"></a>如何在 Nunchuk 中使用 Miniscript</h2><p>只需要几分钟就能上手。</p><h3 id="单人的-Miniscript-钱包"><a href="#单人的-Miniscript-钱包" class="headerlink" title="单人的 Miniscript 钱包"></a>单人的 Miniscript 钱包</h3><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/large_create_miniscript_wallet_via_timelock.png" alt="large_create_miniscript_wallet_via_timelock"></p><ol><li><p><strong>开始</strong>：创建新的钱包 → Miniscript </p><ul><li><strong>模板</strong>（推荐）：递减的、扩充的，以及灵活的多签名。配置密钥数量、要求的门限条件、时间锁条件和备用花费条件。</li><li><strong>定制条款</strong>（为高级用户准备）：粘贴一个完整的 Miniscript 条款。Nunchuk 会验证它的正确性和标准性，然后向你展示它产生的钱包用法。</li></ul></li><li><p><strong>添加密钥</strong></p><p>连接的硬件签名器，或添加软件密钥</p></li><li><p><strong>校验并创建</strong></p><p>确认条款总结和地址</p></li><li><p><strong>投入资金、测试</strong></p><p>存入小规模的资金到你的新钱包并执行花费测试。</p></li></ol><h3 id="Miniscript-团体钱包"><a href="#Miniscript-团体钱包" class="headerlink" title="Miniscript 团体钱包"></a>Miniscript 团体钱包</h3><p><img src="/../images/miniscript-programmable-bitcoin-by-nunchuk/large_minisciprt_group_wallet.png" alt="large_minisciprt_group_wallet"></p><ol><li><p><strong>开始</strong>：创建新的钱包 → 团体钱包（Group wallet）</p><p>邀请成员或设备。团体通信是加密的。钱包会从一个默认的配置开始（例如，隔离见证原生的 2-of-3 多签名钱包）</p></li><li><p><strong>定制钱包</strong></p><p>打开团体钱包的设定：<strong>Settings → Miniscript → Add Miniscript</strong></p></li><li><p><strong>定制花费条件</strong></p><p>使用一个模板或粘贴一个定制好的条款</p></li><li><p><strong>校验并创建</strong></p><p>所有参与者安全地审核并一起许可最终的条款</p></li><li><p><strong>协调和花费</strong></p><p>使用内置的聊天功能（在钱包创建后之花可以使用），协调后续事项，包括花费请求和状态更新</p></li></ol><h3 id="重要提醒：备份你的钱包配置"><a href="#重要提醒：备份你的钱包配置" class="headerlink" title="重要提醒：备份你的钱包配置"></a>重要提醒：备份你的钱包配置</h3><p>以 “<strong>输出描述符</strong>” 或 “<strong>BSMS</strong>” 格式导出你的钱包配置。BSMS 是一个围绕输出描述符的封装器，包含了额外的元数据（比如，这个钱包的第一个地址），用作一个校验和以及帮助你快速定位一个钱包。</p><p>关于钱包复原、核心的 Miniscript 元素以及其它技术细节，请看我们的互补篇章：<a href="https://nunchuk.io/blog/miniscript101"><strong>Miniscript 101: A Technical Guide</strong></a>（<a href="https://www.btcstudy.org/2025/09/03/miniscript-101-a-technical-guide-by-nunchuk/">中文译本</a>）。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">通用的 Miniscript 钱包和加密团体钱包</summary>
    
    
    
    
    <category term="产品" scheme="https://www.btcstudy.org/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>图解 Ark 协议：流动性</title>
    <link href="https://www.btcstudy.org/2025/09/19/ark-protocol-liquidity-illustration-by-second-docs/"/>
    <id>https://www.btcstudy.org/2025/09/19/ark-protocol-liquidity-illustration-by-second-docs/</id>
    <published>2025-09-19T09:10:25.000Z</published>
    <updated>2025-10-31T04:07:54.094Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Second Docs</em></p><p><em>来源：<a href="https://docs.second.tech/ark-protocol/liquidity/">https://docs.second.tech/ark-protocol/liquidity/</a></em></p></blockquote><p>当用户执行需要链上比特币来支持的操作 —— 比如刷新、离场和闪电支付 —— 时，Ark 服务商就必须先垫付比特币、等到被花费的 VTXO <a href="https://docs.second.tech/ark-protocol/expiries/">过期</a>之后才能清扫其中的资金（跟垫付的资金数量相等）。垫付的资金叫做 “ <em>流动性</em> ”，也跟 Ark 服务商带来了持续的资本要求，并在根本上塑造了 Ark 协议的经济学和手续费结构。</p><p>在闪电网络中，最终来说，用户为自己的（通道的）流动性负责；Ark 则将流动性管理的负担完全转移给了 Ark服务商，将用户从这种复杂性中解放出来（虽然他们依然需要负担流动性成本）。</p><p><img src="/../images/ark-protocol-liquidity-illustration-by-second-docs/liquidity-refresh.svg" alt="liquidity-refresh"></p><p style="text-align:center">- 简化的 Ark 操作流动性案例：用户刷新即将过期的 VTXO，这个服务商立即部署了 10 BTC、为新的 VTXO 注资，但必须等待旧的回合交易（也即被刷新的 VTXO 所在的回合交易）的时间锁过期，才能从被弃权的 VTXO 中回收 10 BTC —— 这就带来了一种临时的资金要求 -</p><h2 id="需要流动性的操作-vs-不需要流动性的操作"><a href="#需要流动性的操作-vs-不需要流动性的操作" class="headerlink" title="需要流动性的操作 vs. 不需要流动性的操作"></a>需要流动性的操作 vs. 不需要流动性的操作</h2><p><strong>需要流动性的操作</strong></p><p>这些操作需要 Ark 服务商垫付比特币（等待被花费的 VTXO 过期，然后回收等额的资金）：</p><ul><li><strong>刷新</strong>：最常见的需要流动性的操作。用户放弃旧的 VTXO，交换带有新的过期时间的新 VTXO 。</li><li><strong>离场</strong>：通过合作取款流程，将 VTXO 转变为链上资金。</li><li><strong>闪电支付</strong>：服务商要通过 <em>闪电网络网关</em>，在闪电网络中交付比特币支付。</li></ul><p><strong>不需要流动性的操作</strong></p><ul><li><strong>Ark 支付</strong>：在 Ark 用户之间发生的<a href="https://docs.second.tech/ark-protocol/payments/">回合外支付</a>，不需要流动性 —— 他们只是延伸了已有的<a href="https://docs.second.tech/ark-protocol/vtxo/#transaction-trees">交易树</a>。</li><li><strong>单方面退出</strong>：用户广播自己的 VTXO 中的预签名交易，不需要服务商参与并提供流动性。</li></ul><h2 id="流动性的成本与经济学"><a href="#流动性的成本与经济学" class="headerlink" title="流动性的成本与经济学"></a>流动性的成本与经济学</h2><p>为了给用户提供流动性，服务商必须维护一个比特币财库 —— 一笔准备金，以应对用户操作的需要。这带来一项经济上的取舍，是理解流动性成本的基础。</p><p><strong>机会成本原理</strong></p><p>一个 Ark 服务商财库中的比特币，如果部署到别的地方，也能也能带来回报 —— 比如放在闪电通道中赚取路由手续费和流动性手续费，或者通过比特币借贷平台借出。当一个 Ark 服务商锁定比特币来给自己的 Ark 提供流动性时，他放弃了这些潜在的收益机会。这种被放弃的潜在收益就被称为 <em>机会成本</em>。</p><p>Ark 服务商主要通过支付和流动性手续费来赚取收益。服务商自然会尝试自己的总手续费能够追平乃至超过可以在别的地方获得的收益，否则，在跟别的比特币投资机会竞争时，他们就没有吸引力了。</p><blockquote><p><strong>Ark 的流动性成本是比特币计价的</strong></p><p>Ark 服务商必须参考以比特币计价的回报率市场 —— 会跟美元市场的回报率截然不同。</p></blockquote><p><strong>如何计算流动性成本</strong></p><p>流动性成本取决于三个因素：</p><ol><li><strong>数额</strong>：被刷新或离场的比特币的数额</li><li><strong>剩余过期时间</strong>：被花费的 VTXO 还有多久就要过期（其中的资金就可以被回收）</li><li><strong>机会成本</strong>：服务商的以比特币计价的资金成本（比特币储蓄的预计年化回报率）</li></ol><p>公式是：<code>数额 * （剩余过期时间 / 365 天） * 机会成本 = 流动性成本</code> 。</p><p><strong>案例</strong></p><blockquote><p><strong>餐巾纸数学</strong></p><p>以下是粗糙的计算，是为了给你一些感觉 —— Second 的 Ark 服务商上线后的实际的手续费率可能不同，而且会随市场条件而波动。</p></blockquote><p>一个用户要刷新 10 万聪的 VTXO，这个 VTXO 在 5 天后就要过期，并假设机会成本是 5% 的年化利率：</p><pre><code>10 0000 聪 * （5 天 / 365 天） * 5 % = 68 聪（流动性成本）</code></pre><blockquote><p><strong>刷新也需要支付链上手续费</strong></p><p>刷新操作也需要支付区块确认手续费。如果一回合有 100 位用户刷新，而比特币网络为一笔交易的区块确认收取 2 万聪的手续费，那么每一个用户要承担的区块确认手续费成本就是大约 200 聪。所以，在上面这个例子中，总的刷新成本将是大约 268 聪（用 (68+200) 聪刷新 10 万聪，费率是 0.27%）。</p></blockquote><p><strong>VTXO 的年龄影响刷新成本</strong></p><ul><li><strong>年轻的 VTXO</strong>：最佳才创建的 VTXO， 拥有更高的刷新成本，因为服务商的流动性会被锁定更长时间</li><li><strong>年老的 VTXO</strong>：临近<a href="https://docs.second.tech/ark-protocol/expiries/">过期</a>的 <a href="https://docs.second.tech/ark-protocol/vtxo/">VTXO</a> ，刷新成本大大低于年轻的 VTXO，因为服务商的流动性只会被锁定很短一段时间。</li></ul><p><a href="https://docs.second.tech/ark-protocol/fees/">Ark 手续费</a>必须反映服务商的这些代价、自然地激励用户在更接近过期的时间刷新自己的 VTXO， 同时，让希望立即获得安全性的用户能更早发起刷新。</p><h2 id="Ark-的资金效率"><a href="#Ark-的资金效率" class="headerlink" title="Ark 的资金效率"></a>Ark 的资金效率</h2><p>Ark 通过两个关键因素实现了更高的资金效率：</p><ul><li><strong>精确的流动性用法</strong>：用户所消耗的流动性数量恰好等于他们的具体操作所需要的数量，并且就发生在他们需要流动性的时候，不需要预先注资。这跟闪电网络不同，通道必须预先注入资金，不论资金来自用户还是闪电网络服务商。</li><li><strong>不需要预测用户行为</strong>：服务商在用户需要时部署流动性，不需要预测用户行为和预先分配资金。闪电网络要求服务商预测用户的支付流以调整通道的容量，而 Ark 服务商可以动态地响应具体的使用模式。</li></ul><h2 id="管理流动性不足"><a href="#管理流动性不足" class="headerlink" title="管理流动性不足"></a>管理流动性不足</h2><p>我们预计服务商不太可能用尽流动性 —— 如果他们能够产生稳定的比特币收入，资本配置者就会有兴趣投资他们。如果他们没有兴趣，那表明这个服务商所收取的流动性手续费太低了。</p><p>不过，因为流动性不足依然有可能发生，服务商们依然要为这种情形作准备，在实际发生之前预测到流动性短缺。因为所有的 VTXO 过期信息都是提前可知的，服务商可以看到流动性需求到来，并相应作出机会。</p><p>当临近流动性不足时，服务商应该计算出处理紧急的请求（刷新或离场即将过期的 VTXO）需要多少比特币，并储备足够的流动性来应对这些关键的操作。他们可以拒绝不那么紧急的请求，比如会让流动性跌落到安全存量以下的年轻 VTXO 刷新。</p><p>经常面临流动性短缺的服务商会看到自己的信誉破产、收益减少，因为用户会寻找替代选择。因为，用户一向保留着单方面退出的选择，不管服务商的流动性状态如何。</p><p>（完）</p>]]></content>
    
    
    <summary type="html">为了给用户提供流动性，服务商必须维护一个比特币财库</summary>
    
    
    
    
    <category term="Ark" scheme="https://www.btcstudy.org/tags/Ark/"/>
    
  </entry>
  
  <entry>
    <title>图解 Ark 协议：单方面退出</title>
    <link href="https://www.btcstudy.org/2025/09/19/ark-protocol-unilateral-exits-illustration-by-second-docs/"/>
    <id>https://www.btcstudy.org/2025/09/19/ark-protocol-unilateral-exits-illustration-by-second-docs/</id>
    <published>2025-09-19T08:06:14.000Z</published>
    <updated>2025-10-31T04:07:54.094Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>作者：Second Docs</em></p><p><em>来源：<a href="https://docs.second.tech/ark-protocol/exit/">https://docs.second.tech/ark-protocol/exit/</a></em></p></blockquote><h2 id="什么时候需要用到-“单方面退出”？"><a href="#什么时候需要用到-“单方面退出”？" class="headerlink" title="什么时候需要用到 “单方面退出”？"></a>什么时候需要用到 “单方面退出”？</h2><p>单方面退出是一种紧急机制，用来保证用户总能保持对自己的比特币的控制，不论服务商操守如何。这种后备手段，是让 Ark 能够实现自主保管属性的根本原因。</p><p>在常规情形下，用户只应该使用将比特币从 Ark 实例中移回链上的标准离场流程。标准的离场流程要更加高效，费用也更低。</p><p>只有在服务商无响应、拒绝合理的离场请求时，才应该考虑单方面退出。这种情形可以分成三种：</p><h3 id="1-恶意行为"><a href="#1-恶意行为" class="headerlink" title="1. 恶意行为"></a>1. 恶意行为</h3><p>这个 Ark 服务商可能在作恶，尝试通过拒绝处理合理的离场请求来扣住（实质上也就是盗窃）用户的比特币。</p><h3 id="2-技术困难"><a href="#2-技术困难" class="headerlink" title="2. 技术困难"></a>2. 技术困难</h3><p>这个服务商可能正在经历是他们无法正常运营的技术难题。虽然这些问题可以预期只是暂时的，用户可能依然会感觉危急 —— 他们手上的 VTXO 可能界临过期。</p><h3 id="3-法律约束"><a href="#3-法律约束" class="headerlink" title="3. 法律约束"></a>3. 法律约束</h3><p>法律和监管行动可能阻止一个 Ark 服务商处理特定的要求。在这种情况下，这个服务商可能会被法律禁止处理来自特定用户或地区的离场请求。</p><h2 id="单方面退出的流程"><a href="#单方面退出的流程" class="headerlink" title="单方面退出的流程"></a>单方面退出的流程</h2><p>当一名用户或者 TA 的钱包 app 触发一次单方面退出的时候，他们必须广播按顺序一连串的交易（也即构成其 VTXO 的交易）。在队列中排在前面的交易必须先得到确认，然后下一笔交易才能广播，从而，这个多步骤的流程也需要细致的协调。</p><p>退出流程可以分成以下三个步骤：</p><ol><li><strong>第一笔分支交易</strong>：钱包 app 广播自己的 VTXO 所在交易树上的第一笔分支交易。</li><li><strong>等待确认</strong>：一旦确认，钱包广播队列中的下一笔分支交易。</li><li><strong>沿分支向下</strong>：上述过程不断重复 —— 总是广播下一笔分支交易、等待确认，然后再广播下一笔分支交易，直到最终到达交易树的叶子。</li><li><strong>广播退出交易（叶子）</strong>：广播树上的最后一笔交易，也即 <em>退出交易</em>。</li></ol><p>一旦退出交易得到广播以及确认，用户的比特币就回到了 “链上”，不会再过期了。不过，要花费这笔比特币依然需要 Ark 钱包中的数据 —— 失去这些数据意味着永远丢失这些已经退出的比特币。</p><p>为了让这些比特币可以用标准的备份方法（比如种子词）来花费，用户必须在这笔退出交易的相对时间锁过期之后，再广播一笔 <em>申领交易</em>。这个时间锁的倒计时从这笔退出交易得到确认的区块开始，为 Ark 服务商和其他用户留出了应对恶意退出的时间（即恶意用户在<a href="https://docs.second.tech/ark-protocol/forfeits-connectors/#how-forfeits-work">已经签名弃权交易</a>、或已经花掉自己的 VTXO 之后，依然尝试单方面退出）。</p><p><img src="/../images/ark-protocol-unilateral-exits-illustration-by-second-docs/unilateral-exit-and-claim.svg" alt="unilateral-exit-and-claim"></p><p style="text-align:center">- 案例：完整的退出和领取流程 -</p><h3 id="自动化的钱包管理"><a href="#自动化的钱包管理" class="headerlink" title="自动化的钱包管理"></a>自动化的钱包管理</h3><p>用户不需要手动管理单方面退出流程。设计良好的钱包软件会在触发单方面退出后自动广播整个交易序列。钱包软件会：</p><ul><li>监视区块链，等待交易确认。</li><li>在上一笔交易确认之后，自动广播队列中的下一笔交易。</li><li>追踪区块高度，以确认相对时间锁解锁的时间</li><li>执行最终的退出交易、完成整个流程。</li></ul><blockquote><p><strong>申领交易可能不是自动化的</strong></p><p>申领流程会不会作为默认单方面退出流程的一部分，取决于各钱包软件的退出条款和设定。</p></blockquote><h2 id="单方面退出的代价"><a href="#单方面退出的代价" class="headerlink" title="单方面退出的代价"></a>单方面退出的代价</h2><p>执行单方面退出的用户必须为序列中每一笔交易支付区块确认手续费。总的手续费成本取决于用户的刷新型 VTXO 交易树的深度（高度）（而这又是由同一回合中刷新的 VTXO 的数量决定的），加上额度的花费型 VTXO 的链条的长度。</p><blockquote><p><strong>单方面退出的经济可行性</strong></p><p>如果一个 VTXO 中的余额已抵不过广播退出交易所需的链上手续费总额，那么找回这些比特币可能在经济上是不可行的。不过，如下文的 “更早退出 vs. 更晚退出” 章节所解释的，同一回合的其他用户执行退出，可以降低你的退出成本 —— 其他用户广播和确认的交易每多一笔，你需要使之得到确认的交易就少一笔。</p></blockquote><h2 id="未完成的退出"><a href="#未完成的退出" class="headerlink" title="未完成的退出"></a>未完成的退出</h2><p>退出流程要等到最后一笔退出交易（交易树的叶子）得到广播和区块链确认才算完成。在此之前，这些比特币可以认为依然在 Ark 中 —— 也即 VTXO 依然会根据最初的过期时间而过期、被 Ark 服务商扫走。</p><p>这给了单方面退出一定程度的 “可取消性”。比如说，如果一位用户因为自己的 Ark 服务商下线了一段时间而发起退出，但在该用户广播了一些分支交易之后，这个 Ark 服务商又上线了，那他们可以选择放弃发布最后一笔退出交易，从而将这些比特币保留在 Ark 中。</p><p>部分完成的退出会增加 Ark 服务商在弃权和过期之后清扫资金的成本 —— 因为回合交易被切分成了几笔价值更小的交易，Ark 服务商必须（为更多笔交易）支付更多的区块确认手续费来回收资金（在没有人发起单方退出的情形下，只需要一笔）。</p><h2 id="更早发起的退出如何减少更晚退出的成本？"><a href="#更早发起的退出如何减少更晚退出的成本？" class="headerlink" title="更早发起的退出如何减少更晚退出的成本？"></a>更早发起的退出如何减少更晚退出的成本？</h2><p>但用户们发起单方面退出的时候，他们的行动会给参与同一回合的其他用户带来好处。这是因为，不同用户的 VTXO 会共享交易树上的分支。当一名用户为了自己退出而广播一笔分支交易的时候，就减少了处于同一分支的其他用户需要广播的交易的数量。在许多用户都需要单方面退出的情形中，那些更早退出的用户，会实质上减少那些更晚退出的人的退出成本。</p><h2 id="在高费率时期管理退出"><a href="#在高费率时期管理退出" class="headerlink" title="在高费率时期管理退出"></a>在高费率时期管理退出</h2><p>当比特币网络的区块确认手续费率显著升高的时候，一个 VTXO 的价值还抵不过退出成本的情形就可能出现。这给 Ark 协议带来重要的考虑。</p><p><strong>服务商</strong></p><p>Ark 服务商不太可能基于退出的经济可行性来监控或约束交易：</p><ul><li>退出的经济可行性取决于 VTXO 价值意外的多种因素</li><li>用户有不同的风险容忍和手续费偏好</li><li>协议应该在经济条件面前保持中立</li></ul><p><strong>用户</strong></p><p>钱包应用应该转而为用户实现合适的安全保护。选项包括：</p><ul><li>在一个 VTXO 可能要消耗掉自身的一大部分价值才能退出时提醒用户。</li><li>退出手续费估算工具，帮助用户作出明智的决策。</li><li>推迟退出、让其他用户先退出（从而降低退出成本）的选项。</li></ul><p>（完）</p>]]></content>
    
    
    <summary type="html">这种后备手段，是让 Ark 能够实现自主保管属性的根本原因</summary>
    
    
    
    
    <category term="Ark" scheme="https://www.btcstudy.org/tags/Ark/"/>
    
  </entry>
  
</feed>
